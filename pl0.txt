Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> _1_funclist_optional func
Rule 3     _1_funclist_optional -> funclist
Rule 4     _1_funclist_optional -> <empty>
Rule 5     func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
Rule 6     _2_parmlist_optional -> parmlist
Rule 7     _2_parmlist_optional -> <empty>
Rule 8     _3_locallist_optional -> locallist
Rule 9     _3_locallist_optional -> <empty>
Rule 10    parmlist -> _4_parmlist_optional parm
Rule 11    _4_parmlist_optional -> parmlist
Rule 12    _4_parmlist_optional -> <empty>
Rule 13    parm -> ID : datatype
Rule 14    datatype -> FLOAT _5_225b22_expr_225d22_optional
Rule 15    _5_225b22_expr_225d22_optional -> [ expr ]
Rule 16    _5_225b22_expr_225d22_optional -> <empty>
Rule 17    datatype -> INT _6_225b22_expr_225d22_optional
Rule 18    _6_225b22_expr_225d22_optional -> [ expr ]
Rule 19    _6_225b22_expr_225d22_optional -> <empty>
Rule 20    locallist -> local
Rule 21    locallist -> locallist ; _7_local_223b22_repeat
Rule 22    _7_local_223b22_repeat -> _7_local_223b22_items
Rule 23    _7_local_223b22_repeat -> <empty>
Rule 24    _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item
Rule 25    _7_local_223b22_items -> _7_local_223b22_item
Rule 26    _7_local_223b22_item -> local ;
Rule 27    local -> func
Rule 28    local -> parm
Rule 29    stmtlist -> stmt _8_223b22_stmt_repeat
Rule 30    _8_223b22_stmt_repeat -> _8_223b22_stmt_items
Rule 31    _8_223b22_stmt_repeat -> <empty>
Rule 32    _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item
Rule 33    _8_223b22_stmt_items -> _8_223b22_stmt_item
Rule 34    _8_223b22_stmt_item -> ; stmt
Rule 35    literal -> FCONST
Rule 36    literal -> ICONST
Rule 37    literal -> STRING
Rule 38    stmt -> ID ( exprlist )
Rule 39    stmt -> SKIP
Rule 40    stmt -> RETURN expr
Rule 41    stmt -> location ASSIGNOP expr
Rule 42    stmt -> BEGIN stmtlist END
Rule 43    stmt -> IF relation THEN stmt
Rule 44    stmt -> BREAK
Rule 45    stmt -> WHILE relation DO stmt
Rule 46    stmt -> READ ( location )
Rule 47    stmt -> WRITE ( expr )
Rule 48    stmt -> PRINT ( literal )
Rule 49    location -> ID _9_225b22_expr_225d22_optional
Rule 50    _9_225b22_expr_225d22_optional -> [ expr ]
Rule 51    _9_225b22_expr_225d22_optional -> <empty>
Rule 52    exprlist -> expr _10_222c22_expr_repeat
Rule 53    _10_222c22_expr_repeat -> _10_222c22_expr_items
Rule 54    _10_222c22_expr_repeat -> <empty>
Rule 55    _10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item
Rule 56    _10_222c22_expr_items -> _10_222c22_expr_item
Rule 57    _10_222c22_expr_item -> , expr
Rule 58    expr -> factor
Rule 59    expr -> factor - expr
Rule 60    expr -> factor + expr
Rule 61    factor -> term
Rule 62    factor -> term / factor
Rule 63    factor -> term * factor
Rule 64    term -> + term
Rule 65    term -> - term
Rule 66    term -> FLOAT ( expr )
Rule 67    term -> INT ( expr )
Rule 68    term -> ( relation )
Rule 69    term -> FCONST
Rule 70    term -> ICONST
Rule 71    term -> ID
Rule 72    term -> ID [ exprlist ]
Rule 73    term -> ID ( exprlist )
Rule 74    relation -> NOT relation  [precedence=right, level=5]
Rule 75    relation -> relation OR relation  [precedence=left, level=1]
Rule 76    relation -> relation AND relation  [precedence=left, level=2]
Rule 77    relation -> expr DF expr  [precedence=left, level=3]
Rule 78    relation -> expr ET expr  [precedence=left, level=3]
Rule 79    relation -> expr GE expr  [precedence=left, level=4]
Rule 80    relation -> expr GT expr  [precedence=left, level=4]
Rule 81    relation -> expr LE expr  [precedence=left, level=4]
Rule 82    relation -> expr LT expr  [precedence=left, level=4]

Unused terminals:

    COMMENT

Terminals, with rules where they appear:

(                    : 5 38 46 47 48 66 67 68 73
)                    : 5 38 46 47 48 66 67 68 73
*                    : 63
+                    : 60 64
,                    : 57
-                    : 59 65
/                    : 62
:                    : 13
;                    : 21 26 34
AND                  : 76
ASSIGNOP             : 41
BEGIN                : 5 42
BREAK                : 44
COMMENT              : 
DF                   : 77
DO                   : 45
END                  : 5 42
ET                   : 78
FCONST               : 35 69
FLOAT                : 14 66
FUN                  : 5
GE                   : 79
GT                   : 80
ICONST               : 36 70
ID                   : 5 13 38 49 71 72 73
IF                   : 43
INT                  : 17 67
LE                   : 81
LT                   : 82
NOT                  : 74
OR                   : 75
PRINT                : 48
READ                 : 46
RETURN               : 40
SKIP                 : 39
STRING               : 37
THEN                 : 43
WHILE                : 45
WRITE                : 47
[                    : 15 18 50 72
]                    : 15 18 50 72
error                : 

Nonterminals, with rules where they appear:

_10_222c22_expr_item : 55 56
_10_222c22_expr_items : 53 55
_10_222c22_expr_repeat : 52
_1_funclist_optional : 2
_2_parmlist_optional : 5
_3_locallist_optional : 5
_4_parmlist_optional : 10
_5_225b22_expr_225d22_optional : 14
_6_225b22_expr_225d22_optional : 17
_7_local_223b22_item : 24 25
_7_local_223b22_items : 22 24
_7_local_223b22_repeat : 21
_8_223b22_stmt_item  : 32 33
_8_223b22_stmt_items : 30 32
_8_223b22_stmt_repeat : 29
_9_225b22_expr_225d22_optional : 49
datatype             : 13
expr                 : 15 18 40 41 47 50 52 57 59 60 66 67 77 77 78 78 79 79 80 80 81 81 82 82
exprlist             : 38 72 73
factor               : 58 59 60 62 63
func                 : 2 27
funclist             : 1 3
literal              : 48
local                : 20 26
locallist            : 8 21
location             : 41 46
parm                 : 10 28
parmlist             : 6 11
program              : 0
relation             : 43 45 68 74 75 75 76 76
stmt                 : 29 34 43 45
stmtlist             : 5 42
term                 : 61 62 63 64 65


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . _1_funclist_optional func
    (3) _1_funclist_optional -> . funclist
    (4) _1_funclist_optional -> .
    FUN             reduce using rule 4 (_1_funclist_optional -> .)

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    _1_funclist_optional           shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) _1_funclist_optional -> funclist .
    $end            reduce using rule 1 (program -> funclist .)
    FUN             reduce using rule 3 (_1_funclist_optional -> funclist .)


state 3

    (2) funclist -> _1_funclist_optional . func
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    FUN             shift and go to state 5

    func                           shift and go to state 4

state 4

    (2) funclist -> _1_funclist_optional func .
    $end            reduce using rule 2 (funclist -> _1_funclist_optional func .)
    FUN             reduce using rule 2 (funclist -> _1_funclist_optional func .)


state 5

    (5) func -> FUN . ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    ID              shift and go to state 6


state 6

    (5) func -> FUN ID . ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (               shift and go to state 7


state 7

    (5) func -> FUN ID ( . _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (6) _2_parmlist_optional -> . parmlist
    (7) _2_parmlist_optional -> .
    (10) parmlist -> . _4_parmlist_optional parm
    (11) _4_parmlist_optional -> . parmlist
    (12) _4_parmlist_optional -> .
    )               reduce using rule 7 (_2_parmlist_optional -> .)
    ID              reduce using rule 12 (_4_parmlist_optional -> .)

    _2_parmlist_optional           shift and go to state 8
    parmlist                       shift and go to state 9
    _4_parmlist_optional           shift and go to state 10

state 8

    (5) func -> FUN ID ( _2_parmlist_optional . ) _3_locallist_optional BEGIN stmtlist END
    )               shift and go to state 11


state 9

    (6) _2_parmlist_optional -> parmlist .
    (11) _4_parmlist_optional -> parmlist .
    )               reduce using rule 6 (_2_parmlist_optional -> parmlist .)
    ID              reduce using rule 11 (_4_parmlist_optional -> parmlist .)


state 10

    (10) parmlist -> _4_parmlist_optional . parm
    (13) parm -> . ID : datatype
    ID              shift and go to state 13

    parm                           shift and go to state 12

state 11

    (5) func -> FUN ID ( _2_parmlist_optional ) . _3_locallist_optional BEGIN stmtlist END
    (8) _3_locallist_optional -> . locallist
    (9) _3_locallist_optional -> .
    (20) locallist -> . local
    (21) locallist -> . locallist ; _7_local_223b22_repeat
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    BEGIN           reduce using rule 9 (_3_locallist_optional -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 13

    _3_locallist_optional          shift and go to state 14
    locallist                      shift and go to state 15
    local                          shift and go to state 16
    func                           shift and go to state 17
    parm                           shift and go to state 18

state 12

    (10) parmlist -> _4_parmlist_optional parm .
    )               reduce using rule 10 (parmlist -> _4_parmlist_optional parm .)
    ID              reduce using rule 10 (parmlist -> _4_parmlist_optional parm .)


state 13

    (13) parm -> ID . : datatype
    :               shift and go to state 19


state 14

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional . BEGIN stmtlist END
    BEGIN           shift and go to state 20


state 15

    (8) _3_locallist_optional -> locallist .
    (21) locallist -> locallist . ; _7_local_223b22_repeat
    BEGIN           reduce using rule 8 (_3_locallist_optional -> locallist .)
    ;               shift and go to state 21


state 16

    (20) locallist -> local .
    ;               reduce using rule 20 (locallist -> local .)
    BEGIN           reduce using rule 20 (locallist -> local .)


state 17

    (27) local -> func .
    ;               reduce using rule 27 (local -> func .)
    BEGIN           reduce using rule 27 (local -> func .)


state 18

    (28) local -> parm .
    ;               reduce using rule 28 (local -> parm .)
    BEGIN           reduce using rule 28 (local -> parm .)


state 19

    (13) parm -> ID : . datatype
    (14) datatype -> . FLOAT _5_225b22_expr_225d22_optional
    (17) datatype -> . INT _6_225b22_expr_225d22_optional
    FLOAT           shift and go to state 23
    INT             shift and go to state 24

    datatype                       shift and go to state 22

state 20

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt
    (44) stmt -> . BREAK
    (45) stmt -> . WHILE relation DO stmt
    (46) stmt -> . READ ( location )
    (47) stmt -> . WRITE ( expr )
    (48) stmt -> . PRINT ( literal )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 25
    SKIP            shift and go to state 29
    RETURN          shift and go to state 30
    BEGIN           shift and go to state 26
    IF              shift and go to state 32
    BREAK           shift and go to state 33
    WHILE           shift and go to state 34
    READ            shift and go to state 35
    WRITE           shift and go to state 36
    PRINT           shift and go to state 37

    stmtlist                       shift and go to state 27
    stmt                           shift and go to state 28
    location                       shift and go to state 31

state 21

    (21) locallist -> locallist ; . _7_local_223b22_repeat
    (22) _7_local_223b22_repeat -> . _7_local_223b22_items
    (23) _7_local_223b22_repeat -> .
    (24) _7_local_223b22_items -> . _7_local_223b22_items _7_local_223b22_item
    (25) _7_local_223b22_items -> . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 23 (_7_local_223b22_repeat -> .)
    BEGIN           reduce using rule 23 (_7_local_223b22_repeat -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 13

    _7_local_223b22_repeat         shift and go to state 38
    _7_local_223b22_items          shift and go to state 39
    _7_local_223b22_item           shift and go to state 40
    local                          shift and go to state 41
    func                           shift and go to state 17
    parm                           shift and go to state 18

state 22

    (13) parm -> ID : datatype .
    )               reduce using rule 13 (parm -> ID : datatype .)
    ID              reduce using rule 13 (parm -> ID : datatype .)
    ;               reduce using rule 13 (parm -> ID : datatype .)
    BEGIN           reduce using rule 13 (parm -> ID : datatype .)


state 23

    (14) datatype -> FLOAT . _5_225b22_expr_225d22_optional
    (15) _5_225b22_expr_225d22_optional -> . [ expr ]
    (16) _5_225b22_expr_225d22_optional -> .
    [               shift and go to state 43
    )               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    ID              reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)

    _5_225b22_expr_225d22_optional shift and go to state 42

state 24

    (17) datatype -> INT . _6_225b22_expr_225d22_optional
    (18) _6_225b22_expr_225d22_optional -> . [ expr ]
    (19) _6_225b22_expr_225d22_optional -> .
    [               shift and go to state 45
    )               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    ID              reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)

    _6_225b22_expr_225d22_optional shift and go to state 44

state 25

    (38) stmt -> ID . ( exprlist )
    (49) location -> ID . _9_225b22_expr_225d22_optional
    (50) _9_225b22_expr_225d22_optional -> . [ expr ]
    (51) _9_225b22_expr_225d22_optional -> .
    (               shift and go to state 46
    [               shift and go to state 48
    ASSIGNOP        reduce using rule 51 (_9_225b22_expr_225d22_optional -> .)

    _9_225b22_expr_225d22_optional shift and go to state 47

state 26

    (42) stmt -> BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt
    (44) stmt -> . BREAK
    (45) stmt -> . WHILE relation DO stmt
    (46) stmt -> . READ ( location )
    (47) stmt -> . WRITE ( expr )
    (48) stmt -> . PRINT ( literal )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 25
    SKIP            shift and go to state 29
    RETURN          shift and go to state 30
    BEGIN           shift and go to state 26
    IF              shift and go to state 32
    BREAK           shift and go to state 33
    WHILE           shift and go to state 34
    READ            shift and go to state 35
    WRITE           shift and go to state 36
    PRINT           shift and go to state 37

    stmtlist                       shift and go to state 49
    stmt                           shift and go to state 28
    location                       shift and go to state 31

state 27

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist . END
    END             shift and go to state 50


state 28

    (29) stmtlist -> stmt . _8_223b22_stmt_repeat
    (30) _8_223b22_stmt_repeat -> . _8_223b22_stmt_items
    (31) _8_223b22_stmt_repeat -> .
    (32) _8_223b22_stmt_items -> . _8_223b22_stmt_items _8_223b22_stmt_item
    (33) _8_223b22_stmt_items -> . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
    END             reduce using rule 31 (_8_223b22_stmt_repeat -> .)
    ;               shift and go to state 54

    _8_223b22_stmt_repeat          shift and go to state 51
    _8_223b22_stmt_items           shift and go to state 52
    _8_223b22_stmt_item            shift and go to state 53

state 29

    (39) stmt -> SKIP .
    ;               reduce using rule 39 (stmt -> SKIP .)
    END             reduce using rule 39 (stmt -> SKIP .)


state 30

    (40) stmt -> RETURN . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 55
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 31

    (41) stmt -> location . ASSIGNOP expr
    ASSIGNOP        shift and go to state 66


state 32

    (43) stmt -> IF . relation THEN stmt
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 67
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 33

    (44) stmt -> BREAK .
    ;               reduce using rule 44 (stmt -> BREAK .)
    END             reduce using rule 44 (stmt -> BREAK .)


state 34

    (45) stmt -> WHILE . relation DO stmt
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 70
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 35

    (46) stmt -> READ . ( location )
    (               shift and go to state 71


state 36

    (47) stmt -> WRITE . ( expr )
    (               shift and go to state 72


state 37

    (48) stmt -> PRINT . ( literal )
    (               shift and go to state 73


state 38

    (21) locallist -> locallist ; _7_local_223b22_repeat .
    ;               reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)
    BEGIN           reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)


state 39

    (22) _7_local_223b22_repeat -> _7_local_223b22_items .
    (24) _7_local_223b22_items -> _7_local_223b22_items . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    BEGIN           reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    FUN             shift and go to state 5
    ID              shift and go to state 13

    _7_local_223b22_item           shift and go to state 74
    local                          shift and go to state 41
    func                           shift and go to state 17
    parm                           shift and go to state 18

state 40

    (25) _7_local_223b22_items -> _7_local_223b22_item .
    FUN             reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ID              reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ;               reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    BEGIN           reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)


state 41

    (26) _7_local_223b22_item -> local . ;
    ;               shift and go to state 75


state 42

    (14) datatype -> FLOAT _5_225b22_expr_225d22_optional .
    )               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    ID              reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    ;               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)


state 43

    (15) _5_225b22_expr_225d22_optional -> [ . expr ]
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 76
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 44

    (17) datatype -> INT _6_225b22_expr_225d22_optional .
    )               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    ID              reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    ;               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)


state 45

    (18) _6_225b22_expr_225d22_optional -> [ . expr ]
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 77
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 46

    (38) stmt -> ID ( . exprlist )
    (52) exprlist -> . expr _10_222c22_expr_repeat
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    exprlist                       shift and go to state 78
    expr                           shift and go to state 79
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 47

    (49) location -> ID _9_225b22_expr_225d22_optional .
    ASSIGNOP        reduce using rule 49 (location -> ID _9_225b22_expr_225d22_optional .)
    )               reduce using rule 49 (location -> ID _9_225b22_expr_225d22_optional .)


state 48

    (50) _9_225b22_expr_225d22_optional -> [ . expr ]
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 80
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 49

    (42) stmt -> BEGIN stmtlist . END
    END             shift and go to state 81


state 50

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .
    $end            reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    FUN             reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    ;               reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    BEGIN           reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)


state 51

    (29) stmtlist -> stmt _8_223b22_stmt_repeat .
    END             reduce using rule 29 (stmtlist -> stmt _8_223b22_stmt_repeat .)


state 52

    (30) _8_223b22_stmt_repeat -> _8_223b22_stmt_items .
    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
    END             reduce using rule 30 (_8_223b22_stmt_repeat -> _8_223b22_stmt_items .)
    ;               shift and go to state 54

    _8_223b22_stmt_item            shift and go to state 82

state 53

    (33) _8_223b22_stmt_items -> _8_223b22_stmt_item .
    ;               reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)
    END             reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)


state 54

    (34) _8_223b22_stmt_item -> ; . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt
    (44) stmt -> . BREAK
    (45) stmt -> . WHILE relation DO stmt
    (46) stmt -> . READ ( location )
    (47) stmt -> . WRITE ( expr )
    (48) stmt -> . PRINT ( literal )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 25
    SKIP            shift and go to state 29
    RETURN          shift and go to state 30
    BEGIN           shift and go to state 26
    IF              shift and go to state 32
    BREAK           shift and go to state 33
    WHILE           shift and go to state 34
    READ            shift and go to state 35
    WRITE           shift and go to state 36
    PRINT           shift and go to state 37

    stmt                           shift and go to state 83
    location                       shift and go to state 31

state 55

    (40) stmt -> RETURN expr .
    ;               reduce using rule 40 (stmt -> RETURN expr .)
    END             reduce using rule 40 (stmt -> RETURN expr .)


state 56

    (58) expr -> factor .
    (59) expr -> factor . - expr
    (60) expr -> factor . + expr
    ;               reduce using rule 58 (expr -> factor .)
    END             reduce using rule 58 (expr -> factor .)
    DF              reduce using rule 58 (expr -> factor .)
    ET              reduce using rule 58 (expr -> factor .)
    GE              reduce using rule 58 (expr -> factor .)
    GT              reduce using rule 58 (expr -> factor .)
    LE              reduce using rule 58 (expr -> factor .)
    LT              reduce using rule 58 (expr -> factor .)
    ]               reduce using rule 58 (expr -> factor .)
    ,               reduce using rule 58 (expr -> factor .)
    )               reduce using rule 58 (expr -> factor .)
    THEN            reduce using rule 58 (expr -> factor .)
    OR              reduce using rule 58 (expr -> factor .)
    AND             reduce using rule 58 (expr -> factor .)
    DO              reduce using rule 58 (expr -> factor .)
    -               shift and go to state 84
    +               shift and go to state 85


state 57

    (65) term -> - . term
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    term                           shift and go to state 86

state 58

    (64) term -> + . term
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    term                           shift and go to state 87

state 59

    (61) factor -> term .
    (62) factor -> term . / factor
    (63) factor -> term . * factor
    -               reduce using rule 61 (factor -> term .)
    +               reduce using rule 61 (factor -> term .)
    ;               reduce using rule 61 (factor -> term .)
    END             reduce using rule 61 (factor -> term .)
    DF              reduce using rule 61 (factor -> term .)
    ET              reduce using rule 61 (factor -> term .)
    GE              reduce using rule 61 (factor -> term .)
    GT              reduce using rule 61 (factor -> term .)
    LE              reduce using rule 61 (factor -> term .)
    LT              reduce using rule 61 (factor -> term .)
    ]               reduce using rule 61 (factor -> term .)
    ,               reduce using rule 61 (factor -> term .)
    )               reduce using rule 61 (factor -> term .)
    THEN            reduce using rule 61 (factor -> term .)
    OR              reduce using rule 61 (factor -> term .)
    AND             reduce using rule 61 (factor -> term .)
    DO              reduce using rule 61 (factor -> term .)
    /               shift and go to state 88
    *               shift and go to state 89


state 60

    (66) term -> FLOAT . ( expr )
    (               shift and go to state 90


state 61

    (68) term -> ( . relation )
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 91
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 62

    (67) term -> INT . ( expr )
    (               shift and go to state 92


state 63

    (69) term -> FCONST .
    /               reduce using rule 69 (term -> FCONST .)
    *               reduce using rule 69 (term -> FCONST .)
    -               reduce using rule 69 (term -> FCONST .)
    +               reduce using rule 69 (term -> FCONST .)
    ;               reduce using rule 69 (term -> FCONST .)
    END             reduce using rule 69 (term -> FCONST .)
    DF              reduce using rule 69 (term -> FCONST .)
    ET              reduce using rule 69 (term -> FCONST .)
    GE              reduce using rule 69 (term -> FCONST .)
    GT              reduce using rule 69 (term -> FCONST .)
    LE              reduce using rule 69 (term -> FCONST .)
    LT              reduce using rule 69 (term -> FCONST .)
    ]               reduce using rule 69 (term -> FCONST .)
    ,               reduce using rule 69 (term -> FCONST .)
    )               reduce using rule 69 (term -> FCONST .)
    THEN            reduce using rule 69 (term -> FCONST .)
    OR              reduce using rule 69 (term -> FCONST .)
    AND             reduce using rule 69 (term -> FCONST .)
    DO              reduce using rule 69 (term -> FCONST .)


state 64

    (70) term -> ICONST .
    /               reduce using rule 70 (term -> ICONST .)
    *               reduce using rule 70 (term -> ICONST .)
    -               reduce using rule 70 (term -> ICONST .)
    +               reduce using rule 70 (term -> ICONST .)
    ;               reduce using rule 70 (term -> ICONST .)
    END             reduce using rule 70 (term -> ICONST .)
    DF              reduce using rule 70 (term -> ICONST .)
    ET              reduce using rule 70 (term -> ICONST .)
    GE              reduce using rule 70 (term -> ICONST .)
    GT              reduce using rule 70 (term -> ICONST .)
    LE              reduce using rule 70 (term -> ICONST .)
    LT              reduce using rule 70 (term -> ICONST .)
    ]               reduce using rule 70 (term -> ICONST .)
    ,               reduce using rule 70 (term -> ICONST .)
    )               reduce using rule 70 (term -> ICONST .)
    THEN            reduce using rule 70 (term -> ICONST .)
    OR              reduce using rule 70 (term -> ICONST .)
    AND             reduce using rule 70 (term -> ICONST .)
    DO              reduce using rule 70 (term -> ICONST .)


state 65

    (71) term -> ID .
    (72) term -> ID . [ exprlist ]
    (73) term -> ID . ( exprlist )
    /               reduce using rule 71 (term -> ID .)
    *               reduce using rule 71 (term -> ID .)
    -               reduce using rule 71 (term -> ID .)
    +               reduce using rule 71 (term -> ID .)
    ;               reduce using rule 71 (term -> ID .)
    END             reduce using rule 71 (term -> ID .)
    DF              reduce using rule 71 (term -> ID .)
    ET              reduce using rule 71 (term -> ID .)
    GE              reduce using rule 71 (term -> ID .)
    GT              reduce using rule 71 (term -> ID .)
    LE              reduce using rule 71 (term -> ID .)
    LT              reduce using rule 71 (term -> ID .)
    ]               reduce using rule 71 (term -> ID .)
    ,               reduce using rule 71 (term -> ID .)
    )               reduce using rule 71 (term -> ID .)
    THEN            reduce using rule 71 (term -> ID .)
    OR              reduce using rule 71 (term -> ID .)
    AND             reduce using rule 71 (term -> ID .)
    DO              reduce using rule 71 (term -> ID .)
    [               shift and go to state 93
    (               shift and go to state 94


state 66

    (41) stmt -> location ASSIGNOP . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 95
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 67

    (43) stmt -> IF relation . THEN stmt
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    THEN            shift and go to state 96
    OR              shift and go to state 97
    AND             shift and go to state 98


state 68

    (74) relation -> NOT . relation
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 99
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 69

    (77) relation -> expr . DF expr
    (78) relation -> expr . ET expr
    (79) relation -> expr . GE expr
    (80) relation -> expr . GT expr
    (81) relation -> expr . LE expr
    (82) relation -> expr . LT expr
    DF              shift and go to state 100
    ET              shift and go to state 101
    GE              shift and go to state 102
    GT              shift and go to state 103
    LE              shift and go to state 104
    LT              shift and go to state 105


state 70

    (45) stmt -> WHILE relation . DO stmt
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    DO              shift and go to state 106
    OR              shift and go to state 97
    AND             shift and go to state 98


state 71

    (46) stmt -> READ ( . location )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 108

    location                       shift and go to state 107

state 72

    (47) stmt -> WRITE ( . expr )
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 109
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 73

    (48) stmt -> PRINT ( . literal )
    (35) literal -> . FCONST
    (36) literal -> . ICONST
    (37) literal -> . STRING
    FCONST          shift and go to state 111
    ICONST          shift and go to state 112
    STRING          shift and go to state 113

    literal                        shift and go to state 110

state 74

    (24) _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .
    FUN             reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ID              reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ;               reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    BEGIN           reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)


state 75

    (26) _7_local_223b22_item -> local ; .
    FUN             reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ID              reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ;               reduce using rule 26 (_7_local_223b22_item -> local ; .)
    BEGIN           reduce using rule 26 (_7_local_223b22_item -> local ; .)


state 76

    (15) _5_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 114


state 77

    (18) _6_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 115


state 78

    (38) stmt -> ID ( exprlist . )
    )               shift and go to state 116


state 79

    (52) exprlist -> expr . _10_222c22_expr_repeat
    (53) _10_222c22_expr_repeat -> . _10_222c22_expr_items
    (54) _10_222c22_expr_repeat -> .
    (55) _10_222c22_expr_items -> . _10_222c22_expr_items _10_222c22_expr_item
    (56) _10_222c22_expr_items -> . _10_222c22_expr_item
    (57) _10_222c22_expr_item -> . , expr
    )               reduce using rule 54 (_10_222c22_expr_repeat -> .)
    ]               reduce using rule 54 (_10_222c22_expr_repeat -> .)
    ,               shift and go to state 120

    _10_222c22_expr_repeat         shift and go to state 117
    _10_222c22_expr_items          shift and go to state 118
    _10_222c22_expr_item           shift and go to state 119

state 80

    (50) _9_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 121


state 81

    (42) stmt -> BEGIN stmtlist END .
    ;               reduce using rule 42 (stmt -> BEGIN stmtlist END .)
    END             reduce using rule 42 (stmt -> BEGIN stmtlist END .)


state 82

    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .
    ;               reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)
    END             reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)


state 83

    (34) _8_223b22_stmt_item -> ; stmt .
    ;               reduce using rule 34 (_8_223b22_stmt_item -> ; stmt .)
    END             reduce using rule 34 (_8_223b22_stmt_item -> ; stmt .)


state 84

    (59) expr -> factor - . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    factor                         shift and go to state 56
    expr                           shift and go to state 122
    term                           shift and go to state 59

state 85

    (60) expr -> factor + . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    factor                         shift and go to state 56
    expr                           shift and go to state 123
    term                           shift and go to state 59

state 86

    (65) term -> - term .
    /               reduce using rule 65 (term -> - term .)
    *               reduce using rule 65 (term -> - term .)
    -               reduce using rule 65 (term -> - term .)
    +               reduce using rule 65 (term -> - term .)
    ;               reduce using rule 65 (term -> - term .)
    END             reduce using rule 65 (term -> - term .)
    DF              reduce using rule 65 (term -> - term .)
    ET              reduce using rule 65 (term -> - term .)
    GE              reduce using rule 65 (term -> - term .)
    GT              reduce using rule 65 (term -> - term .)
    LE              reduce using rule 65 (term -> - term .)
    LT              reduce using rule 65 (term -> - term .)
    ]               reduce using rule 65 (term -> - term .)
    ,               reduce using rule 65 (term -> - term .)
    )               reduce using rule 65 (term -> - term .)
    THEN            reduce using rule 65 (term -> - term .)
    OR              reduce using rule 65 (term -> - term .)
    AND             reduce using rule 65 (term -> - term .)
    DO              reduce using rule 65 (term -> - term .)


state 87

    (64) term -> + term .
    /               reduce using rule 64 (term -> + term .)
    *               reduce using rule 64 (term -> + term .)
    -               reduce using rule 64 (term -> + term .)
    +               reduce using rule 64 (term -> + term .)
    ;               reduce using rule 64 (term -> + term .)
    END             reduce using rule 64 (term -> + term .)
    DF              reduce using rule 64 (term -> + term .)
    ET              reduce using rule 64 (term -> + term .)
    GE              reduce using rule 64 (term -> + term .)
    GT              reduce using rule 64 (term -> + term .)
    LE              reduce using rule 64 (term -> + term .)
    LT              reduce using rule 64 (term -> + term .)
    ]               reduce using rule 64 (term -> + term .)
    ,               reduce using rule 64 (term -> + term .)
    )               reduce using rule 64 (term -> + term .)
    THEN            reduce using rule 64 (term -> + term .)
    OR              reduce using rule 64 (term -> + term .)
    AND             reduce using rule 64 (term -> + term .)
    DO              reduce using rule 64 (term -> + term .)


state 88

    (62) factor -> term / . factor
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    term                           shift and go to state 59
    factor                         shift and go to state 124

state 89

    (63) factor -> term * . factor
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    term                           shift and go to state 59
    factor                         shift and go to state 125

state 90

    (66) term -> FLOAT ( . expr )
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 126
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 91

    (68) term -> ( relation . )
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    )               shift and go to state 127
    OR              shift and go to state 97
    AND             shift and go to state 98


state 92

    (67) term -> INT ( . expr )
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 128
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 93

    (72) term -> ID [ . exprlist ]
    (52) exprlist -> . expr _10_222c22_expr_repeat
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    exprlist                       shift and go to state 129
    expr                           shift and go to state 79
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 94

    (73) term -> ID ( . exprlist )
    (52) exprlist -> . expr _10_222c22_expr_repeat
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    exprlist                       shift and go to state 130
    expr                           shift and go to state 79
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 95

    (41) stmt -> location ASSIGNOP expr .
    ;               reduce using rule 41 (stmt -> location ASSIGNOP expr .)
    END             reduce using rule 41 (stmt -> location ASSIGNOP expr .)


state 96

    (43) stmt -> IF relation THEN . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt
    (44) stmt -> . BREAK
    (45) stmt -> . WHILE relation DO stmt
    (46) stmt -> . READ ( location )
    (47) stmt -> . WRITE ( expr )
    (48) stmt -> . PRINT ( literal )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 25
    SKIP            shift and go to state 29
    RETURN          shift and go to state 30
    BEGIN           shift and go to state 26
    IF              shift and go to state 32
    BREAK           shift and go to state 33
    WHILE           shift and go to state 34
    READ            shift and go to state 35
    WRITE           shift and go to state 36
    PRINT           shift and go to state 37

    stmt                           shift and go to state 131
    location                       shift and go to state 31

state 97

    (75) relation -> relation OR . relation
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 132
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 98

    (76) relation -> relation AND . relation
    (74) relation -> . NOT relation
    (75) relation -> . relation OR relation
    (76) relation -> . relation AND relation
    (77) relation -> . expr DF expr
    (78) relation -> . expr ET expr
    (79) relation -> . expr GE expr
    (80) relation -> . expr GT expr
    (81) relation -> . expr LE expr
    (82) relation -> . expr LT expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    NOT             shift and go to state 68
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    relation                       shift and go to state 133
    expr                           shift and go to state 69
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 99

    (74) relation -> NOT relation .
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    THEN            reduce using rule 74 (relation -> NOT relation .)
    OR              reduce using rule 74 (relation -> NOT relation .)
    AND             reduce using rule 74 (relation -> NOT relation .)
    DO              reduce using rule 74 (relation -> NOT relation .)
    )               reduce using rule 74 (relation -> NOT relation .)


state 100

    (77) relation -> expr DF . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 134
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 101

    (78) relation -> expr ET . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 135
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 102

    (79) relation -> expr GE . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 136
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 103

    (80) relation -> expr GT . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 137
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 104

    (81) relation -> expr LE . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 138
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 105

    (82) relation -> expr LT . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 139
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 106

    (45) stmt -> WHILE relation DO . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt
    (44) stmt -> . BREAK
    (45) stmt -> . WHILE relation DO stmt
    (46) stmt -> . READ ( location )
    (47) stmt -> . WRITE ( expr )
    (48) stmt -> . PRINT ( literal )
    (49) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 25
    SKIP            shift and go to state 29
    RETURN          shift and go to state 30
    BEGIN           shift and go to state 26
    IF              shift and go to state 32
    BREAK           shift and go to state 33
    WHILE           shift and go to state 34
    READ            shift and go to state 35
    WRITE           shift and go to state 36
    PRINT           shift and go to state 37

    stmt                           shift and go to state 140
    location                       shift and go to state 31

state 107

    (46) stmt -> READ ( location . )
    )               shift and go to state 141


state 108

    (49) location -> ID . _9_225b22_expr_225d22_optional
    (50) _9_225b22_expr_225d22_optional -> . [ expr ]
    (51) _9_225b22_expr_225d22_optional -> .
    [               shift and go to state 48
    )               reduce using rule 51 (_9_225b22_expr_225d22_optional -> .)

    _9_225b22_expr_225d22_optional shift and go to state 47

state 109

    (47) stmt -> WRITE ( expr . )
    )               shift and go to state 142


state 110

    (48) stmt -> PRINT ( literal . )
    )               shift and go to state 143


state 111

    (35) literal -> FCONST .
    )               reduce using rule 35 (literal -> FCONST .)


state 112

    (36) literal -> ICONST .
    )               reduce using rule 36 (literal -> ICONST .)


state 113

    (37) literal -> STRING .
    )               reduce using rule 37 (literal -> STRING .)


state 114

    (15) _5_225b22_expr_225d22_optional -> [ expr ] .
    )               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    ID              reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)


state 115

    (18) _6_225b22_expr_225d22_optional -> [ expr ] .
    )               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    ID              reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)


state 116

    (38) stmt -> ID ( exprlist ) .
    ;               reduce using rule 38 (stmt -> ID ( exprlist ) .)
    END             reduce using rule 38 (stmt -> ID ( exprlist ) .)


state 117

    (52) exprlist -> expr _10_222c22_expr_repeat .
    )               reduce using rule 52 (exprlist -> expr _10_222c22_expr_repeat .)
    ]               reduce using rule 52 (exprlist -> expr _10_222c22_expr_repeat .)


state 118

    (53) _10_222c22_expr_repeat -> _10_222c22_expr_items .
    (55) _10_222c22_expr_items -> _10_222c22_expr_items . _10_222c22_expr_item
    (57) _10_222c22_expr_item -> . , expr
    )               reduce using rule 53 (_10_222c22_expr_repeat -> _10_222c22_expr_items .)
    ]               reduce using rule 53 (_10_222c22_expr_repeat -> _10_222c22_expr_items .)
    ,               shift and go to state 120

    _10_222c22_expr_item           shift and go to state 144

state 119

    (56) _10_222c22_expr_items -> _10_222c22_expr_item .
    ,               reduce using rule 56 (_10_222c22_expr_items -> _10_222c22_expr_item .)
    )               reduce using rule 56 (_10_222c22_expr_items -> _10_222c22_expr_item .)
    ]               reduce using rule 56 (_10_222c22_expr_items -> _10_222c22_expr_item .)


state 120

    (57) _10_222c22_expr_item -> , . expr
    (58) expr -> . factor
    (59) expr -> . factor - expr
    (60) expr -> . factor + expr
    (61) factor -> . term
    (62) factor -> . term / factor
    (63) factor -> . term * factor
    (64) term -> . + term
    (65) term -> . - term
    (66) term -> . FLOAT ( expr )
    (67) term -> . INT ( expr )
    (68) term -> . ( relation )
    (69) term -> . FCONST
    (70) term -> . ICONST
    (71) term -> . ID
    (72) term -> . ID [ exprlist ]
    (73) term -> . ID ( exprlist )
    +               shift and go to state 58
    -               shift and go to state 57
    FLOAT           shift and go to state 60
    INT             shift and go to state 62
    (               shift and go to state 61
    FCONST          shift and go to state 63
    ICONST          shift and go to state 64
    ID              shift and go to state 65

    expr                           shift and go to state 145
    factor                         shift and go to state 56
    term                           shift and go to state 59

state 121

    (50) _9_225b22_expr_225d22_optional -> [ expr ] .
    ASSIGNOP        reduce using rule 50 (_9_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 50 (_9_225b22_expr_225d22_optional -> [ expr ] .)


state 122

    (59) expr -> factor - expr .
    ;               reduce using rule 59 (expr -> factor - expr .)
    END             reduce using rule 59 (expr -> factor - expr .)
    DF              reduce using rule 59 (expr -> factor - expr .)
    ET              reduce using rule 59 (expr -> factor - expr .)
    GE              reduce using rule 59 (expr -> factor - expr .)
    GT              reduce using rule 59 (expr -> factor - expr .)
    LE              reduce using rule 59 (expr -> factor - expr .)
    LT              reduce using rule 59 (expr -> factor - expr .)
    ]               reduce using rule 59 (expr -> factor - expr .)
    ,               reduce using rule 59 (expr -> factor - expr .)
    )               reduce using rule 59 (expr -> factor - expr .)
    THEN            reduce using rule 59 (expr -> factor - expr .)
    OR              reduce using rule 59 (expr -> factor - expr .)
    AND             reduce using rule 59 (expr -> factor - expr .)
    DO              reduce using rule 59 (expr -> factor - expr .)


state 123

    (60) expr -> factor + expr .
    ;               reduce using rule 60 (expr -> factor + expr .)
    END             reduce using rule 60 (expr -> factor + expr .)
    DF              reduce using rule 60 (expr -> factor + expr .)
    ET              reduce using rule 60 (expr -> factor + expr .)
    GE              reduce using rule 60 (expr -> factor + expr .)
    GT              reduce using rule 60 (expr -> factor + expr .)
    LE              reduce using rule 60 (expr -> factor + expr .)
    LT              reduce using rule 60 (expr -> factor + expr .)
    ]               reduce using rule 60 (expr -> factor + expr .)
    ,               reduce using rule 60 (expr -> factor + expr .)
    )               reduce using rule 60 (expr -> factor + expr .)
    THEN            reduce using rule 60 (expr -> factor + expr .)
    OR              reduce using rule 60 (expr -> factor + expr .)
    AND             reduce using rule 60 (expr -> factor + expr .)
    DO              reduce using rule 60 (expr -> factor + expr .)


state 124

    (62) factor -> term / factor .
    -               reduce using rule 62 (factor -> term / factor .)
    +               reduce using rule 62 (factor -> term / factor .)
    ;               reduce using rule 62 (factor -> term / factor .)
    END             reduce using rule 62 (factor -> term / factor .)
    DF              reduce using rule 62 (factor -> term / factor .)
    ET              reduce using rule 62 (factor -> term / factor .)
    GE              reduce using rule 62 (factor -> term / factor .)
    GT              reduce using rule 62 (factor -> term / factor .)
    LE              reduce using rule 62 (factor -> term / factor .)
    LT              reduce using rule 62 (factor -> term / factor .)
    ]               reduce using rule 62 (factor -> term / factor .)
    ,               reduce using rule 62 (factor -> term / factor .)
    )               reduce using rule 62 (factor -> term / factor .)
    THEN            reduce using rule 62 (factor -> term / factor .)
    OR              reduce using rule 62 (factor -> term / factor .)
    AND             reduce using rule 62 (factor -> term / factor .)
    DO              reduce using rule 62 (factor -> term / factor .)


state 125

    (63) factor -> term * factor .
    -               reduce using rule 63 (factor -> term * factor .)
    +               reduce using rule 63 (factor -> term * factor .)
    ;               reduce using rule 63 (factor -> term * factor .)
    END             reduce using rule 63 (factor -> term * factor .)
    DF              reduce using rule 63 (factor -> term * factor .)
    ET              reduce using rule 63 (factor -> term * factor .)
    GE              reduce using rule 63 (factor -> term * factor .)
    GT              reduce using rule 63 (factor -> term * factor .)
    LE              reduce using rule 63 (factor -> term * factor .)
    LT              reduce using rule 63 (factor -> term * factor .)
    ]               reduce using rule 63 (factor -> term * factor .)
    ,               reduce using rule 63 (factor -> term * factor .)
    )               reduce using rule 63 (factor -> term * factor .)
    THEN            reduce using rule 63 (factor -> term * factor .)
    OR              reduce using rule 63 (factor -> term * factor .)
    AND             reduce using rule 63 (factor -> term * factor .)
    DO              reduce using rule 63 (factor -> term * factor .)


state 126

    (66) term -> FLOAT ( expr . )
    )               shift and go to state 146


state 127

    (68) term -> ( relation ) .
    /               reduce using rule 68 (term -> ( relation ) .)
    *               reduce using rule 68 (term -> ( relation ) .)
    -               reduce using rule 68 (term -> ( relation ) .)
    +               reduce using rule 68 (term -> ( relation ) .)
    ;               reduce using rule 68 (term -> ( relation ) .)
    END             reduce using rule 68 (term -> ( relation ) .)
    DF              reduce using rule 68 (term -> ( relation ) .)
    ET              reduce using rule 68 (term -> ( relation ) .)
    GE              reduce using rule 68 (term -> ( relation ) .)
    GT              reduce using rule 68 (term -> ( relation ) .)
    LE              reduce using rule 68 (term -> ( relation ) .)
    LT              reduce using rule 68 (term -> ( relation ) .)
    ]               reduce using rule 68 (term -> ( relation ) .)
    ,               reduce using rule 68 (term -> ( relation ) .)
    )               reduce using rule 68 (term -> ( relation ) .)
    THEN            reduce using rule 68 (term -> ( relation ) .)
    OR              reduce using rule 68 (term -> ( relation ) .)
    AND             reduce using rule 68 (term -> ( relation ) .)
    DO              reduce using rule 68 (term -> ( relation ) .)


state 128

    (67) term -> INT ( expr . )
    )               shift and go to state 147


state 129

    (72) term -> ID [ exprlist . ]
    ]               shift and go to state 148


state 130

    (73) term -> ID ( exprlist . )
    )               shift and go to state 149


state 131

    (43) stmt -> IF relation THEN stmt .
    ;               reduce using rule 43 (stmt -> IF relation THEN stmt .)
    END             reduce using rule 43 (stmt -> IF relation THEN stmt .)


state 132

    (75) relation -> relation OR relation .
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    THEN            reduce using rule 75 (relation -> relation OR relation .)
    OR              reduce using rule 75 (relation -> relation OR relation .)
    DO              reduce using rule 75 (relation -> relation OR relation .)
    )               reduce using rule 75 (relation -> relation OR relation .)
    AND             shift and go to state 98


state 133

    (76) relation -> relation AND relation .
    (75) relation -> relation . OR relation
    (76) relation -> relation . AND relation
    THEN            reduce using rule 76 (relation -> relation AND relation .)
    OR              reduce using rule 76 (relation -> relation AND relation .)
    AND             reduce using rule 76 (relation -> relation AND relation .)
    DO              reduce using rule 76 (relation -> relation AND relation .)
    )               reduce using rule 76 (relation -> relation AND relation .)


state 134

    (77) relation -> expr DF expr .
    THEN            reduce using rule 77 (relation -> expr DF expr .)
    OR              reduce using rule 77 (relation -> expr DF expr .)
    AND             reduce using rule 77 (relation -> expr DF expr .)
    DO              reduce using rule 77 (relation -> expr DF expr .)
    )               reduce using rule 77 (relation -> expr DF expr .)


state 135

    (78) relation -> expr ET expr .
    THEN            reduce using rule 78 (relation -> expr ET expr .)
    OR              reduce using rule 78 (relation -> expr ET expr .)
    AND             reduce using rule 78 (relation -> expr ET expr .)
    DO              reduce using rule 78 (relation -> expr ET expr .)
    )               reduce using rule 78 (relation -> expr ET expr .)


state 136

    (79) relation -> expr GE expr .
    THEN            reduce using rule 79 (relation -> expr GE expr .)
    OR              reduce using rule 79 (relation -> expr GE expr .)
    AND             reduce using rule 79 (relation -> expr GE expr .)
    DO              reduce using rule 79 (relation -> expr GE expr .)
    )               reduce using rule 79 (relation -> expr GE expr .)


state 137

    (80) relation -> expr GT expr .
    THEN            reduce using rule 80 (relation -> expr GT expr .)
    OR              reduce using rule 80 (relation -> expr GT expr .)
    AND             reduce using rule 80 (relation -> expr GT expr .)
    DO              reduce using rule 80 (relation -> expr GT expr .)
    )               reduce using rule 80 (relation -> expr GT expr .)


state 138

    (81) relation -> expr LE expr .
    THEN            reduce using rule 81 (relation -> expr LE expr .)
    OR              reduce using rule 81 (relation -> expr LE expr .)
    AND             reduce using rule 81 (relation -> expr LE expr .)
    DO              reduce using rule 81 (relation -> expr LE expr .)
    )               reduce using rule 81 (relation -> expr LE expr .)


state 139

    (82) relation -> expr LT expr .
    THEN            reduce using rule 82 (relation -> expr LT expr .)
    OR              reduce using rule 82 (relation -> expr LT expr .)
    AND             reduce using rule 82 (relation -> expr LT expr .)
    DO              reduce using rule 82 (relation -> expr LT expr .)
    )               reduce using rule 82 (relation -> expr LT expr .)


state 140

    (45) stmt -> WHILE relation DO stmt .
    ;               reduce using rule 45 (stmt -> WHILE relation DO stmt .)
    END             reduce using rule 45 (stmt -> WHILE relation DO stmt .)


state 141

    (46) stmt -> READ ( location ) .
    ;               reduce using rule 46 (stmt -> READ ( location ) .)
    END             reduce using rule 46 (stmt -> READ ( location ) .)


state 142

    (47) stmt -> WRITE ( expr ) .
    ;               reduce using rule 47 (stmt -> WRITE ( expr ) .)
    END             reduce using rule 47 (stmt -> WRITE ( expr ) .)


state 143

    (48) stmt -> PRINT ( literal ) .
    ;               reduce using rule 48 (stmt -> PRINT ( literal ) .)
    END             reduce using rule 48 (stmt -> PRINT ( literal ) .)


state 144

    (55) _10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .
    ,               reduce using rule 55 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)
    )               reduce using rule 55 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)
    ]               reduce using rule 55 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)


state 145

    (57) _10_222c22_expr_item -> , expr .
    ,               reduce using rule 57 (_10_222c22_expr_item -> , expr .)
    )               reduce using rule 57 (_10_222c22_expr_item -> , expr .)
    ]               reduce using rule 57 (_10_222c22_expr_item -> , expr .)


state 146

    (66) term -> FLOAT ( expr ) .
    /               reduce using rule 66 (term -> FLOAT ( expr ) .)
    *               reduce using rule 66 (term -> FLOAT ( expr ) .)
    -               reduce using rule 66 (term -> FLOAT ( expr ) .)
    +               reduce using rule 66 (term -> FLOAT ( expr ) .)
    ;               reduce using rule 66 (term -> FLOAT ( expr ) .)
    END             reduce using rule 66 (term -> FLOAT ( expr ) .)
    DF              reduce using rule 66 (term -> FLOAT ( expr ) .)
    ET              reduce using rule 66 (term -> FLOAT ( expr ) .)
    GE              reduce using rule 66 (term -> FLOAT ( expr ) .)
    GT              reduce using rule 66 (term -> FLOAT ( expr ) .)
    LE              reduce using rule 66 (term -> FLOAT ( expr ) .)
    LT              reduce using rule 66 (term -> FLOAT ( expr ) .)
    ]               reduce using rule 66 (term -> FLOAT ( expr ) .)
    ,               reduce using rule 66 (term -> FLOAT ( expr ) .)
    )               reduce using rule 66 (term -> FLOAT ( expr ) .)
    THEN            reduce using rule 66 (term -> FLOAT ( expr ) .)
    OR              reduce using rule 66 (term -> FLOAT ( expr ) .)
    AND             reduce using rule 66 (term -> FLOAT ( expr ) .)
    DO              reduce using rule 66 (term -> FLOAT ( expr ) .)


state 147

    (67) term -> INT ( expr ) .
    /               reduce using rule 67 (term -> INT ( expr ) .)
    *               reduce using rule 67 (term -> INT ( expr ) .)
    -               reduce using rule 67 (term -> INT ( expr ) .)
    +               reduce using rule 67 (term -> INT ( expr ) .)
    ;               reduce using rule 67 (term -> INT ( expr ) .)
    END             reduce using rule 67 (term -> INT ( expr ) .)
    DF              reduce using rule 67 (term -> INT ( expr ) .)
    ET              reduce using rule 67 (term -> INT ( expr ) .)
    GE              reduce using rule 67 (term -> INT ( expr ) .)
    GT              reduce using rule 67 (term -> INT ( expr ) .)
    LE              reduce using rule 67 (term -> INT ( expr ) .)
    LT              reduce using rule 67 (term -> INT ( expr ) .)
    ]               reduce using rule 67 (term -> INT ( expr ) .)
    ,               reduce using rule 67 (term -> INT ( expr ) .)
    )               reduce using rule 67 (term -> INT ( expr ) .)
    THEN            reduce using rule 67 (term -> INT ( expr ) .)
    OR              reduce using rule 67 (term -> INT ( expr ) .)
    AND             reduce using rule 67 (term -> INT ( expr ) .)
    DO              reduce using rule 67 (term -> INT ( expr ) .)


state 148

    (72) term -> ID [ exprlist ] .
    /               reduce using rule 72 (term -> ID [ exprlist ] .)
    *               reduce using rule 72 (term -> ID [ exprlist ] .)
    -               reduce using rule 72 (term -> ID [ exprlist ] .)
    +               reduce using rule 72 (term -> ID [ exprlist ] .)
    ;               reduce using rule 72 (term -> ID [ exprlist ] .)
    END             reduce using rule 72 (term -> ID [ exprlist ] .)
    DF              reduce using rule 72 (term -> ID [ exprlist ] .)
    ET              reduce using rule 72 (term -> ID [ exprlist ] .)
    GE              reduce using rule 72 (term -> ID [ exprlist ] .)
    GT              reduce using rule 72 (term -> ID [ exprlist ] .)
    LE              reduce using rule 72 (term -> ID [ exprlist ] .)
    LT              reduce using rule 72 (term -> ID [ exprlist ] .)
    ]               reduce using rule 72 (term -> ID [ exprlist ] .)
    ,               reduce using rule 72 (term -> ID [ exprlist ] .)
    )               reduce using rule 72 (term -> ID [ exprlist ] .)
    THEN            reduce using rule 72 (term -> ID [ exprlist ] .)
    OR              reduce using rule 72 (term -> ID [ exprlist ] .)
    AND             reduce using rule 72 (term -> ID [ exprlist ] .)
    DO              reduce using rule 72 (term -> ID [ exprlist ] .)


state 149

    (73) term -> ID ( exprlist ) .
    /               reduce using rule 73 (term -> ID ( exprlist ) .)
    *               reduce using rule 73 (term -> ID ( exprlist ) .)
    -               reduce using rule 73 (term -> ID ( exprlist ) .)
    +               reduce using rule 73 (term -> ID ( exprlist ) .)
    ;               reduce using rule 73 (term -> ID ( exprlist ) .)
    END             reduce using rule 73 (term -> ID ( exprlist ) .)
    DF              reduce using rule 73 (term -> ID ( exprlist ) .)
    ET              reduce using rule 73 (term -> ID ( exprlist ) .)
    GE              reduce using rule 73 (term -> ID ( exprlist ) .)
    GT              reduce using rule 73 (term -> ID ( exprlist ) .)
    LE              reduce using rule 73 (term -> ID ( exprlist ) .)
    LT              reduce using rule 73 (term -> ID ( exprlist ) .)
    ]               reduce using rule 73 (term -> ID ( exprlist ) .)
    ,               reduce using rule 73 (term -> ID ( exprlist ) .)
    )               reduce using rule 73 (term -> ID ( exprlist ) .)
    THEN            reduce using rule 73 (term -> ID ( exprlist ) .)
    OR              reduce using rule 73 (term -> ID ( exprlist ) .)
    AND             reduce using rule 73 (term -> ID ( exprlist ) .)
    DO              reduce using rule 73 (term -> ID ( exprlist ) .)
