Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> _1_funclist_optional func
Rule 3     _1_funclist_optional -> funclist
Rule 4     _1_funclist_optional -> <empty>
Rule 5     func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
Rule 6     _2_parmlist_optional -> parmlist
Rule 7     _2_parmlist_optional -> <empty>
Rule 8     _3_locallist_optional -> locallist
Rule 9     _3_locallist_optional -> <empty>
Rule 10    parmlist -> _4_parmlist_222c22_optional parm
Rule 11    _4_parmlist_222c22_optional -> parmlist ,
Rule 12    _4_parmlist_222c22_optional -> <empty>
Rule 13    parm -> ID : datatype
Rule 14    datatype -> FLOAT _5_225b22_expr_225d22_optional
Rule 15    _5_225b22_expr_225d22_optional -> [ expr ]
Rule 16    _5_225b22_expr_225d22_optional -> <empty>
Rule 17    datatype -> INT _6_225b22_expr_225d22_optional
Rule 18    _6_225b22_expr_225d22_optional -> [ expr ]
Rule 19    _6_225b22_expr_225d22_optional -> <empty>
Rule 20    locallist -> local
Rule 21    locallist -> locallist ; _7_local_223b22_repeat
Rule 22    _7_local_223b22_repeat -> _7_local_223b22_items
Rule 23    _7_local_223b22_repeat -> <empty>
Rule 24    _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item
Rule 25    _7_local_223b22_items -> _7_local_223b22_item
Rule 26    _7_local_223b22_item -> local ;
Rule 27    local -> func
Rule 28    local -> parm
Rule 29    stmtlist -> stmt _8_223b22_stmt_repeat
Rule 30    _8_223b22_stmt_repeat -> _8_223b22_stmt_items
Rule 31    _8_223b22_stmt_repeat -> <empty>
Rule 32    _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item
Rule 33    _8_223b22_stmt_items -> _8_223b22_stmt_item
Rule 34    _8_223b22_stmt_item -> ; stmt
Rule 35    literal -> FCONST
Rule 36    literal -> ICONST
Rule 37    literal -> STRING
Rule 38    instr_relacionada -> stmt
Rule 39    instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada
Rule 40    instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta
Rule 41    instr_abierta -> IF expr THEN instr
Rule 42    instr -> instr_abierta
Rule 43    instr -> instr_relacionada
Rule 44    stmt -> ID ( exprlist )
Rule 45    stmt -> SKIP
Rule 46    stmt -> RETURN expr
Rule 47    stmt -> location ASSIGNOP expr
Rule 48    stmt -> BEGIN stmtlist END
Rule 49    stmt -> instr
Rule 50    stmt -> BREAK
Rule 51    stmt -> WHILE relation DO stmt
Rule 52    stmt -> READ ( location )
Rule 53    stmt -> WRITE ( expr )
Rule 54    stmt -> PRINT ( literal )
Rule 55    location -> ID _9_225b22_expr_225d22_optional
Rule 56    _9_225b22_expr_225d22_optional -> [ expr ]
Rule 57    _9_225b22_expr_225d22_optional -> <empty>
Rule 58    exprlist -> expr _10_222c22_expr_repeat
Rule 59    _10_222c22_expr_repeat -> _10_222c22_expr_items
Rule 60    _10_222c22_expr_repeat -> <empty>
Rule 61    _10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item
Rule 62    _10_222c22_expr_items -> _10_222c22_expr_item
Rule 63    _10_222c22_expr_item -> , expr
Rule 64    expr -> factor
Rule 65    expr -> factor - expr
Rule 66    expr -> factor + expr
Rule 67    factor -> term
Rule 68    factor -> term / factor
Rule 69    factor -> term * factor
Rule 70    term -> ( expr )
Rule 71    term -> + term
Rule 72    term -> - term
Rule 73    term -> FLOAT ( expr )
Rule 74    term -> INT ( expr )
Rule 75    term -> ( relation )
Rule 76    term -> FCONST
Rule 77    term -> ICONST
Rule 78    term -> ID
Rule 79    term -> ID [ exprlist ]
Rule 80    term -> ID ( exprlist )
Rule 81    relation -> NOT relation  [precedence=right, level=5]
Rule 82    relation -> relation OR relation  [precedence=left, level=1]
Rule 83    relation -> relation AND relation  [precedence=left, level=2]
Rule 84    relation -> expr DF expr  [precedence=left, level=3]
Rule 85    relation -> expr ET expr  [precedence=left, level=3]
Rule 86    relation -> expr GE expr  [precedence=left, level=4]
Rule 87    relation -> expr GT expr  [precedence=left, level=4]
Rule 88    relation -> expr LE expr  [precedence=left, level=4]
Rule 89    relation -> expr LT expr  [precedence=left, level=4]

Terminals, with rules where they appear:

(                    : 5 44 52 53 54 70 73 74 75 80
)                    : 5 44 52 53 54 70 73 74 75 80
*                    : 69
+                    : 66 71
,                    : 11 63
-                    : 65 72
/                    : 68
:                    : 13
;                    : 21 26 34
AND                  : 83
ASSIGNOP             : 47
BEGIN                : 5 48
BREAK                : 50
DF                   : 84
DO                   : 51
ELSE                 : 39 40
END                  : 5 48
ET                   : 85
FCONST               : 35 76
FLOAT                : 14 73
FUN                  : 5
GE                   : 86
GT                   : 87
ICONST               : 36 77
ID                   : 5 13 44 55 78 79 80
IF                   : 39 40 41
INT                  : 17 74
LE                   : 88
LT                   : 89
NOT                  : 81
OR                   : 82
PRINT                : 54
READ                 : 52
RETURN               : 46
SKIP                 : 45
STRING               : 37
THEN                 : 39 40 41
WHILE                : 51
WRITE                : 53
[                    : 15 18 56 79
]                    : 15 18 56 79
error                : 

Nonterminals, with rules where they appear:

_10_222c22_expr_item : 61 62
_10_222c22_expr_items : 59 61
_10_222c22_expr_repeat : 58
_1_funclist_optional : 2
_2_parmlist_optional : 5
_3_locallist_optional : 5
_4_parmlist_222c22_optional : 10
_5_225b22_expr_225d22_optional : 14
_6_225b22_expr_225d22_optional : 17
_7_local_223b22_item : 24 25
_7_local_223b22_items : 22 24
_7_local_223b22_repeat : 21
_8_223b22_stmt_item  : 32 33
_8_223b22_stmt_items : 30 32
_8_223b22_stmt_repeat : 29
_9_225b22_expr_225d22_optional : 55
datatype             : 13
expr                 : 15 18 39 40 41 46 47 53 56 58 63 65 66 70 73 74 84 84 85 85 86 86 87 87 88 88 89 89
exprlist             : 44 79 80
factor               : 64 65 66 68 69
func                 : 2 27
funclist             : 1 3
instr                : 41 49
instr_abierta        : 40 42
instr_relacionada    : 39 39 40 43
literal              : 54
local                : 20 26
locallist            : 8 21
location             : 47 52
parm                 : 10 28
parmlist             : 6 11
program              : 0
relation             : 51 75 81 82 82 83 83
stmt                 : 29 34 38 51
stmtlist             : 5 48
term                 : 67 68 69 71 72


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . _1_funclist_optional func
    (3) _1_funclist_optional -> . funclist
    (4) _1_funclist_optional -> .
    FUN             reduce using rule 4 (_1_funclist_optional -> .)

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    _1_funclist_optional           shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) _1_funclist_optional -> funclist .
    $end            reduce using rule 1 (program -> funclist .)
    FUN             reduce using rule 3 (_1_funclist_optional -> funclist .)


state 3

    (2) funclist -> _1_funclist_optional . func
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    FUN             shift and go to state 5

    func                           shift and go to state 4

state 4

    (2) funclist -> _1_funclist_optional func .
    $end            reduce using rule 2 (funclist -> _1_funclist_optional func .)
    FUN             reduce using rule 2 (funclist -> _1_funclist_optional func .)


state 5

    (5) func -> FUN . ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    ID              shift and go to state 6


state 6

    (5) func -> FUN ID . ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (               shift and go to state 7


state 7

    (5) func -> FUN ID ( . _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (6) _2_parmlist_optional -> . parmlist
    (7) _2_parmlist_optional -> .
    (10) parmlist -> . _4_parmlist_222c22_optional parm
    (11) _4_parmlist_222c22_optional -> . parmlist ,
    (12) _4_parmlist_222c22_optional -> .
    )               reduce using rule 7 (_2_parmlist_optional -> .)
    ID              reduce using rule 12 (_4_parmlist_222c22_optional -> .)

    _2_parmlist_optional           shift and go to state 8
    parmlist                       shift and go to state 9
    _4_parmlist_222c22_optional    shift and go to state 10

state 8

    (5) func -> FUN ID ( _2_parmlist_optional . ) _3_locallist_optional BEGIN stmtlist END
    )               shift and go to state 11


state 9

    (6) _2_parmlist_optional -> parmlist .
    (11) _4_parmlist_222c22_optional -> parmlist . ,
    )               reduce using rule 6 (_2_parmlist_optional -> parmlist .)
    ,               shift and go to state 12


state 10

    (10) parmlist -> _4_parmlist_222c22_optional . parm
    (13) parm -> . ID : datatype
    ID              shift and go to state 14

    parm                           shift and go to state 13

state 11

    (5) func -> FUN ID ( _2_parmlist_optional ) . _3_locallist_optional BEGIN stmtlist END
    (8) _3_locallist_optional -> . locallist
    (9) _3_locallist_optional -> .
    (20) locallist -> . local
    (21) locallist -> . locallist ; _7_local_223b22_repeat
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    BEGIN           reduce using rule 9 (_3_locallist_optional -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _3_locallist_optional          shift and go to state 15
    locallist                      shift and go to state 16
    local                          shift and go to state 17
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 12

    (11) _4_parmlist_222c22_optional -> parmlist , .
    ID              reduce using rule 11 (_4_parmlist_222c22_optional -> parmlist , .)


state 13

    (10) parmlist -> _4_parmlist_222c22_optional parm .
    ,               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)
    )               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)


state 14

    (13) parm -> ID . : datatype
    :               shift and go to state 20


state 15

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional . BEGIN stmtlist END
    BEGIN           shift and go to state 21


state 16

    (8) _3_locallist_optional -> locallist .
    (21) locallist -> locallist . ; _7_local_223b22_repeat
    BEGIN           reduce using rule 8 (_3_locallist_optional -> locallist .)
    ;               shift and go to state 22


state 17

    (20) locallist -> local .
    ;               reduce using rule 20 (locallist -> local .)
    BEGIN           reduce using rule 20 (locallist -> local .)


state 18

    (27) local -> func .
    ;               reduce using rule 27 (local -> func .)
    BEGIN           reduce using rule 27 (local -> func .)


state 19

    (28) local -> parm .
    ;               reduce using rule 28 (local -> parm .)
    BEGIN           reduce using rule 28 (local -> parm .)


state 20

    (13) parm -> ID : . datatype
    (14) datatype -> . FLOAT _5_225b22_expr_225d22_optional
    (17) datatype -> . INT _6_225b22_expr_225d22_optional
    FLOAT           shift and go to state 24
    INT             shift and go to state 25

    datatype                       shift and go to state 23

state 21

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38
    IF              shift and go to state 41

    stmtlist                       shift and go to state 28
    stmt                           shift and go to state 29
    location                       shift and go to state 32
    instr                          shift and go to state 33
    instr_abierta                  shift and go to state 39
    instr_relacionada              shift and go to state 40

state 22

    (21) locallist -> locallist ; . _7_local_223b22_repeat
    (22) _7_local_223b22_repeat -> . _7_local_223b22_items
    (23) _7_local_223b22_repeat -> .
    (24) _7_local_223b22_items -> . _7_local_223b22_items _7_local_223b22_item
    (25) _7_local_223b22_items -> . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 23 (_7_local_223b22_repeat -> .)
    BEGIN           reduce using rule 23 (_7_local_223b22_repeat -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _7_local_223b22_repeat         shift and go to state 42
    _7_local_223b22_items          shift and go to state 43
    _7_local_223b22_item           shift and go to state 44
    local                          shift and go to state 45
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 23

    (13) parm -> ID : datatype .
    ,               reduce using rule 13 (parm -> ID : datatype .)
    )               reduce using rule 13 (parm -> ID : datatype .)
    ;               reduce using rule 13 (parm -> ID : datatype .)
    BEGIN           reduce using rule 13 (parm -> ID : datatype .)


state 24

    (14) datatype -> FLOAT . _5_225b22_expr_225d22_optional
    (15) _5_225b22_expr_225d22_optional -> . [ expr ]
    (16) _5_225b22_expr_225d22_optional -> .
    [               shift and go to state 47
    ,               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    )               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)

    _5_225b22_expr_225d22_optional shift and go to state 46

state 25

    (17) datatype -> INT . _6_225b22_expr_225d22_optional
    (18) _6_225b22_expr_225d22_optional -> . [ expr ]
    (19) _6_225b22_expr_225d22_optional -> .
    [               shift and go to state 49
    ,               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    )               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)

    _6_225b22_expr_225d22_optional shift and go to state 48

state 26

    (44) stmt -> ID . ( exprlist )
    (55) location -> ID . _9_225b22_expr_225d22_optional
    (56) _9_225b22_expr_225d22_optional -> . [ expr ]
    (57) _9_225b22_expr_225d22_optional -> .
    (               shift and go to state 50
    [               shift and go to state 52
    ASSIGNOP        reduce using rule 57 (_9_225b22_expr_225d22_optional -> .)

    _9_225b22_expr_225d22_optional shift and go to state 51

state 27

    (48) stmt -> BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38
    IF              shift and go to state 41

    stmtlist                       shift and go to state 53
    stmt                           shift and go to state 29
    location                       shift and go to state 32
    instr                          shift and go to state 33
    instr_abierta                  shift and go to state 39
    instr_relacionada              shift and go to state 40

state 28

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist . END
    END             shift and go to state 54


state 29

    (29) stmtlist -> stmt . _8_223b22_stmt_repeat
    (38) instr_relacionada -> stmt .
    (30) _8_223b22_stmt_repeat -> . _8_223b22_stmt_items
    (31) _8_223b22_stmt_repeat -> .
    (32) _8_223b22_stmt_items -> . _8_223b22_stmt_items _8_223b22_stmt_item
    (33) _8_223b22_stmt_items -> . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
  ! reduce/reduce conflict for END resolved using rule 38 (instr_relacionada -> stmt .)
  ! shift/reduce conflict for ; resolved as shift
    END             reduce using rule 38 (instr_relacionada -> stmt .)
    ;               shift and go to state 58

    _8_223b22_stmt_repeat          shift and go to state 55
    _8_223b22_stmt_items           shift and go to state 56
    _8_223b22_stmt_item            shift and go to state 57

state 30

    (45) stmt -> SKIP .
    ;               reduce using rule 45 (stmt -> SKIP .)
    END             reduce using rule 45 (stmt -> SKIP .)
    ELSE            reduce using rule 45 (stmt -> SKIP .)


state 31

    (46) stmt -> RETURN . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 59
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 32

    (47) stmt -> location . ASSIGNOP expr
    ASSIGNOP        shift and go to state 70


state 33

    (49) stmt -> instr .
    ;               reduce using rule 49 (stmt -> instr .)
    END             reduce using rule 49 (stmt -> instr .)
    ELSE            reduce using rule 49 (stmt -> instr .)


state 34

    (50) stmt -> BREAK .
    ;               reduce using rule 50 (stmt -> BREAK .)
    END             reduce using rule 50 (stmt -> BREAK .)
    ELSE            reduce using rule 50 (stmt -> BREAK .)


state 35

    (51) stmt -> WHILE . relation DO stmt
    (81) relation -> . NOT relation
    (82) relation -> . relation OR relation
    (83) relation -> . relation AND relation
    (84) relation -> . expr DF expr
    (85) relation -> . expr ET expr
    (86) relation -> . expr GE expr
    (87) relation -> . expr GT expr
    (88) relation -> . expr LE expr
    (89) relation -> . expr LT expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    NOT             shift and go to state 72
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    relation                       shift and go to state 71
    expr                           shift and go to state 73
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 36

    (52) stmt -> READ . ( location )
    (               shift and go to state 74


state 37

    (53) stmt -> WRITE . ( expr )
    (               shift and go to state 75


state 38

    (54) stmt -> PRINT . ( literal )
    (               shift and go to state 76


state 39

    (42) instr -> instr_abierta .
    ;               reduce using rule 42 (instr -> instr_abierta .)
    END             reduce using rule 42 (instr -> instr_abierta .)
    ELSE            reduce using rule 42 (instr -> instr_abierta .)


state 40

    (43) instr -> instr_relacionada .
    ;               reduce using rule 43 (instr -> instr_relacionada .)
    END             reduce using rule 43 (instr -> instr_relacionada .)
    ELSE            reduce using rule 43 (instr -> instr_relacionada .)


state 41

    (40) instr_abierta -> IF . expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF . expr THEN instr
    (39) instr_relacionada -> IF . expr THEN instr_relacionada ELSE instr_relacionada
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 77
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 42

    (21) locallist -> locallist ; _7_local_223b22_repeat .
    ;               reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)
    BEGIN           reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)


state 43

    (22) _7_local_223b22_repeat -> _7_local_223b22_items .
    (24) _7_local_223b22_items -> _7_local_223b22_items . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    BEGIN           reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _7_local_223b22_item           shift and go to state 78
    local                          shift and go to state 45
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 44

    (25) _7_local_223b22_items -> _7_local_223b22_item .
    FUN             reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ID              reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ;               reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    BEGIN           reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)


state 45

    (26) _7_local_223b22_item -> local . ;
    ;               shift and go to state 79


state 46

    (14) datatype -> FLOAT _5_225b22_expr_225d22_optional .
    ,               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    )               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    ;               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)


state 47

    (15) _5_225b22_expr_225d22_optional -> [ . expr ]
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 80
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 48

    (17) datatype -> INT _6_225b22_expr_225d22_optional .
    ,               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    )               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    ;               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)


state 49

    (18) _6_225b22_expr_225d22_optional -> [ . expr ]
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 81
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 50

    (44) stmt -> ID ( . exprlist )
    (58) exprlist -> . expr _10_222c22_expr_repeat
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    exprlist                       shift and go to state 82
    expr                           shift and go to state 83
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 51

    (55) location -> ID _9_225b22_expr_225d22_optional .
    ASSIGNOP        reduce using rule 55 (location -> ID _9_225b22_expr_225d22_optional .)
    )               reduce using rule 55 (location -> ID _9_225b22_expr_225d22_optional .)


state 52

    (56) _9_225b22_expr_225d22_optional -> [ . expr ]
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 84
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 53

    (48) stmt -> BEGIN stmtlist . END
    END             shift and go to state 85


state 54

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .
    $end            reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    FUN             reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    ;               reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    BEGIN           reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)


state 55

    (29) stmtlist -> stmt _8_223b22_stmt_repeat .
    END             reduce using rule 29 (stmtlist -> stmt _8_223b22_stmt_repeat .)


state 56

    (30) _8_223b22_stmt_repeat -> _8_223b22_stmt_items .
    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
    END             reduce using rule 30 (_8_223b22_stmt_repeat -> _8_223b22_stmt_items .)
    ;               shift and go to state 58

    _8_223b22_stmt_item            shift and go to state 86

state 57

    (33) _8_223b22_stmt_items -> _8_223b22_stmt_item .
    ;               reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)
    END             reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)


state 58

    (34) _8_223b22_stmt_item -> ; . stmt
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38
    IF              shift and go to state 41

    stmt                           shift and go to state 87
    location                       shift and go to state 32
    instr                          shift and go to state 33
    instr_abierta                  shift and go to state 39
    instr_relacionada              shift and go to state 40

state 59

    (46) stmt -> RETURN expr .
    ;               reduce using rule 46 (stmt -> RETURN expr .)
    END             reduce using rule 46 (stmt -> RETURN expr .)
    ELSE            reduce using rule 46 (stmt -> RETURN expr .)


state 60

    (64) expr -> factor .
    (65) expr -> factor . - expr
    (66) expr -> factor . + expr
    ;               reduce using rule 64 (expr -> factor .)
    END             reduce using rule 64 (expr -> factor .)
    ELSE            reduce using rule 64 (expr -> factor .)
    DF              reduce using rule 64 (expr -> factor .)
    ET              reduce using rule 64 (expr -> factor .)
    GE              reduce using rule 64 (expr -> factor .)
    GT              reduce using rule 64 (expr -> factor .)
    LE              reduce using rule 64 (expr -> factor .)
    LT              reduce using rule 64 (expr -> factor .)
    THEN            reduce using rule 64 (expr -> factor .)
    ]               reduce using rule 64 (expr -> factor .)
    ,               reduce using rule 64 (expr -> factor .)
    )               reduce using rule 64 (expr -> factor .)
    DO              reduce using rule 64 (expr -> factor .)
    OR              reduce using rule 64 (expr -> factor .)
    AND             reduce using rule 64 (expr -> factor .)
    -               shift and go to state 88
    +               shift and go to state 89


state 61

    (72) term -> - . term
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    term                           shift and go to state 90

state 62

    (71) term -> + . term
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    term                           shift and go to state 91

state 63

    (67) factor -> term .
    (68) factor -> term . / factor
    (69) factor -> term . * factor
    -               reduce using rule 67 (factor -> term .)
    +               reduce using rule 67 (factor -> term .)
    ;               reduce using rule 67 (factor -> term .)
    END             reduce using rule 67 (factor -> term .)
    ELSE            reduce using rule 67 (factor -> term .)
    DF              reduce using rule 67 (factor -> term .)
    ET              reduce using rule 67 (factor -> term .)
    GE              reduce using rule 67 (factor -> term .)
    GT              reduce using rule 67 (factor -> term .)
    LE              reduce using rule 67 (factor -> term .)
    LT              reduce using rule 67 (factor -> term .)
    THEN            reduce using rule 67 (factor -> term .)
    ]               reduce using rule 67 (factor -> term .)
    ,               reduce using rule 67 (factor -> term .)
    )               reduce using rule 67 (factor -> term .)
    DO              reduce using rule 67 (factor -> term .)
    OR              reduce using rule 67 (factor -> term .)
    AND             reduce using rule 67 (factor -> term .)
    /               shift and go to state 92
    *               shift and go to state 93


state 64

    (70) term -> ( . expr )
    (75) term -> ( . relation )
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (81) relation -> . NOT relation
    (82) relation -> . relation OR relation
    (83) relation -> . relation AND relation
    (84) relation -> . expr DF expr
    (85) relation -> . expr ET expr
    (86) relation -> . expr GE expr
    (87) relation -> . expr GT expr
    (88) relation -> . expr LE expr
    (89) relation -> . expr LT expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    NOT             shift and go to state 72
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 94
    relation                       shift and go to state 95
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 65

    (73) term -> FLOAT . ( expr )
    (               shift and go to state 96


state 66

    (74) term -> INT . ( expr )
    (               shift and go to state 97


state 67

    (76) term -> FCONST .
    /               reduce using rule 76 (term -> FCONST .)
    *               reduce using rule 76 (term -> FCONST .)
    -               reduce using rule 76 (term -> FCONST .)
    +               reduce using rule 76 (term -> FCONST .)
    ;               reduce using rule 76 (term -> FCONST .)
    END             reduce using rule 76 (term -> FCONST .)
    ELSE            reduce using rule 76 (term -> FCONST .)
    DF              reduce using rule 76 (term -> FCONST .)
    ET              reduce using rule 76 (term -> FCONST .)
    GE              reduce using rule 76 (term -> FCONST .)
    GT              reduce using rule 76 (term -> FCONST .)
    LE              reduce using rule 76 (term -> FCONST .)
    LT              reduce using rule 76 (term -> FCONST .)
    THEN            reduce using rule 76 (term -> FCONST .)
    ]               reduce using rule 76 (term -> FCONST .)
    ,               reduce using rule 76 (term -> FCONST .)
    )               reduce using rule 76 (term -> FCONST .)
    DO              reduce using rule 76 (term -> FCONST .)
    OR              reduce using rule 76 (term -> FCONST .)
    AND             reduce using rule 76 (term -> FCONST .)


state 68

    (77) term -> ICONST .
    /               reduce using rule 77 (term -> ICONST .)
    *               reduce using rule 77 (term -> ICONST .)
    -               reduce using rule 77 (term -> ICONST .)
    +               reduce using rule 77 (term -> ICONST .)
    ;               reduce using rule 77 (term -> ICONST .)
    END             reduce using rule 77 (term -> ICONST .)
    ELSE            reduce using rule 77 (term -> ICONST .)
    DF              reduce using rule 77 (term -> ICONST .)
    ET              reduce using rule 77 (term -> ICONST .)
    GE              reduce using rule 77 (term -> ICONST .)
    GT              reduce using rule 77 (term -> ICONST .)
    LE              reduce using rule 77 (term -> ICONST .)
    LT              reduce using rule 77 (term -> ICONST .)
    THEN            reduce using rule 77 (term -> ICONST .)
    ]               reduce using rule 77 (term -> ICONST .)
    ,               reduce using rule 77 (term -> ICONST .)
    )               reduce using rule 77 (term -> ICONST .)
    DO              reduce using rule 77 (term -> ICONST .)
    OR              reduce using rule 77 (term -> ICONST .)
    AND             reduce using rule 77 (term -> ICONST .)


state 69

    (78) term -> ID .
    (79) term -> ID . [ exprlist ]
    (80) term -> ID . ( exprlist )
    /               reduce using rule 78 (term -> ID .)
    *               reduce using rule 78 (term -> ID .)
    -               reduce using rule 78 (term -> ID .)
    +               reduce using rule 78 (term -> ID .)
    ;               reduce using rule 78 (term -> ID .)
    END             reduce using rule 78 (term -> ID .)
    ELSE            reduce using rule 78 (term -> ID .)
    DF              reduce using rule 78 (term -> ID .)
    ET              reduce using rule 78 (term -> ID .)
    GE              reduce using rule 78 (term -> ID .)
    GT              reduce using rule 78 (term -> ID .)
    LE              reduce using rule 78 (term -> ID .)
    LT              reduce using rule 78 (term -> ID .)
    THEN            reduce using rule 78 (term -> ID .)
    ]               reduce using rule 78 (term -> ID .)
    ,               reduce using rule 78 (term -> ID .)
    )               reduce using rule 78 (term -> ID .)
    DO              reduce using rule 78 (term -> ID .)
    OR              reduce using rule 78 (term -> ID .)
    AND             reduce using rule 78 (term -> ID .)
    [               shift and go to state 98
    (               shift and go to state 99


state 70

    (47) stmt -> location ASSIGNOP . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 100
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 71

    (51) stmt -> WHILE relation . DO stmt
    (82) relation -> relation . OR relation
    (83) relation -> relation . AND relation
    DO              shift and go to state 101
    OR              shift and go to state 102
    AND             shift and go to state 103


state 72

    (81) relation -> NOT . relation
    (81) relation -> . NOT relation
    (82) relation -> . relation OR relation
    (83) relation -> . relation AND relation
    (84) relation -> . expr DF expr
    (85) relation -> . expr ET expr
    (86) relation -> . expr GE expr
    (87) relation -> . expr GT expr
    (88) relation -> . expr LE expr
    (89) relation -> . expr LT expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    NOT             shift and go to state 72
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    relation                       shift and go to state 104
    expr                           shift and go to state 73
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 73

    (84) relation -> expr . DF expr
    (85) relation -> expr . ET expr
    (86) relation -> expr . GE expr
    (87) relation -> expr . GT expr
    (88) relation -> expr . LE expr
    (89) relation -> expr . LT expr
    DF              shift and go to state 105
    ET              shift and go to state 106
    GE              shift and go to state 107
    GT              shift and go to state 108
    LE              shift and go to state 109
    LT              shift and go to state 110


state 74

    (52) stmt -> READ ( . location )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    ID              shift and go to state 112

    location                       shift and go to state 111

state 75

    (53) stmt -> WRITE ( . expr )
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 113
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 76

    (54) stmt -> PRINT ( . literal )
    (35) literal -> . FCONST
    (36) literal -> . ICONST
    (37) literal -> . STRING
    FCONST          shift and go to state 115
    ICONST          shift and go to state 116
    STRING          shift and go to state 117

    literal                        shift and go to state 114

state 77

    (40) instr_abierta -> IF expr . THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF expr . THEN instr
    (39) instr_relacionada -> IF expr . THEN instr_relacionada ELSE instr_relacionada
    THEN            shift and go to state 118


state 78

    (24) _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .
    FUN             reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ID              reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ;               reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    BEGIN           reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)


state 79

    (26) _7_local_223b22_item -> local ; .
    FUN             reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ID              reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ;               reduce using rule 26 (_7_local_223b22_item -> local ; .)
    BEGIN           reduce using rule 26 (_7_local_223b22_item -> local ; .)


state 80

    (15) _5_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 119


state 81

    (18) _6_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 120


state 82

    (44) stmt -> ID ( exprlist . )
    )               shift and go to state 121


state 83

    (58) exprlist -> expr . _10_222c22_expr_repeat
    (59) _10_222c22_expr_repeat -> . _10_222c22_expr_items
    (60) _10_222c22_expr_repeat -> .
    (61) _10_222c22_expr_items -> . _10_222c22_expr_items _10_222c22_expr_item
    (62) _10_222c22_expr_items -> . _10_222c22_expr_item
    (63) _10_222c22_expr_item -> . , expr
    )               reduce using rule 60 (_10_222c22_expr_repeat -> .)
    ]               reduce using rule 60 (_10_222c22_expr_repeat -> .)
    ,               shift and go to state 125

    _10_222c22_expr_repeat         shift and go to state 122
    _10_222c22_expr_items          shift and go to state 123
    _10_222c22_expr_item           shift and go to state 124

state 84

    (56) _9_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 126


state 85

    (48) stmt -> BEGIN stmtlist END .
    ;               reduce using rule 48 (stmt -> BEGIN stmtlist END .)
    END             reduce using rule 48 (stmt -> BEGIN stmtlist END .)
    ELSE            reduce using rule 48 (stmt -> BEGIN stmtlist END .)


state 86

    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .
    ;               reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)
    END             reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)


state 87

    (34) _8_223b22_stmt_item -> ; stmt .
    (38) instr_relacionada -> stmt .
  ! reduce/reduce conflict for ; resolved using rule 38 (instr_relacionada -> stmt .)
  ! reduce/reduce conflict for END resolved using rule 38 (instr_relacionada -> stmt .)
    ;               reduce using rule 38 (instr_relacionada -> stmt .)
    END             reduce using rule 38 (instr_relacionada -> stmt .)


state 88

    (65) expr -> factor - . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    factor                         shift and go to state 60
    expr                           shift and go to state 127
    term                           shift and go to state 63

state 89

    (66) expr -> factor + . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    factor                         shift and go to state 60
    expr                           shift and go to state 128
    term                           shift and go to state 63

state 90

    (72) term -> - term .
    /               reduce using rule 72 (term -> - term .)
    *               reduce using rule 72 (term -> - term .)
    -               reduce using rule 72 (term -> - term .)
    +               reduce using rule 72 (term -> - term .)
    ;               reduce using rule 72 (term -> - term .)
    END             reduce using rule 72 (term -> - term .)
    ELSE            reduce using rule 72 (term -> - term .)
    DF              reduce using rule 72 (term -> - term .)
    ET              reduce using rule 72 (term -> - term .)
    GE              reduce using rule 72 (term -> - term .)
    GT              reduce using rule 72 (term -> - term .)
    LE              reduce using rule 72 (term -> - term .)
    LT              reduce using rule 72 (term -> - term .)
    THEN            reduce using rule 72 (term -> - term .)
    ]               reduce using rule 72 (term -> - term .)
    ,               reduce using rule 72 (term -> - term .)
    )               reduce using rule 72 (term -> - term .)
    DO              reduce using rule 72 (term -> - term .)
    OR              reduce using rule 72 (term -> - term .)
    AND             reduce using rule 72 (term -> - term .)


state 91

    (71) term -> + term .
    /               reduce using rule 71 (term -> + term .)
    *               reduce using rule 71 (term -> + term .)
    -               reduce using rule 71 (term -> + term .)
    +               reduce using rule 71 (term -> + term .)
    ;               reduce using rule 71 (term -> + term .)
    END             reduce using rule 71 (term -> + term .)
    ELSE            reduce using rule 71 (term -> + term .)
    DF              reduce using rule 71 (term -> + term .)
    ET              reduce using rule 71 (term -> + term .)
    GE              reduce using rule 71 (term -> + term .)
    GT              reduce using rule 71 (term -> + term .)
    LE              reduce using rule 71 (term -> + term .)
    LT              reduce using rule 71 (term -> + term .)
    THEN            reduce using rule 71 (term -> + term .)
    ]               reduce using rule 71 (term -> + term .)
    ,               reduce using rule 71 (term -> + term .)
    )               reduce using rule 71 (term -> + term .)
    DO              reduce using rule 71 (term -> + term .)
    OR              reduce using rule 71 (term -> + term .)
    AND             reduce using rule 71 (term -> + term .)


state 92

    (68) factor -> term / . factor
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    term                           shift and go to state 63
    factor                         shift and go to state 129

state 93

    (69) factor -> term * . factor
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    term                           shift and go to state 63
    factor                         shift and go to state 130

state 94

    (70) term -> ( expr . )
    (84) relation -> expr . DF expr
    (85) relation -> expr . ET expr
    (86) relation -> expr . GE expr
    (87) relation -> expr . GT expr
    (88) relation -> expr . LE expr
    (89) relation -> expr . LT expr
    )               shift and go to state 131
    DF              shift and go to state 105
    ET              shift and go to state 106
    GE              shift and go to state 107
    GT              shift and go to state 108
    LE              shift and go to state 109
    LT              shift and go to state 110


state 95

    (75) term -> ( relation . )
    (82) relation -> relation . OR relation
    (83) relation -> relation . AND relation
    )               shift and go to state 132
    OR              shift and go to state 102
    AND             shift and go to state 103


state 96

    (73) term -> FLOAT ( . expr )
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 133
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 97

    (74) term -> INT ( . expr )
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 134
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 98

    (79) term -> ID [ . exprlist ]
    (58) exprlist -> . expr _10_222c22_expr_repeat
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    exprlist                       shift and go to state 135
    expr                           shift and go to state 83
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 99

    (80) term -> ID ( . exprlist )
    (58) exprlist -> . expr _10_222c22_expr_repeat
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    exprlist                       shift and go to state 136
    expr                           shift and go to state 83
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 100

    (47) stmt -> location ASSIGNOP expr .
    ;               reduce using rule 47 (stmt -> location ASSIGNOP expr .)
    END             reduce using rule 47 (stmt -> location ASSIGNOP expr .)
    ELSE            reduce using rule 47 (stmt -> location ASSIGNOP expr .)


state 101

    (51) stmt -> WHILE relation DO . stmt
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38
    IF              shift and go to state 41

    stmt                           shift and go to state 137
    location                       shift and go to state 32
    instr                          shift and go to state 33
    instr_abierta                  shift and go to state 39
    instr_relacionada              shift and go to state 40

state 102

    (82) relation -> relation OR . relation
    (81) relation -> . NOT relation
    (82) relation -> . relation OR relation
    (83) relation -> . relation AND relation
    (84) relation -> . expr DF expr
    (85) relation -> . expr ET expr
    (86) relation -> . expr GE expr
    (87) relation -> . expr GT expr
    (88) relation -> . expr LE expr
    (89) relation -> . expr LT expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    NOT             shift and go to state 72
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    relation                       shift and go to state 138
    expr                           shift and go to state 73
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 103

    (83) relation -> relation AND . relation
    (81) relation -> . NOT relation
    (82) relation -> . relation OR relation
    (83) relation -> . relation AND relation
    (84) relation -> . expr DF expr
    (85) relation -> . expr ET expr
    (86) relation -> . expr GE expr
    (87) relation -> . expr GT expr
    (88) relation -> . expr LE expr
    (89) relation -> . expr LT expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    NOT             shift and go to state 72
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    relation                       shift and go to state 139
    expr                           shift and go to state 73
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 104

    (81) relation -> NOT relation .
    (82) relation -> relation . OR relation
    (83) relation -> relation . AND relation
    DO              reduce using rule 81 (relation -> NOT relation .)
    OR              reduce using rule 81 (relation -> NOT relation .)
    AND             reduce using rule 81 (relation -> NOT relation .)
    )               reduce using rule 81 (relation -> NOT relation .)


state 105

    (84) relation -> expr DF . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 140
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 106

    (85) relation -> expr ET . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 141
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 107

    (86) relation -> expr GE . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 142
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 108

    (87) relation -> expr GT . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 143
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 109

    (88) relation -> expr LE . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 144
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 110

    (89) relation -> expr LT . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 145
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 111

    (52) stmt -> READ ( location . )
    )               shift and go to state 146


state 112

    (55) location -> ID . _9_225b22_expr_225d22_optional
    (56) _9_225b22_expr_225d22_optional -> . [ expr ]
    (57) _9_225b22_expr_225d22_optional -> .
    [               shift and go to state 52
    )               reduce using rule 57 (_9_225b22_expr_225d22_optional -> .)

    _9_225b22_expr_225d22_optional shift and go to state 51

state 113

    (53) stmt -> WRITE ( expr . )
    )               shift and go to state 147


state 114

    (54) stmt -> PRINT ( literal . )
    )               shift and go to state 148


state 115

    (35) literal -> FCONST .
    )               reduce using rule 35 (literal -> FCONST .)


state 116

    (36) literal -> ICONST .
    )               reduce using rule 36 (literal -> ICONST .)


state 117

    (37) literal -> STRING .
    )               reduce using rule 37 (literal -> STRING .)


state 118

    (40) instr_abierta -> IF expr THEN . instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF expr THEN . instr
    (39) instr_relacionada -> IF expr THEN . instr_relacionada ELSE instr_relacionada
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (55) location -> . ID _9_225b22_expr_225d22_optional
    IF              shift and go to state 149
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    instr_relacionada              shift and go to state 150
    instr_abierta                  shift and go to state 39
    instr                          shift and go to state 151
    stmt                           shift and go to state 152
    location                       shift and go to state 32

state 119

    (15) _5_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)


state 120

    (18) _6_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)


state 121

    (44) stmt -> ID ( exprlist ) .
    ;               reduce using rule 44 (stmt -> ID ( exprlist ) .)
    END             reduce using rule 44 (stmt -> ID ( exprlist ) .)
    ELSE            reduce using rule 44 (stmt -> ID ( exprlist ) .)


state 122

    (58) exprlist -> expr _10_222c22_expr_repeat .
    )               reduce using rule 58 (exprlist -> expr _10_222c22_expr_repeat .)
    ]               reduce using rule 58 (exprlist -> expr _10_222c22_expr_repeat .)


state 123

    (59) _10_222c22_expr_repeat -> _10_222c22_expr_items .
    (61) _10_222c22_expr_items -> _10_222c22_expr_items . _10_222c22_expr_item
    (63) _10_222c22_expr_item -> . , expr
    )               reduce using rule 59 (_10_222c22_expr_repeat -> _10_222c22_expr_items .)
    ]               reduce using rule 59 (_10_222c22_expr_repeat -> _10_222c22_expr_items .)
    ,               shift and go to state 125

    _10_222c22_expr_item           shift and go to state 153

state 124

    (62) _10_222c22_expr_items -> _10_222c22_expr_item .
    ,               reduce using rule 62 (_10_222c22_expr_items -> _10_222c22_expr_item .)
    )               reduce using rule 62 (_10_222c22_expr_items -> _10_222c22_expr_item .)
    ]               reduce using rule 62 (_10_222c22_expr_items -> _10_222c22_expr_item .)


state 125

    (63) _10_222c22_expr_item -> , . expr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 154
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 126

    (56) _9_225b22_expr_225d22_optional -> [ expr ] .
    ASSIGNOP        reduce using rule 56 (_9_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 56 (_9_225b22_expr_225d22_optional -> [ expr ] .)


state 127

    (65) expr -> factor - expr .
    ;               reduce using rule 65 (expr -> factor - expr .)
    END             reduce using rule 65 (expr -> factor - expr .)
    ELSE            reduce using rule 65 (expr -> factor - expr .)
    DF              reduce using rule 65 (expr -> factor - expr .)
    ET              reduce using rule 65 (expr -> factor - expr .)
    GE              reduce using rule 65 (expr -> factor - expr .)
    GT              reduce using rule 65 (expr -> factor - expr .)
    LE              reduce using rule 65 (expr -> factor - expr .)
    LT              reduce using rule 65 (expr -> factor - expr .)
    THEN            reduce using rule 65 (expr -> factor - expr .)
    ]               reduce using rule 65 (expr -> factor - expr .)
    ,               reduce using rule 65 (expr -> factor - expr .)
    )               reduce using rule 65 (expr -> factor - expr .)
    DO              reduce using rule 65 (expr -> factor - expr .)
    OR              reduce using rule 65 (expr -> factor - expr .)
    AND             reduce using rule 65 (expr -> factor - expr .)


state 128

    (66) expr -> factor + expr .
    ;               reduce using rule 66 (expr -> factor + expr .)
    END             reduce using rule 66 (expr -> factor + expr .)
    ELSE            reduce using rule 66 (expr -> factor + expr .)
    DF              reduce using rule 66 (expr -> factor + expr .)
    ET              reduce using rule 66 (expr -> factor + expr .)
    GE              reduce using rule 66 (expr -> factor + expr .)
    GT              reduce using rule 66 (expr -> factor + expr .)
    LE              reduce using rule 66 (expr -> factor + expr .)
    LT              reduce using rule 66 (expr -> factor + expr .)
    THEN            reduce using rule 66 (expr -> factor + expr .)
    ]               reduce using rule 66 (expr -> factor + expr .)
    ,               reduce using rule 66 (expr -> factor + expr .)
    )               reduce using rule 66 (expr -> factor + expr .)
    DO              reduce using rule 66 (expr -> factor + expr .)
    OR              reduce using rule 66 (expr -> factor + expr .)
    AND             reduce using rule 66 (expr -> factor + expr .)


state 129

    (68) factor -> term / factor .
    -               reduce using rule 68 (factor -> term / factor .)
    +               reduce using rule 68 (factor -> term / factor .)
    ;               reduce using rule 68 (factor -> term / factor .)
    END             reduce using rule 68 (factor -> term / factor .)
    ELSE            reduce using rule 68 (factor -> term / factor .)
    DF              reduce using rule 68 (factor -> term / factor .)
    ET              reduce using rule 68 (factor -> term / factor .)
    GE              reduce using rule 68 (factor -> term / factor .)
    GT              reduce using rule 68 (factor -> term / factor .)
    LE              reduce using rule 68 (factor -> term / factor .)
    LT              reduce using rule 68 (factor -> term / factor .)
    THEN            reduce using rule 68 (factor -> term / factor .)
    ]               reduce using rule 68 (factor -> term / factor .)
    ,               reduce using rule 68 (factor -> term / factor .)
    )               reduce using rule 68 (factor -> term / factor .)
    DO              reduce using rule 68 (factor -> term / factor .)
    OR              reduce using rule 68 (factor -> term / factor .)
    AND             reduce using rule 68 (factor -> term / factor .)


state 130

    (69) factor -> term * factor .
    -               reduce using rule 69 (factor -> term * factor .)
    +               reduce using rule 69 (factor -> term * factor .)
    ;               reduce using rule 69 (factor -> term * factor .)
    END             reduce using rule 69 (factor -> term * factor .)
    ELSE            reduce using rule 69 (factor -> term * factor .)
    DF              reduce using rule 69 (factor -> term * factor .)
    ET              reduce using rule 69 (factor -> term * factor .)
    GE              reduce using rule 69 (factor -> term * factor .)
    GT              reduce using rule 69 (factor -> term * factor .)
    LE              reduce using rule 69 (factor -> term * factor .)
    LT              reduce using rule 69 (factor -> term * factor .)
    THEN            reduce using rule 69 (factor -> term * factor .)
    ]               reduce using rule 69 (factor -> term * factor .)
    ,               reduce using rule 69 (factor -> term * factor .)
    )               reduce using rule 69 (factor -> term * factor .)
    DO              reduce using rule 69 (factor -> term * factor .)
    OR              reduce using rule 69 (factor -> term * factor .)
    AND             reduce using rule 69 (factor -> term * factor .)


state 131

    (70) term -> ( expr ) .
    /               reduce using rule 70 (term -> ( expr ) .)
    *               reduce using rule 70 (term -> ( expr ) .)
    -               reduce using rule 70 (term -> ( expr ) .)
    +               reduce using rule 70 (term -> ( expr ) .)
    ;               reduce using rule 70 (term -> ( expr ) .)
    END             reduce using rule 70 (term -> ( expr ) .)
    ELSE            reduce using rule 70 (term -> ( expr ) .)
    DF              reduce using rule 70 (term -> ( expr ) .)
    ET              reduce using rule 70 (term -> ( expr ) .)
    GE              reduce using rule 70 (term -> ( expr ) .)
    GT              reduce using rule 70 (term -> ( expr ) .)
    LE              reduce using rule 70 (term -> ( expr ) .)
    LT              reduce using rule 70 (term -> ( expr ) .)
    THEN            reduce using rule 70 (term -> ( expr ) .)
    ]               reduce using rule 70 (term -> ( expr ) .)
    ,               reduce using rule 70 (term -> ( expr ) .)
    )               reduce using rule 70 (term -> ( expr ) .)
    DO              reduce using rule 70 (term -> ( expr ) .)
    OR              reduce using rule 70 (term -> ( expr ) .)
    AND             reduce using rule 70 (term -> ( expr ) .)


state 132

    (75) term -> ( relation ) .
    /               reduce using rule 75 (term -> ( relation ) .)
    *               reduce using rule 75 (term -> ( relation ) .)
    -               reduce using rule 75 (term -> ( relation ) .)
    +               reduce using rule 75 (term -> ( relation ) .)
    ;               reduce using rule 75 (term -> ( relation ) .)
    END             reduce using rule 75 (term -> ( relation ) .)
    ELSE            reduce using rule 75 (term -> ( relation ) .)
    DF              reduce using rule 75 (term -> ( relation ) .)
    ET              reduce using rule 75 (term -> ( relation ) .)
    GE              reduce using rule 75 (term -> ( relation ) .)
    GT              reduce using rule 75 (term -> ( relation ) .)
    LE              reduce using rule 75 (term -> ( relation ) .)
    LT              reduce using rule 75 (term -> ( relation ) .)
    THEN            reduce using rule 75 (term -> ( relation ) .)
    ]               reduce using rule 75 (term -> ( relation ) .)
    ,               reduce using rule 75 (term -> ( relation ) .)
    )               reduce using rule 75 (term -> ( relation ) .)
    DO              reduce using rule 75 (term -> ( relation ) .)
    OR              reduce using rule 75 (term -> ( relation ) .)
    AND             reduce using rule 75 (term -> ( relation ) .)


state 133

    (73) term -> FLOAT ( expr . )
    )               shift and go to state 155


state 134

    (74) term -> INT ( expr . )
    )               shift and go to state 156


state 135

    (79) term -> ID [ exprlist . ]
    ]               shift and go to state 157


state 136

    (80) term -> ID ( exprlist . )
    )               shift and go to state 158


state 137

    (51) stmt -> WHILE relation DO stmt .
    (38) instr_relacionada -> stmt .
  ! reduce/reduce conflict for ; resolved using rule 38 (instr_relacionada -> stmt .)
  ! reduce/reduce conflict for END resolved using rule 38 (instr_relacionada -> stmt .)
  ! reduce/reduce conflict for ELSE resolved using rule 38 (instr_relacionada -> stmt .)
    ;               reduce using rule 38 (instr_relacionada -> stmt .)
    END             reduce using rule 38 (instr_relacionada -> stmt .)
    ELSE            reduce using rule 38 (instr_relacionada -> stmt .)


state 138

    (82) relation -> relation OR relation .
    (82) relation -> relation . OR relation
    (83) relation -> relation . AND relation
    DO              reduce using rule 82 (relation -> relation OR relation .)
    OR              reduce using rule 82 (relation -> relation OR relation .)
    )               reduce using rule 82 (relation -> relation OR relation .)
    AND             shift and go to state 103


state 139

    (83) relation -> relation AND relation .
    (82) relation -> relation . OR relation
    (83) relation -> relation . AND relation
    DO              reduce using rule 83 (relation -> relation AND relation .)
    OR              reduce using rule 83 (relation -> relation AND relation .)
    AND             reduce using rule 83 (relation -> relation AND relation .)
    )               reduce using rule 83 (relation -> relation AND relation .)


state 140

    (84) relation -> expr DF expr .
    DO              reduce using rule 84 (relation -> expr DF expr .)
    OR              reduce using rule 84 (relation -> expr DF expr .)
    AND             reduce using rule 84 (relation -> expr DF expr .)
    )               reduce using rule 84 (relation -> expr DF expr .)


state 141

    (85) relation -> expr ET expr .
    DO              reduce using rule 85 (relation -> expr ET expr .)
    OR              reduce using rule 85 (relation -> expr ET expr .)
    AND             reduce using rule 85 (relation -> expr ET expr .)
    )               reduce using rule 85 (relation -> expr ET expr .)


state 142

    (86) relation -> expr GE expr .
    DO              reduce using rule 86 (relation -> expr GE expr .)
    OR              reduce using rule 86 (relation -> expr GE expr .)
    AND             reduce using rule 86 (relation -> expr GE expr .)
    )               reduce using rule 86 (relation -> expr GE expr .)


state 143

    (87) relation -> expr GT expr .
    DO              reduce using rule 87 (relation -> expr GT expr .)
    OR              reduce using rule 87 (relation -> expr GT expr .)
    AND             reduce using rule 87 (relation -> expr GT expr .)
    )               reduce using rule 87 (relation -> expr GT expr .)


state 144

    (88) relation -> expr LE expr .
    DO              reduce using rule 88 (relation -> expr LE expr .)
    OR              reduce using rule 88 (relation -> expr LE expr .)
    AND             reduce using rule 88 (relation -> expr LE expr .)
    )               reduce using rule 88 (relation -> expr LE expr .)


state 145

    (89) relation -> expr LT expr .
    DO              reduce using rule 89 (relation -> expr LT expr .)
    OR              reduce using rule 89 (relation -> expr LT expr .)
    AND             reduce using rule 89 (relation -> expr LT expr .)
    )               reduce using rule 89 (relation -> expr LT expr .)


state 146

    (52) stmt -> READ ( location ) .
    ;               reduce using rule 52 (stmt -> READ ( location ) .)
    END             reduce using rule 52 (stmt -> READ ( location ) .)
    ELSE            reduce using rule 52 (stmt -> READ ( location ) .)


state 147

    (53) stmt -> WRITE ( expr ) .
    ;               reduce using rule 53 (stmt -> WRITE ( expr ) .)
    END             reduce using rule 53 (stmt -> WRITE ( expr ) .)
    ELSE            reduce using rule 53 (stmt -> WRITE ( expr ) .)


state 148

    (54) stmt -> PRINT ( literal ) .
    ;               reduce using rule 54 (stmt -> PRINT ( literal ) .)
    END             reduce using rule 54 (stmt -> PRINT ( literal ) .)
    ELSE            reduce using rule 54 (stmt -> PRINT ( literal ) .)


state 149

    (39) instr_relacionada -> IF . expr THEN instr_relacionada ELSE instr_relacionada
    (40) instr_abierta -> IF . expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF . expr THEN instr
    (64) expr -> . factor
    (65) expr -> . factor - expr
    (66) expr -> . factor + expr
    (67) factor -> . term
    (68) factor -> . term / factor
    (69) factor -> . term * factor
    (70) term -> . ( expr )
    (71) term -> . + term
    (72) term -> . - term
    (73) term -> . FLOAT ( expr )
    (74) term -> . INT ( expr )
    (75) term -> . ( relation )
    (76) term -> . FCONST
    (77) term -> . ICONST
    (78) term -> . ID
    (79) term -> . ID [ exprlist ]
    (80) term -> . ID ( exprlist )
    (               shift and go to state 64
    +               shift and go to state 62
    -               shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 66
    FCONST          shift and go to state 67
    ICONST          shift and go to state 68
    ID              shift and go to state 69

    expr                           shift and go to state 159
    factor                         shift and go to state 60
    term                           shift and go to state 63

state 150

    (40) instr_abierta -> IF expr THEN instr_relacionada . ELSE instr_abierta
    (39) instr_relacionada -> IF expr THEN instr_relacionada . ELSE instr_relacionada
    (43) instr -> instr_relacionada .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 160
    ;               reduce using rule 43 (instr -> instr_relacionada .)
    END             reduce using rule 43 (instr -> instr_relacionada .)


state 151

    (41) instr_abierta -> IF expr THEN instr .
    (49) stmt -> instr .
  ! reduce/reduce conflict for ; resolved using rule 41 (instr_abierta -> IF expr THEN instr .)
  ! reduce/reduce conflict for END resolved using rule 41 (instr_abierta -> IF expr THEN instr .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (instr_abierta -> IF expr THEN instr .)
    ;               reduce using rule 41 (instr_abierta -> IF expr THEN instr .)
    END             reduce using rule 41 (instr_abierta -> IF expr THEN instr .)
    ELSE            reduce using rule 41 (instr_abierta -> IF expr THEN instr .)


state 152

    (38) instr_relacionada -> stmt .
    ;               reduce using rule 38 (instr_relacionada -> stmt .)
    END             reduce using rule 38 (instr_relacionada -> stmt .)
    ELSE            reduce using rule 38 (instr_relacionada -> stmt .)


state 153

    (61) _10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .
    ,               reduce using rule 61 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)
    )               reduce using rule 61 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)
    ]               reduce using rule 61 (_10_222c22_expr_items -> _10_222c22_expr_items _10_222c22_expr_item .)


state 154

    (63) _10_222c22_expr_item -> , expr .
    ,               reduce using rule 63 (_10_222c22_expr_item -> , expr .)
    )               reduce using rule 63 (_10_222c22_expr_item -> , expr .)
    ]               reduce using rule 63 (_10_222c22_expr_item -> , expr .)


state 155

    (73) term -> FLOAT ( expr ) .
    /               reduce using rule 73 (term -> FLOAT ( expr ) .)
    *               reduce using rule 73 (term -> FLOAT ( expr ) .)
    -               reduce using rule 73 (term -> FLOAT ( expr ) .)
    +               reduce using rule 73 (term -> FLOAT ( expr ) .)
    ;               reduce using rule 73 (term -> FLOAT ( expr ) .)
    END             reduce using rule 73 (term -> FLOAT ( expr ) .)
    ELSE            reduce using rule 73 (term -> FLOAT ( expr ) .)
    DF              reduce using rule 73 (term -> FLOAT ( expr ) .)
    ET              reduce using rule 73 (term -> FLOAT ( expr ) .)
    GE              reduce using rule 73 (term -> FLOAT ( expr ) .)
    GT              reduce using rule 73 (term -> FLOAT ( expr ) .)
    LE              reduce using rule 73 (term -> FLOAT ( expr ) .)
    LT              reduce using rule 73 (term -> FLOAT ( expr ) .)
    THEN            reduce using rule 73 (term -> FLOAT ( expr ) .)
    ]               reduce using rule 73 (term -> FLOAT ( expr ) .)
    ,               reduce using rule 73 (term -> FLOAT ( expr ) .)
    )               reduce using rule 73 (term -> FLOAT ( expr ) .)
    DO              reduce using rule 73 (term -> FLOAT ( expr ) .)
    OR              reduce using rule 73 (term -> FLOAT ( expr ) .)
    AND             reduce using rule 73 (term -> FLOAT ( expr ) .)


state 156

    (74) term -> INT ( expr ) .
    /               reduce using rule 74 (term -> INT ( expr ) .)
    *               reduce using rule 74 (term -> INT ( expr ) .)
    -               reduce using rule 74 (term -> INT ( expr ) .)
    +               reduce using rule 74 (term -> INT ( expr ) .)
    ;               reduce using rule 74 (term -> INT ( expr ) .)
    END             reduce using rule 74 (term -> INT ( expr ) .)
    ELSE            reduce using rule 74 (term -> INT ( expr ) .)
    DF              reduce using rule 74 (term -> INT ( expr ) .)
    ET              reduce using rule 74 (term -> INT ( expr ) .)
    GE              reduce using rule 74 (term -> INT ( expr ) .)
    GT              reduce using rule 74 (term -> INT ( expr ) .)
    LE              reduce using rule 74 (term -> INT ( expr ) .)
    LT              reduce using rule 74 (term -> INT ( expr ) .)
    THEN            reduce using rule 74 (term -> INT ( expr ) .)
    ]               reduce using rule 74 (term -> INT ( expr ) .)
    ,               reduce using rule 74 (term -> INT ( expr ) .)
    )               reduce using rule 74 (term -> INT ( expr ) .)
    DO              reduce using rule 74 (term -> INT ( expr ) .)
    OR              reduce using rule 74 (term -> INT ( expr ) .)
    AND             reduce using rule 74 (term -> INT ( expr ) .)


state 157

    (79) term -> ID [ exprlist ] .
    /               reduce using rule 79 (term -> ID [ exprlist ] .)
    *               reduce using rule 79 (term -> ID [ exprlist ] .)
    -               reduce using rule 79 (term -> ID [ exprlist ] .)
    +               reduce using rule 79 (term -> ID [ exprlist ] .)
    ;               reduce using rule 79 (term -> ID [ exprlist ] .)
    END             reduce using rule 79 (term -> ID [ exprlist ] .)
    ELSE            reduce using rule 79 (term -> ID [ exprlist ] .)
    DF              reduce using rule 79 (term -> ID [ exprlist ] .)
    ET              reduce using rule 79 (term -> ID [ exprlist ] .)
    GE              reduce using rule 79 (term -> ID [ exprlist ] .)
    GT              reduce using rule 79 (term -> ID [ exprlist ] .)
    LE              reduce using rule 79 (term -> ID [ exprlist ] .)
    LT              reduce using rule 79 (term -> ID [ exprlist ] .)
    THEN            reduce using rule 79 (term -> ID [ exprlist ] .)
    ]               reduce using rule 79 (term -> ID [ exprlist ] .)
    ,               reduce using rule 79 (term -> ID [ exprlist ] .)
    )               reduce using rule 79 (term -> ID [ exprlist ] .)
    DO              reduce using rule 79 (term -> ID [ exprlist ] .)
    OR              reduce using rule 79 (term -> ID [ exprlist ] .)
    AND             reduce using rule 79 (term -> ID [ exprlist ] .)


state 158

    (80) term -> ID ( exprlist ) .
    /               reduce using rule 80 (term -> ID ( exprlist ) .)
    *               reduce using rule 80 (term -> ID ( exprlist ) .)
    -               reduce using rule 80 (term -> ID ( exprlist ) .)
    +               reduce using rule 80 (term -> ID ( exprlist ) .)
    ;               reduce using rule 80 (term -> ID ( exprlist ) .)
    END             reduce using rule 80 (term -> ID ( exprlist ) .)
    ELSE            reduce using rule 80 (term -> ID ( exprlist ) .)
    DF              reduce using rule 80 (term -> ID ( exprlist ) .)
    ET              reduce using rule 80 (term -> ID ( exprlist ) .)
    GE              reduce using rule 80 (term -> ID ( exprlist ) .)
    GT              reduce using rule 80 (term -> ID ( exprlist ) .)
    LE              reduce using rule 80 (term -> ID ( exprlist ) .)
    LT              reduce using rule 80 (term -> ID ( exprlist ) .)
    THEN            reduce using rule 80 (term -> ID ( exprlist ) .)
    ]               reduce using rule 80 (term -> ID ( exprlist ) .)
    ,               reduce using rule 80 (term -> ID ( exprlist ) .)
    )               reduce using rule 80 (term -> ID ( exprlist ) .)
    DO              reduce using rule 80 (term -> ID ( exprlist ) .)
    OR              reduce using rule 80 (term -> ID ( exprlist ) .)
    AND             reduce using rule 80 (term -> ID ( exprlist ) .)


state 159

    (39) instr_relacionada -> IF expr . THEN instr_relacionada ELSE instr_relacionada
    (40) instr_abierta -> IF expr . THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF expr . THEN instr
    THEN            shift and go to state 161


state 160

    (40) instr_abierta -> IF expr THEN instr_relacionada ELSE . instr_abierta
    (39) instr_relacionada -> IF expr THEN instr_relacionada ELSE . instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    IF              shift and go to state 41
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    instr_relacionada              shift and go to state 162
    instr_abierta                  shift and go to state 163
    instr                          shift and go to state 33
    stmt                           shift and go to state 152
    location                       shift and go to state 32

state 161

    (39) instr_relacionada -> IF expr THEN . instr_relacionada ELSE instr_relacionada
    (40) instr_abierta -> IF expr THEN . instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> IF expr THEN . instr
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (55) location -> . ID _9_225b22_expr_225d22_optional
    IF              shift and go to state 149
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    instr_relacionada              shift and go to state 164
    instr_abierta                  shift and go to state 39
    instr                          shift and go to state 151
    stmt                           shift and go to state 152
    location                       shift and go to state 32

state 162

    (39) instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .
    (43) instr -> instr_relacionada .
  ! reduce/reduce conflict for ; resolved using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)
  ! reduce/reduce conflict for END resolved using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)
    ;               reduce using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)
    END             reduce using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)
    ELSE            reduce using rule 39 (instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada .)


state 163

    (40) instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .
    (42) instr -> instr_abierta .
  ! reduce/reduce conflict for ; resolved using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)
  ! reduce/reduce conflict for END resolved using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)
    ;               reduce using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)
    END             reduce using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)
    ELSE            reduce using rule 40 (instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta .)


state 164

    (39) instr_relacionada -> IF expr THEN instr_relacionada . ELSE instr_relacionada
    (40) instr_abierta -> IF expr THEN instr_relacionada . ELSE instr_abierta
    (43) instr -> instr_relacionada .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 165
    ;               reduce using rule 43 (instr -> instr_relacionada .)
    END             reduce using rule 43 (instr -> instr_relacionada .)


state 165

    (39) instr_relacionada -> IF expr THEN instr_relacionada ELSE . instr_relacionada
    (40) instr_abierta -> IF expr THEN instr_relacionada ELSE . instr_abierta
    (38) instr_relacionada -> . stmt
    (39) instr_relacionada -> . IF expr THEN instr_relacionada ELSE instr_relacionada
    (40) instr_abierta -> . IF expr THEN instr_relacionada ELSE instr_abierta
    (41) instr_abierta -> . IF expr THEN instr
    (44) stmt -> . ID ( exprlist )
    (45) stmt -> . SKIP
    (46) stmt -> . RETURN expr
    (47) stmt -> . location ASSIGNOP expr
    (48) stmt -> . BEGIN stmtlist END
    (49) stmt -> . instr
    (50) stmt -> . BREAK
    (51) stmt -> . WHILE relation DO stmt
    (52) stmt -> . READ ( location )
    (53) stmt -> . WRITE ( expr )
    (54) stmt -> . PRINT ( literal )
    (55) location -> . ID _9_225b22_expr_225d22_optional
    (42) instr -> . instr_abierta
    (43) instr -> . instr_relacionada
    IF              shift and go to state 149
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    instr_relacionada              shift and go to state 162
    instr_abierta                  shift and go to state 163
    stmt                           shift and go to state 152
    instr                          shift and go to state 33
    location                       shift and go to state 32

Conflicts:

shift/reduce conflict for ; in state 29 resolved as shift
shift/reduce conflict for ELSE in state 150 resolved as shift
shift/reduce conflict for ELSE in state 164 resolved as shift
reduce/reduce conflict in state 29 resolved using rule instr_relacionada -> stmt
rejected rule (_8_223b22_stmt_repeat -> <empty>) in state 29
reduce/reduce conflict in state 87 resolved using rule instr_relacionada -> stmt
rejected rule (_8_223b22_stmt_item -> ; stmt) in state 87
reduce/reduce conflict in state 137 resolved using rule instr_relacionada -> stmt
rejected rule (stmt -> WHILE relation DO stmt) in state 137
reduce/reduce conflict in state 151 resolved using rule instr_abierta -> IF expr THEN instr
rejected rule (stmt -> instr) in state 151
reduce/reduce conflict in state 162 resolved using rule instr_relacionada -> IF expr THEN instr_relacionada ELSE instr_relacionada
rejected rule (instr -> instr_relacionada) in state 162
reduce/reduce conflict in state 163 resolved using rule instr_abierta -> IF expr THEN instr_relacionada ELSE instr_abierta
rejected rule (instr -> instr_abierta) in state 163
Rule (_8_223b22_stmt_repeat -> <empty>) is never reduced
Rule (_8_223b22_stmt_item -> ; stmt) is never reduced
Rule (stmt -> WHILE relation DO stmt) is never reduced