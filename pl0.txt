Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> _1_funclist_optional func
Rule 3     _1_funclist_optional -> funclist
Rule 4     _1_funclist_optional -> <empty>
Rule 5     func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
Rule 6     _2_parmlist_optional -> parmlist
Rule 7     _2_parmlist_optional -> <empty>
Rule 8     _3_locallist_optional -> locallist
Rule 9     _3_locallist_optional -> <empty>
Rule 10    parmlist -> _4_parmlist_222c22_optional parm
Rule 11    _4_parmlist_222c22_optional -> parmlist ,
Rule 12    _4_parmlist_222c22_optional -> <empty>
Rule 13    parm -> ID : datatype
Rule 14    datatype -> FLOAT _5_225b22_expr_225d22_optional
Rule 15    _5_225b22_expr_225d22_optional -> [ expr ]
Rule 16    _5_225b22_expr_225d22_optional -> <empty>
Rule 17    datatype -> INT _6_225b22_expr_225d22_optional
Rule 18    _6_225b22_expr_225d22_optional -> [ expr ]
Rule 19    _6_225b22_expr_225d22_optional -> <empty>
Rule 20    locallist -> local
Rule 21    locallist -> locallist ; _7_local_223b22_repeat
Rule 22    _7_local_223b22_repeat -> _7_local_223b22_items
Rule 23    _7_local_223b22_repeat -> <empty>
Rule 24    _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item
Rule 25    _7_local_223b22_items -> _7_local_223b22_item
Rule 26    _7_local_223b22_item -> local ;
Rule 27    local -> func
Rule 28    local -> parm
Rule 29    stmtlist -> stmt _8_223b22_stmt_repeat
Rule 30    _8_223b22_stmt_repeat -> _8_223b22_stmt_items
Rule 31    _8_223b22_stmt_repeat -> <empty>
Rule 32    _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item
Rule 33    _8_223b22_stmt_items -> _8_223b22_stmt_item
Rule 34    _8_223b22_stmt_item -> ; stmt
Rule 35    literal -> FCONST
Rule 36    literal -> ICONST
Rule 37    literal -> STRING
Rule 38    stmt -> ID ( exprlist )
Rule 39    stmt -> SKIP
Rule 40    stmt -> RETURN expr
Rule 41    stmt -> location ASSIGNOP expr
Rule 42    stmt -> BEGIN stmtlist END
Rule 43    stmt -> IF relation THEN stmt _9_ELSE_stmt_optional
Rule 44    _9_ELSE_stmt_optional -> ELSE stmt
Rule 45    _9_ELSE_stmt_optional -> <empty>
Rule 46    stmt -> BREAK
Rule 47    stmt -> WHILE relation DO stmt
Rule 48    stmt -> READ ( location )
Rule 49    stmt -> WRITE ( expr )
Rule 50    stmt -> PRINT ( literal )
Rule 51    location -> ID _10_225b22_expr_225d22_optional
Rule 52    _10_225b22_expr_225d22_optional -> [ expr ]
Rule 53    _10_225b22_expr_225d22_optional -> <empty>
Rule 54    exprlist -> expr _11_222c22_expr_repeat
Rule 55    _11_222c22_expr_repeat -> _11_222c22_expr_items
Rule 56    _11_222c22_expr_repeat -> <empty>
Rule 57    _11_222c22_expr_items -> _11_222c22_expr_items _11_222c22_expr_item
Rule 58    _11_222c22_expr_items -> _11_222c22_expr_item
Rule 59    _11_222c22_expr_item -> , expr
Rule 60    expr -> factor
Rule 61    expr -> factor - expr
Rule 62    expr -> factor + expr
Rule 63    factor -> term
Rule 64    factor -> term / factor
Rule 65    factor -> term * factor
Rule 66    term -> ( expr )
Rule 67    term -> + term
Rule 68    term -> - term
Rule 69    term -> FLOAT ( expr )
Rule 70    term -> INT ( expr )
Rule 71    term -> ( relation )
Rule 72    term -> FCONST
Rule 73    term -> ICONST
Rule 74    term -> ID
Rule 75    term -> ID [ exprlist ]
Rule 76    term -> ID ( exprlist )
Rule 77    relation -> NOT relation  [precedence=right, level=5]
Rule 78    relation -> relation OR relation  [precedence=left, level=1]
Rule 79    relation -> relation AND relation  [precedence=left, level=2]
Rule 80    relation -> expr DF expr  [precedence=left, level=3]
Rule 81    relation -> expr ET expr  [precedence=left, level=3]
Rule 82    relation -> expr GE expr  [precedence=left, level=4]
Rule 83    relation -> expr GT expr  [precedence=left, level=4]
Rule 84    relation -> expr LE expr  [precedence=left, level=4]
Rule 85    relation -> expr LT expr  [precedence=left, level=4]

Terminals, with rules where they appear:

(                    : 5 38 48 49 50 66 69 70 71 76
)                    : 5 38 48 49 50 66 69 70 71 76
*                    : 65
+                    : 62 67
,                    : 11 59
-                    : 61 68
/                    : 64
:                    : 13
;                    : 21 26 34
AND                  : 79
ASSIGNOP             : 41
BEGIN                : 5 42
BREAK                : 46
DF                   : 80
DO                   : 47
ELSE                 : 44
END                  : 5 42
ET                   : 81
FCONST               : 35 72
FLOAT                : 14 69
FUN                  : 5
GE                   : 82
GT                   : 83
ICONST               : 36 73
ID                   : 5 13 38 51 74 75 76
IF                   : 43
INT                  : 17 70
LE                   : 84
LT                   : 85
NOT                  : 77
OR                   : 78
PRINT                : 50
READ                 : 48
RETURN               : 40
SKIP                 : 39
STRING               : 37
THEN                 : 43
WHILE                : 47
WRITE                : 49
[                    : 15 18 52 75
]                    : 15 18 52 75
error                : 

Nonterminals, with rules where they appear:

_10_225b22_expr_225d22_optional : 51
_11_222c22_expr_item : 57 58
_11_222c22_expr_items : 55 57
_11_222c22_expr_repeat : 54
_1_funclist_optional : 2
_2_parmlist_optional : 5
_3_locallist_optional : 5
_4_parmlist_222c22_optional : 10
_5_225b22_expr_225d22_optional : 14
_6_225b22_expr_225d22_optional : 17
_7_local_223b22_item : 24 25
_7_local_223b22_items : 22 24
_7_local_223b22_repeat : 21
_8_223b22_stmt_item  : 32 33
_8_223b22_stmt_items : 30 32
_8_223b22_stmt_repeat : 29
_9_ELSE_stmt_optional : 43
datatype             : 13
expr                 : 15 18 40 41 49 52 54 59 61 62 66 69 70 80 80 81 81 82 82 83 83 84 84 85 85
exprlist             : 38 75 76
factor               : 60 61 62 64 65
func                 : 2 27
funclist             : 1 3
literal              : 50
local                : 20 26
locallist            : 8 21
location             : 41 48
parm                 : 10 28
parmlist             : 6 11
program              : 0
relation             : 43 47 71 77 78 78 79 79
stmt                 : 29 34 43 44 47
stmtlist             : 5 42
term                 : 63 64 65 67 68


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . _1_funclist_optional func
    (3) _1_funclist_optional -> . funclist
    (4) _1_funclist_optional -> .
    FUN             reduce using rule 4 (_1_funclist_optional -> .)

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    _1_funclist_optional           shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) _1_funclist_optional -> funclist .
    $end            reduce using rule 1 (program -> funclist .)
    FUN             reduce using rule 3 (_1_funclist_optional -> funclist .)


state 3

    (2) funclist -> _1_funclist_optional . func
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    FUN             shift and go to state 5

    func                           shift and go to state 4

state 4

    (2) funclist -> _1_funclist_optional func .
    $end            reduce using rule 2 (funclist -> _1_funclist_optional func .)
    FUN             reduce using rule 2 (funclist -> _1_funclist_optional func .)


state 5

    (5) func -> FUN . ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    ID              shift and go to state 6


state 6

    (5) func -> FUN ID . ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (               shift and go to state 7


state 7

    (5) func -> FUN ID ( . _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (6) _2_parmlist_optional -> . parmlist
    (7) _2_parmlist_optional -> .
    (10) parmlist -> . _4_parmlist_222c22_optional parm
    (11) _4_parmlist_222c22_optional -> . parmlist ,
    (12) _4_parmlist_222c22_optional -> .
    )               reduce using rule 7 (_2_parmlist_optional -> .)
    ID              reduce using rule 12 (_4_parmlist_222c22_optional -> .)

    _2_parmlist_optional           shift and go to state 8
    parmlist                       shift and go to state 9
    _4_parmlist_222c22_optional    shift and go to state 10

state 8

    (5) func -> FUN ID ( _2_parmlist_optional . ) _3_locallist_optional BEGIN stmtlist END
    )               shift and go to state 11


state 9

    (6) _2_parmlist_optional -> parmlist .
    (11) _4_parmlist_222c22_optional -> parmlist . ,
    )               reduce using rule 6 (_2_parmlist_optional -> parmlist .)
    ,               shift and go to state 12


state 10

    (10) parmlist -> _4_parmlist_222c22_optional . parm
    (13) parm -> . ID : datatype
    ID              shift and go to state 14

    parm                           shift and go to state 13

state 11

    (5) func -> FUN ID ( _2_parmlist_optional ) . _3_locallist_optional BEGIN stmtlist END
    (8) _3_locallist_optional -> . locallist
    (9) _3_locallist_optional -> .
    (20) locallist -> . local
    (21) locallist -> . locallist ; _7_local_223b22_repeat
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    BEGIN           reduce using rule 9 (_3_locallist_optional -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _3_locallist_optional          shift and go to state 15
    locallist                      shift and go to state 16
    local                          shift and go to state 17
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 12

    (11) _4_parmlist_222c22_optional -> parmlist , .
    ID              reduce using rule 11 (_4_parmlist_222c22_optional -> parmlist , .)


state 13

    (10) parmlist -> _4_parmlist_222c22_optional parm .
    ,               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)
    )               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)


state 14

    (13) parm -> ID . : datatype
    :               shift and go to state 20


state 15

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional . BEGIN stmtlist END
    BEGIN           shift and go to state 21


state 16

    (8) _3_locallist_optional -> locallist .
    (21) locallist -> locallist . ; _7_local_223b22_repeat
    BEGIN           reduce using rule 8 (_3_locallist_optional -> locallist .)
    ;               shift and go to state 22


state 17

    (20) locallist -> local .
    ;               reduce using rule 20 (locallist -> local .)
    BEGIN           reduce using rule 20 (locallist -> local .)


state 18

    (27) local -> func .
    ;               reduce using rule 27 (local -> func .)
    BEGIN           reduce using rule 27 (local -> func .)


state 19

    (28) local -> parm .
    ;               reduce using rule 28 (local -> parm .)
    BEGIN           reduce using rule 28 (local -> parm .)


state 20

    (13) parm -> ID : . datatype
    (14) datatype -> . FLOAT _5_225b22_expr_225d22_optional
    (17) datatype -> . INT _6_225b22_expr_225d22_optional
    FLOAT           shift and go to state 24
    INT             shift and go to state 25

    datatype                       shift and go to state 23

state 21

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmtlist                       shift and go to state 28
    stmt                           shift and go to state 29
    location                       shift and go to state 32

state 22

    (21) locallist -> locallist ; . _7_local_223b22_repeat
    (22) _7_local_223b22_repeat -> . _7_local_223b22_items
    (23) _7_local_223b22_repeat -> .
    (24) _7_local_223b22_items -> . _7_local_223b22_items _7_local_223b22_item
    (25) _7_local_223b22_items -> . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 23 (_7_local_223b22_repeat -> .)
    BEGIN           reduce using rule 23 (_7_local_223b22_repeat -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _7_local_223b22_repeat         shift and go to state 39
    _7_local_223b22_items          shift and go to state 40
    _7_local_223b22_item           shift and go to state 41
    local                          shift and go to state 42
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 23

    (13) parm -> ID : datatype .
    ,               reduce using rule 13 (parm -> ID : datatype .)
    )               reduce using rule 13 (parm -> ID : datatype .)
    ;               reduce using rule 13 (parm -> ID : datatype .)
    BEGIN           reduce using rule 13 (parm -> ID : datatype .)


state 24

    (14) datatype -> FLOAT . _5_225b22_expr_225d22_optional
    (15) _5_225b22_expr_225d22_optional -> . [ expr ]
    (16) _5_225b22_expr_225d22_optional -> .
    [               shift and go to state 44
    ,               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    )               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)

    _5_225b22_expr_225d22_optional shift and go to state 43

state 25

    (17) datatype -> INT . _6_225b22_expr_225d22_optional
    (18) _6_225b22_expr_225d22_optional -> . [ expr ]
    (19) _6_225b22_expr_225d22_optional -> .
    [               shift and go to state 46
    ,               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    )               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    BEGIN           reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)

    _6_225b22_expr_225d22_optional shift and go to state 45

state 26

    (38) stmt -> ID . ( exprlist )
    (51) location -> ID . _10_225b22_expr_225d22_optional
    (52) _10_225b22_expr_225d22_optional -> . [ expr ]
    (53) _10_225b22_expr_225d22_optional -> .
    (               shift and go to state 47
    [               shift and go to state 49
    ASSIGNOP        reduce using rule 53 (_10_225b22_expr_225d22_optional -> .)

    _10_225b22_expr_225d22_optional shift and go to state 48

state 27

    (42) stmt -> BEGIN . stmtlist END
    (29) stmtlist -> . stmt _8_223b22_stmt_repeat
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmtlist                       shift and go to state 50
    stmt                           shift and go to state 29
    location                       shift and go to state 32

state 28

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist . END
    END             shift and go to state 51


state 29

    (29) stmtlist -> stmt . _8_223b22_stmt_repeat
    (30) _8_223b22_stmt_repeat -> . _8_223b22_stmt_items
    (31) _8_223b22_stmt_repeat -> .
    (32) _8_223b22_stmt_items -> . _8_223b22_stmt_items _8_223b22_stmt_item
    (33) _8_223b22_stmt_items -> . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
    END             reduce using rule 31 (_8_223b22_stmt_repeat -> .)
    ;               shift and go to state 55

    _8_223b22_stmt_repeat          shift and go to state 52
    _8_223b22_stmt_items           shift and go to state 53
    _8_223b22_stmt_item            shift and go to state 54

state 30

    (39) stmt -> SKIP .
    ;               reduce using rule 39 (stmt -> SKIP .)
    END             reduce using rule 39 (stmt -> SKIP .)
    ELSE            reduce using rule 39 (stmt -> SKIP .)


state 31

    (40) stmt -> RETURN . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 56
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 32

    (41) stmt -> location . ASSIGNOP expr
    ASSIGNOP        shift and go to state 67


state 33

    (43) stmt -> IF . relation THEN stmt _9_ELSE_stmt_optional
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    relation                       shift and go to state 68
    expr                           shift and go to state 70
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 34

    (46) stmt -> BREAK .
    ;               reduce using rule 46 (stmt -> BREAK .)
    END             reduce using rule 46 (stmt -> BREAK .)
    ELSE            reduce using rule 46 (stmt -> BREAK .)


state 35

    (47) stmt -> WHILE . relation DO stmt
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    relation                       shift and go to state 71
    expr                           shift and go to state 70
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 36

    (48) stmt -> READ . ( location )
    (               shift and go to state 72


state 37

    (49) stmt -> WRITE . ( expr )
    (               shift and go to state 73


state 38

    (50) stmt -> PRINT . ( literal )
    (               shift and go to state 74


state 39

    (21) locallist -> locallist ; _7_local_223b22_repeat .
    ;               reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)
    BEGIN           reduce using rule 21 (locallist -> locallist ; _7_local_223b22_repeat .)


state 40

    (22) _7_local_223b22_repeat -> _7_local_223b22_items .
    (24) _7_local_223b22_items -> _7_local_223b22_items . _7_local_223b22_item
    (26) _7_local_223b22_item -> . local ;
    (27) local -> . func
    (28) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    ;               reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    BEGIN           reduce using rule 22 (_7_local_223b22_repeat -> _7_local_223b22_items .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _7_local_223b22_item           shift and go to state 75
    local                          shift and go to state 42
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 41

    (25) _7_local_223b22_items -> _7_local_223b22_item .
    FUN             reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ID              reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    ;               reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)
    BEGIN           reduce using rule 25 (_7_local_223b22_items -> _7_local_223b22_item .)


state 42

    (26) _7_local_223b22_item -> local . ;
    ;               shift and go to state 76


state 43

    (14) datatype -> FLOAT _5_225b22_expr_225d22_optional .
    ,               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    )               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    ;               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)


state 44

    (15) _5_225b22_expr_225d22_optional -> [ . expr ]
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 77
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 45

    (17) datatype -> INT _6_225b22_expr_225d22_optional .
    ,               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    )               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    ;               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    BEGIN           reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)


state 46

    (18) _6_225b22_expr_225d22_optional -> [ . expr ]
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 78
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 47

    (38) stmt -> ID ( . exprlist )
    (54) exprlist -> . expr _11_222c22_expr_repeat
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    exprlist                       shift and go to state 79
    expr                           shift and go to state 80
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 48

    (51) location -> ID _10_225b22_expr_225d22_optional .
    ASSIGNOP        reduce using rule 51 (location -> ID _10_225b22_expr_225d22_optional .)
    )               reduce using rule 51 (location -> ID _10_225b22_expr_225d22_optional .)


state 49

    (52) _10_225b22_expr_225d22_optional -> [ . expr ]
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 81
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 50

    (42) stmt -> BEGIN stmtlist . END
    END             shift and go to state 82


state 51

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .
    $end            reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    FUN             reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    ;               reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    BEGIN           reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)


state 52

    (29) stmtlist -> stmt _8_223b22_stmt_repeat .
    END             reduce using rule 29 (stmtlist -> stmt _8_223b22_stmt_repeat .)


state 53

    (30) _8_223b22_stmt_repeat -> _8_223b22_stmt_items .
    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items . _8_223b22_stmt_item
    (34) _8_223b22_stmt_item -> . ; stmt
    END             reduce using rule 30 (_8_223b22_stmt_repeat -> _8_223b22_stmt_items .)
    ;               shift and go to state 55

    _8_223b22_stmt_item            shift and go to state 83

state 54

    (33) _8_223b22_stmt_items -> _8_223b22_stmt_item .
    ;               reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)
    END             reduce using rule 33 (_8_223b22_stmt_items -> _8_223b22_stmt_item .)


state 55

    (34) _8_223b22_stmt_item -> ; . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 84
    location                       shift and go to state 32

state 56

    (40) stmt -> RETURN expr .
    ;               reduce using rule 40 (stmt -> RETURN expr .)
    END             reduce using rule 40 (stmt -> RETURN expr .)
    ELSE            reduce using rule 40 (stmt -> RETURN expr .)


state 57

    (60) expr -> factor .
    (61) expr -> factor . - expr
    (62) expr -> factor . + expr
    ;               reduce using rule 60 (expr -> factor .)
    END             reduce using rule 60 (expr -> factor .)
    ELSE            reduce using rule 60 (expr -> factor .)
    DF              reduce using rule 60 (expr -> factor .)
    ET              reduce using rule 60 (expr -> factor .)
    GE              reduce using rule 60 (expr -> factor .)
    GT              reduce using rule 60 (expr -> factor .)
    LE              reduce using rule 60 (expr -> factor .)
    LT              reduce using rule 60 (expr -> factor .)
    ]               reduce using rule 60 (expr -> factor .)
    ,               reduce using rule 60 (expr -> factor .)
    )               reduce using rule 60 (expr -> factor .)
    THEN            reduce using rule 60 (expr -> factor .)
    OR              reduce using rule 60 (expr -> factor .)
    AND             reduce using rule 60 (expr -> factor .)
    DO              reduce using rule 60 (expr -> factor .)
    -               shift and go to state 85
    +               shift and go to state 86


state 58

    (68) term -> - . term
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    term                           shift and go to state 87

state 59

    (67) term -> + . term
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    term                           shift and go to state 88

state 60

    (63) factor -> term .
    (64) factor -> term . / factor
    (65) factor -> term . * factor
    -               reduce using rule 63 (factor -> term .)
    +               reduce using rule 63 (factor -> term .)
    ;               reduce using rule 63 (factor -> term .)
    END             reduce using rule 63 (factor -> term .)
    ELSE            reduce using rule 63 (factor -> term .)
    DF              reduce using rule 63 (factor -> term .)
    ET              reduce using rule 63 (factor -> term .)
    GE              reduce using rule 63 (factor -> term .)
    GT              reduce using rule 63 (factor -> term .)
    LE              reduce using rule 63 (factor -> term .)
    LT              reduce using rule 63 (factor -> term .)
    ]               reduce using rule 63 (factor -> term .)
    ,               reduce using rule 63 (factor -> term .)
    )               reduce using rule 63 (factor -> term .)
    THEN            reduce using rule 63 (factor -> term .)
    OR              reduce using rule 63 (factor -> term .)
    AND             reduce using rule 63 (factor -> term .)
    DO              reduce using rule 63 (factor -> term .)
    /               shift and go to state 89
    *               shift and go to state 90


state 61

    (66) term -> ( . expr )
    (71) term -> ( . relation )
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 91
    relation                       shift and go to state 92
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 62

    (69) term -> FLOAT . ( expr )
    (               shift and go to state 93


state 63

    (70) term -> INT . ( expr )
    (               shift and go to state 94


state 64

    (72) term -> FCONST .
    /               reduce using rule 72 (term -> FCONST .)
    *               reduce using rule 72 (term -> FCONST .)
    -               reduce using rule 72 (term -> FCONST .)
    +               reduce using rule 72 (term -> FCONST .)
    ;               reduce using rule 72 (term -> FCONST .)
    END             reduce using rule 72 (term -> FCONST .)
    ELSE            reduce using rule 72 (term -> FCONST .)
    DF              reduce using rule 72 (term -> FCONST .)
    ET              reduce using rule 72 (term -> FCONST .)
    GE              reduce using rule 72 (term -> FCONST .)
    GT              reduce using rule 72 (term -> FCONST .)
    LE              reduce using rule 72 (term -> FCONST .)
    LT              reduce using rule 72 (term -> FCONST .)
    ]               reduce using rule 72 (term -> FCONST .)
    ,               reduce using rule 72 (term -> FCONST .)
    )               reduce using rule 72 (term -> FCONST .)
    THEN            reduce using rule 72 (term -> FCONST .)
    OR              reduce using rule 72 (term -> FCONST .)
    AND             reduce using rule 72 (term -> FCONST .)
    DO              reduce using rule 72 (term -> FCONST .)


state 65

    (73) term -> ICONST .
    /               reduce using rule 73 (term -> ICONST .)
    *               reduce using rule 73 (term -> ICONST .)
    -               reduce using rule 73 (term -> ICONST .)
    +               reduce using rule 73 (term -> ICONST .)
    ;               reduce using rule 73 (term -> ICONST .)
    END             reduce using rule 73 (term -> ICONST .)
    ELSE            reduce using rule 73 (term -> ICONST .)
    DF              reduce using rule 73 (term -> ICONST .)
    ET              reduce using rule 73 (term -> ICONST .)
    GE              reduce using rule 73 (term -> ICONST .)
    GT              reduce using rule 73 (term -> ICONST .)
    LE              reduce using rule 73 (term -> ICONST .)
    LT              reduce using rule 73 (term -> ICONST .)
    ]               reduce using rule 73 (term -> ICONST .)
    ,               reduce using rule 73 (term -> ICONST .)
    )               reduce using rule 73 (term -> ICONST .)
    THEN            reduce using rule 73 (term -> ICONST .)
    OR              reduce using rule 73 (term -> ICONST .)
    AND             reduce using rule 73 (term -> ICONST .)
    DO              reduce using rule 73 (term -> ICONST .)


state 66

    (74) term -> ID .
    (75) term -> ID . [ exprlist ]
    (76) term -> ID . ( exprlist )
    /               reduce using rule 74 (term -> ID .)
    *               reduce using rule 74 (term -> ID .)
    -               reduce using rule 74 (term -> ID .)
    +               reduce using rule 74 (term -> ID .)
    ;               reduce using rule 74 (term -> ID .)
    END             reduce using rule 74 (term -> ID .)
    ELSE            reduce using rule 74 (term -> ID .)
    DF              reduce using rule 74 (term -> ID .)
    ET              reduce using rule 74 (term -> ID .)
    GE              reduce using rule 74 (term -> ID .)
    GT              reduce using rule 74 (term -> ID .)
    LE              reduce using rule 74 (term -> ID .)
    LT              reduce using rule 74 (term -> ID .)
    ]               reduce using rule 74 (term -> ID .)
    ,               reduce using rule 74 (term -> ID .)
    )               reduce using rule 74 (term -> ID .)
    THEN            reduce using rule 74 (term -> ID .)
    OR              reduce using rule 74 (term -> ID .)
    AND             reduce using rule 74 (term -> ID .)
    DO              reduce using rule 74 (term -> ID .)
    [               shift and go to state 95
    (               shift and go to state 96


state 67

    (41) stmt -> location ASSIGNOP . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 97
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 68

    (43) stmt -> IF relation . THEN stmt _9_ELSE_stmt_optional
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    THEN            shift and go to state 98
    OR              shift and go to state 99
    AND             shift and go to state 100


state 69

    (77) relation -> NOT . relation
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    relation                       shift and go to state 101
    expr                           shift and go to state 70
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 70

    (80) relation -> expr . DF expr
    (81) relation -> expr . ET expr
    (82) relation -> expr . GE expr
    (83) relation -> expr . GT expr
    (84) relation -> expr . LE expr
    (85) relation -> expr . LT expr
    DF              shift and go to state 102
    ET              shift and go to state 103
    GE              shift and go to state 104
    GT              shift and go to state 105
    LE              shift and go to state 106
    LT              shift and go to state 107


state 71

    (47) stmt -> WHILE relation . DO stmt
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    DO              shift and go to state 108
    OR              shift and go to state 99
    AND             shift and go to state 100


state 72

    (48) stmt -> READ ( . location )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 110

    location                       shift and go to state 109

state 73

    (49) stmt -> WRITE ( . expr )
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 111
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 74

    (50) stmt -> PRINT ( . literal )
    (35) literal -> . FCONST
    (36) literal -> . ICONST
    (37) literal -> . STRING
    FCONST          shift and go to state 113
    ICONST          shift and go to state 114
    STRING          shift and go to state 115

    literal                        shift and go to state 112

state 75

    (24) _7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .
    FUN             reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ID              reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    ;               reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)
    BEGIN           reduce using rule 24 (_7_local_223b22_items -> _7_local_223b22_items _7_local_223b22_item .)


state 76

    (26) _7_local_223b22_item -> local ; .
    FUN             reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ID              reduce using rule 26 (_7_local_223b22_item -> local ; .)
    ;               reduce using rule 26 (_7_local_223b22_item -> local ; .)
    BEGIN           reduce using rule 26 (_7_local_223b22_item -> local ; .)


state 77

    (15) _5_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 116


state 78

    (18) _6_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 117


state 79

    (38) stmt -> ID ( exprlist . )
    )               shift and go to state 118


state 80

    (54) exprlist -> expr . _11_222c22_expr_repeat
    (55) _11_222c22_expr_repeat -> . _11_222c22_expr_items
    (56) _11_222c22_expr_repeat -> .
    (57) _11_222c22_expr_items -> . _11_222c22_expr_items _11_222c22_expr_item
    (58) _11_222c22_expr_items -> . _11_222c22_expr_item
    (59) _11_222c22_expr_item -> . , expr
    )               reduce using rule 56 (_11_222c22_expr_repeat -> .)
    ]               reduce using rule 56 (_11_222c22_expr_repeat -> .)
    ,               shift and go to state 122

    _11_222c22_expr_repeat         shift and go to state 119
    _11_222c22_expr_items          shift and go to state 120
    _11_222c22_expr_item           shift and go to state 121

state 81

    (52) _10_225b22_expr_225d22_optional -> [ expr . ]
    ]               shift and go to state 123


state 82

    (42) stmt -> BEGIN stmtlist END .
    ;               reduce using rule 42 (stmt -> BEGIN stmtlist END .)
    END             reduce using rule 42 (stmt -> BEGIN stmtlist END .)
    ELSE            reduce using rule 42 (stmt -> BEGIN stmtlist END .)


state 83

    (32) _8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .
    ;               reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)
    END             reduce using rule 32 (_8_223b22_stmt_items -> _8_223b22_stmt_items _8_223b22_stmt_item .)


state 84

    (34) _8_223b22_stmt_item -> ; stmt .
    ;               reduce using rule 34 (_8_223b22_stmt_item -> ; stmt .)
    END             reduce using rule 34 (_8_223b22_stmt_item -> ; stmt .)


state 85

    (61) expr -> factor - . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    factor                         shift and go to state 57
    expr                           shift and go to state 124
    term                           shift and go to state 60

state 86

    (62) expr -> factor + . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    factor                         shift and go to state 57
    expr                           shift and go to state 125
    term                           shift and go to state 60

state 87

    (68) term -> - term .
    /               reduce using rule 68 (term -> - term .)
    *               reduce using rule 68 (term -> - term .)
    -               reduce using rule 68 (term -> - term .)
    +               reduce using rule 68 (term -> - term .)
    ;               reduce using rule 68 (term -> - term .)
    END             reduce using rule 68 (term -> - term .)
    ELSE            reduce using rule 68 (term -> - term .)
    DF              reduce using rule 68 (term -> - term .)
    ET              reduce using rule 68 (term -> - term .)
    GE              reduce using rule 68 (term -> - term .)
    GT              reduce using rule 68 (term -> - term .)
    LE              reduce using rule 68 (term -> - term .)
    LT              reduce using rule 68 (term -> - term .)
    ]               reduce using rule 68 (term -> - term .)
    ,               reduce using rule 68 (term -> - term .)
    )               reduce using rule 68 (term -> - term .)
    THEN            reduce using rule 68 (term -> - term .)
    OR              reduce using rule 68 (term -> - term .)
    AND             reduce using rule 68 (term -> - term .)
    DO              reduce using rule 68 (term -> - term .)


state 88

    (67) term -> + term .
    /               reduce using rule 67 (term -> + term .)
    *               reduce using rule 67 (term -> + term .)
    -               reduce using rule 67 (term -> + term .)
    +               reduce using rule 67 (term -> + term .)
    ;               reduce using rule 67 (term -> + term .)
    END             reduce using rule 67 (term -> + term .)
    ELSE            reduce using rule 67 (term -> + term .)
    DF              reduce using rule 67 (term -> + term .)
    ET              reduce using rule 67 (term -> + term .)
    GE              reduce using rule 67 (term -> + term .)
    GT              reduce using rule 67 (term -> + term .)
    LE              reduce using rule 67 (term -> + term .)
    LT              reduce using rule 67 (term -> + term .)
    ]               reduce using rule 67 (term -> + term .)
    ,               reduce using rule 67 (term -> + term .)
    )               reduce using rule 67 (term -> + term .)
    THEN            reduce using rule 67 (term -> + term .)
    OR              reduce using rule 67 (term -> + term .)
    AND             reduce using rule 67 (term -> + term .)
    DO              reduce using rule 67 (term -> + term .)


state 89

    (64) factor -> term / . factor
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    term                           shift and go to state 60
    factor                         shift and go to state 126

state 90

    (65) factor -> term * . factor
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    term                           shift and go to state 60
    factor                         shift and go to state 127

state 91

    (66) term -> ( expr . )
    (80) relation -> expr . DF expr
    (81) relation -> expr . ET expr
    (82) relation -> expr . GE expr
    (83) relation -> expr . GT expr
    (84) relation -> expr . LE expr
    (85) relation -> expr . LT expr
    )               shift and go to state 128
    DF              shift and go to state 102
    ET              shift and go to state 103
    GE              shift and go to state 104
    GT              shift and go to state 105
    LE              shift and go to state 106
    LT              shift and go to state 107


state 92

    (71) term -> ( relation . )
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    )               shift and go to state 129
    OR              shift and go to state 99
    AND             shift and go to state 100


state 93

    (69) term -> FLOAT ( . expr )
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 130
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 94

    (70) term -> INT ( . expr )
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 131
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 95

    (75) term -> ID [ . exprlist ]
    (54) exprlist -> . expr _11_222c22_expr_repeat
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    exprlist                       shift and go to state 132
    expr                           shift and go to state 80
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 96

    (76) term -> ID ( . exprlist )
    (54) exprlist -> . expr _11_222c22_expr_repeat
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    exprlist                       shift and go to state 133
    expr                           shift and go to state 80
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 97

    (41) stmt -> location ASSIGNOP expr .
    ;               reduce using rule 41 (stmt -> location ASSIGNOP expr .)
    END             reduce using rule 41 (stmt -> location ASSIGNOP expr .)
    ELSE            reduce using rule 41 (stmt -> location ASSIGNOP expr .)


state 98

    (43) stmt -> IF relation THEN . stmt _9_ELSE_stmt_optional
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 134
    location                       shift and go to state 32

state 99

    (78) relation -> relation OR . relation
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    relation                       shift and go to state 135
    expr                           shift and go to state 70
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 100

    (79) relation -> relation AND . relation
    (77) relation -> . NOT relation
    (78) relation -> . relation OR relation
    (79) relation -> . relation AND relation
    (80) relation -> . expr DF expr
    (81) relation -> . expr ET expr
    (82) relation -> . expr GE expr
    (83) relation -> . expr GT expr
    (84) relation -> . expr LE expr
    (85) relation -> . expr LT expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    NOT             shift and go to state 69
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    relation                       shift and go to state 136
    expr                           shift and go to state 70
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 101

    (77) relation -> NOT relation .
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    THEN            reduce using rule 77 (relation -> NOT relation .)
    OR              reduce using rule 77 (relation -> NOT relation .)
    AND             reduce using rule 77 (relation -> NOT relation .)
    DO              reduce using rule 77 (relation -> NOT relation .)
    )               reduce using rule 77 (relation -> NOT relation .)


state 102

    (80) relation -> expr DF . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 137
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 103

    (81) relation -> expr ET . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 138
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 104

    (82) relation -> expr GE . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 139
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 105

    (83) relation -> expr GT . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 140
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 106

    (84) relation -> expr LE . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 141
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 107

    (85) relation -> expr LT . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 142
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 108

    (47) stmt -> WHILE relation DO . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 143
    location                       shift and go to state 32

state 109

    (48) stmt -> READ ( location . )
    )               shift and go to state 144


state 110

    (51) location -> ID . _10_225b22_expr_225d22_optional
    (52) _10_225b22_expr_225d22_optional -> . [ expr ]
    (53) _10_225b22_expr_225d22_optional -> .
    [               shift and go to state 49
    )               reduce using rule 53 (_10_225b22_expr_225d22_optional -> .)

    _10_225b22_expr_225d22_optional shift and go to state 48

state 111

    (49) stmt -> WRITE ( expr . )
    )               shift and go to state 145


state 112

    (50) stmt -> PRINT ( literal . )
    )               shift and go to state 146


state 113

    (35) literal -> FCONST .
    )               reduce using rule 35 (literal -> FCONST .)


state 114

    (36) literal -> ICONST .
    )               reduce using rule 36 (literal -> ICONST .)


state 115

    (37) literal -> STRING .
    )               reduce using rule 37 (literal -> STRING .)


state 116

    (15) _5_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)


state 117

    (18) _6_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    BEGIN           reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)


state 118

    (38) stmt -> ID ( exprlist ) .
    ;               reduce using rule 38 (stmt -> ID ( exprlist ) .)
    END             reduce using rule 38 (stmt -> ID ( exprlist ) .)
    ELSE            reduce using rule 38 (stmt -> ID ( exprlist ) .)


state 119

    (54) exprlist -> expr _11_222c22_expr_repeat .
    )               reduce using rule 54 (exprlist -> expr _11_222c22_expr_repeat .)
    ]               reduce using rule 54 (exprlist -> expr _11_222c22_expr_repeat .)


state 120

    (55) _11_222c22_expr_repeat -> _11_222c22_expr_items .
    (57) _11_222c22_expr_items -> _11_222c22_expr_items . _11_222c22_expr_item
    (59) _11_222c22_expr_item -> . , expr
    )               reduce using rule 55 (_11_222c22_expr_repeat -> _11_222c22_expr_items .)
    ]               reduce using rule 55 (_11_222c22_expr_repeat -> _11_222c22_expr_items .)
    ,               shift and go to state 122

    _11_222c22_expr_item           shift and go to state 147

state 121

    (58) _11_222c22_expr_items -> _11_222c22_expr_item .
    ,               reduce using rule 58 (_11_222c22_expr_items -> _11_222c22_expr_item .)
    )               reduce using rule 58 (_11_222c22_expr_items -> _11_222c22_expr_item .)
    ]               reduce using rule 58 (_11_222c22_expr_items -> _11_222c22_expr_item .)


state 122

    (59) _11_222c22_expr_item -> , . expr
    (60) expr -> . factor
    (61) expr -> . factor - expr
    (62) expr -> . factor + expr
    (63) factor -> . term
    (64) factor -> . term / factor
    (65) factor -> . term * factor
    (66) term -> . ( expr )
    (67) term -> . + term
    (68) term -> . - term
    (69) term -> . FLOAT ( expr )
    (70) term -> . INT ( expr )
    (71) term -> . ( relation )
    (72) term -> . FCONST
    (73) term -> . ICONST
    (74) term -> . ID
    (75) term -> . ID [ exprlist ]
    (76) term -> . ID ( exprlist )
    (               shift and go to state 61
    +               shift and go to state 59
    -               shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 63
    FCONST          shift and go to state 64
    ICONST          shift and go to state 65
    ID              shift and go to state 66

    expr                           shift and go to state 148
    factor                         shift and go to state 57
    term                           shift and go to state 60

state 123

    (52) _10_225b22_expr_225d22_optional -> [ expr ] .
    ASSIGNOP        reduce using rule 52 (_10_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 52 (_10_225b22_expr_225d22_optional -> [ expr ] .)


state 124

    (61) expr -> factor - expr .
    ;               reduce using rule 61 (expr -> factor - expr .)
    END             reduce using rule 61 (expr -> factor - expr .)
    ELSE            reduce using rule 61 (expr -> factor - expr .)
    DF              reduce using rule 61 (expr -> factor - expr .)
    ET              reduce using rule 61 (expr -> factor - expr .)
    GE              reduce using rule 61 (expr -> factor - expr .)
    GT              reduce using rule 61 (expr -> factor - expr .)
    LE              reduce using rule 61 (expr -> factor - expr .)
    LT              reduce using rule 61 (expr -> factor - expr .)
    ]               reduce using rule 61 (expr -> factor - expr .)
    ,               reduce using rule 61 (expr -> factor - expr .)
    )               reduce using rule 61 (expr -> factor - expr .)
    THEN            reduce using rule 61 (expr -> factor - expr .)
    OR              reduce using rule 61 (expr -> factor - expr .)
    AND             reduce using rule 61 (expr -> factor - expr .)
    DO              reduce using rule 61 (expr -> factor - expr .)


state 125

    (62) expr -> factor + expr .
    ;               reduce using rule 62 (expr -> factor + expr .)
    END             reduce using rule 62 (expr -> factor + expr .)
    ELSE            reduce using rule 62 (expr -> factor + expr .)
    DF              reduce using rule 62 (expr -> factor + expr .)
    ET              reduce using rule 62 (expr -> factor + expr .)
    GE              reduce using rule 62 (expr -> factor + expr .)
    GT              reduce using rule 62 (expr -> factor + expr .)
    LE              reduce using rule 62 (expr -> factor + expr .)
    LT              reduce using rule 62 (expr -> factor + expr .)
    ]               reduce using rule 62 (expr -> factor + expr .)
    ,               reduce using rule 62 (expr -> factor + expr .)
    )               reduce using rule 62 (expr -> factor + expr .)
    THEN            reduce using rule 62 (expr -> factor + expr .)
    OR              reduce using rule 62 (expr -> factor + expr .)
    AND             reduce using rule 62 (expr -> factor + expr .)
    DO              reduce using rule 62 (expr -> factor + expr .)


state 126

    (64) factor -> term / factor .
    -               reduce using rule 64 (factor -> term / factor .)
    +               reduce using rule 64 (factor -> term / factor .)
    ;               reduce using rule 64 (factor -> term / factor .)
    END             reduce using rule 64 (factor -> term / factor .)
    ELSE            reduce using rule 64 (factor -> term / factor .)
    DF              reduce using rule 64 (factor -> term / factor .)
    ET              reduce using rule 64 (factor -> term / factor .)
    GE              reduce using rule 64 (factor -> term / factor .)
    GT              reduce using rule 64 (factor -> term / factor .)
    LE              reduce using rule 64 (factor -> term / factor .)
    LT              reduce using rule 64 (factor -> term / factor .)
    ]               reduce using rule 64 (factor -> term / factor .)
    ,               reduce using rule 64 (factor -> term / factor .)
    )               reduce using rule 64 (factor -> term / factor .)
    THEN            reduce using rule 64 (factor -> term / factor .)
    OR              reduce using rule 64 (factor -> term / factor .)
    AND             reduce using rule 64 (factor -> term / factor .)
    DO              reduce using rule 64 (factor -> term / factor .)


state 127

    (65) factor -> term * factor .
    -               reduce using rule 65 (factor -> term * factor .)
    +               reduce using rule 65 (factor -> term * factor .)
    ;               reduce using rule 65 (factor -> term * factor .)
    END             reduce using rule 65 (factor -> term * factor .)
    ELSE            reduce using rule 65 (factor -> term * factor .)
    DF              reduce using rule 65 (factor -> term * factor .)
    ET              reduce using rule 65 (factor -> term * factor .)
    GE              reduce using rule 65 (factor -> term * factor .)
    GT              reduce using rule 65 (factor -> term * factor .)
    LE              reduce using rule 65 (factor -> term * factor .)
    LT              reduce using rule 65 (factor -> term * factor .)
    ]               reduce using rule 65 (factor -> term * factor .)
    ,               reduce using rule 65 (factor -> term * factor .)
    )               reduce using rule 65 (factor -> term * factor .)
    THEN            reduce using rule 65 (factor -> term * factor .)
    OR              reduce using rule 65 (factor -> term * factor .)
    AND             reduce using rule 65 (factor -> term * factor .)
    DO              reduce using rule 65 (factor -> term * factor .)


state 128

    (66) term -> ( expr ) .
    /               reduce using rule 66 (term -> ( expr ) .)
    *               reduce using rule 66 (term -> ( expr ) .)
    -               reduce using rule 66 (term -> ( expr ) .)
    +               reduce using rule 66 (term -> ( expr ) .)
    ;               reduce using rule 66 (term -> ( expr ) .)
    END             reduce using rule 66 (term -> ( expr ) .)
    ELSE            reduce using rule 66 (term -> ( expr ) .)
    DF              reduce using rule 66 (term -> ( expr ) .)
    ET              reduce using rule 66 (term -> ( expr ) .)
    GE              reduce using rule 66 (term -> ( expr ) .)
    GT              reduce using rule 66 (term -> ( expr ) .)
    LE              reduce using rule 66 (term -> ( expr ) .)
    LT              reduce using rule 66 (term -> ( expr ) .)
    ]               reduce using rule 66 (term -> ( expr ) .)
    ,               reduce using rule 66 (term -> ( expr ) .)
    )               reduce using rule 66 (term -> ( expr ) .)
    THEN            reduce using rule 66 (term -> ( expr ) .)
    OR              reduce using rule 66 (term -> ( expr ) .)
    AND             reduce using rule 66 (term -> ( expr ) .)
    DO              reduce using rule 66 (term -> ( expr ) .)


state 129

    (71) term -> ( relation ) .
    /               reduce using rule 71 (term -> ( relation ) .)
    *               reduce using rule 71 (term -> ( relation ) .)
    -               reduce using rule 71 (term -> ( relation ) .)
    +               reduce using rule 71 (term -> ( relation ) .)
    ;               reduce using rule 71 (term -> ( relation ) .)
    END             reduce using rule 71 (term -> ( relation ) .)
    ELSE            reduce using rule 71 (term -> ( relation ) .)
    DF              reduce using rule 71 (term -> ( relation ) .)
    ET              reduce using rule 71 (term -> ( relation ) .)
    GE              reduce using rule 71 (term -> ( relation ) .)
    GT              reduce using rule 71 (term -> ( relation ) .)
    LE              reduce using rule 71 (term -> ( relation ) .)
    LT              reduce using rule 71 (term -> ( relation ) .)
    ]               reduce using rule 71 (term -> ( relation ) .)
    ,               reduce using rule 71 (term -> ( relation ) .)
    )               reduce using rule 71 (term -> ( relation ) .)
    THEN            reduce using rule 71 (term -> ( relation ) .)
    OR              reduce using rule 71 (term -> ( relation ) .)
    AND             reduce using rule 71 (term -> ( relation ) .)
    DO              reduce using rule 71 (term -> ( relation ) .)


state 130

    (69) term -> FLOAT ( expr . )
    )               shift and go to state 149


state 131

    (70) term -> INT ( expr . )
    )               shift and go to state 150


state 132

    (75) term -> ID [ exprlist . ]
    ]               shift and go to state 151


state 133

    (76) term -> ID ( exprlist . )
    )               shift and go to state 152


state 134

    (43) stmt -> IF relation THEN stmt . _9_ELSE_stmt_optional
    (44) _9_ELSE_stmt_optional -> . ELSE stmt
    (45) _9_ELSE_stmt_optional -> .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 154
    ;               reduce using rule 45 (_9_ELSE_stmt_optional -> .)
    END             reduce using rule 45 (_9_ELSE_stmt_optional -> .)

    _9_ELSE_stmt_optional          shift and go to state 153

state 135

    (78) relation -> relation OR relation .
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    THEN            reduce using rule 78 (relation -> relation OR relation .)
    OR              reduce using rule 78 (relation -> relation OR relation .)
    DO              reduce using rule 78 (relation -> relation OR relation .)
    )               reduce using rule 78 (relation -> relation OR relation .)
    AND             shift and go to state 100


state 136

    (79) relation -> relation AND relation .
    (78) relation -> relation . OR relation
    (79) relation -> relation . AND relation
    THEN            reduce using rule 79 (relation -> relation AND relation .)
    OR              reduce using rule 79 (relation -> relation AND relation .)
    AND             reduce using rule 79 (relation -> relation AND relation .)
    DO              reduce using rule 79 (relation -> relation AND relation .)
    )               reduce using rule 79 (relation -> relation AND relation .)


state 137

    (80) relation -> expr DF expr .
    THEN            reduce using rule 80 (relation -> expr DF expr .)
    OR              reduce using rule 80 (relation -> expr DF expr .)
    AND             reduce using rule 80 (relation -> expr DF expr .)
    DO              reduce using rule 80 (relation -> expr DF expr .)
    )               reduce using rule 80 (relation -> expr DF expr .)


state 138

    (81) relation -> expr ET expr .
    THEN            reduce using rule 81 (relation -> expr ET expr .)
    OR              reduce using rule 81 (relation -> expr ET expr .)
    AND             reduce using rule 81 (relation -> expr ET expr .)
    DO              reduce using rule 81 (relation -> expr ET expr .)
    )               reduce using rule 81 (relation -> expr ET expr .)


state 139

    (82) relation -> expr GE expr .
    THEN            reduce using rule 82 (relation -> expr GE expr .)
    OR              reduce using rule 82 (relation -> expr GE expr .)
    AND             reduce using rule 82 (relation -> expr GE expr .)
    DO              reduce using rule 82 (relation -> expr GE expr .)
    )               reduce using rule 82 (relation -> expr GE expr .)


state 140

    (83) relation -> expr GT expr .
    THEN            reduce using rule 83 (relation -> expr GT expr .)
    OR              reduce using rule 83 (relation -> expr GT expr .)
    AND             reduce using rule 83 (relation -> expr GT expr .)
    DO              reduce using rule 83 (relation -> expr GT expr .)
    )               reduce using rule 83 (relation -> expr GT expr .)


state 141

    (84) relation -> expr LE expr .
    THEN            reduce using rule 84 (relation -> expr LE expr .)
    OR              reduce using rule 84 (relation -> expr LE expr .)
    AND             reduce using rule 84 (relation -> expr LE expr .)
    DO              reduce using rule 84 (relation -> expr LE expr .)
    )               reduce using rule 84 (relation -> expr LE expr .)


state 142

    (85) relation -> expr LT expr .
    THEN            reduce using rule 85 (relation -> expr LT expr .)
    OR              reduce using rule 85 (relation -> expr LT expr .)
    AND             reduce using rule 85 (relation -> expr LT expr .)
    DO              reduce using rule 85 (relation -> expr LT expr .)
    )               reduce using rule 85 (relation -> expr LT expr .)


state 143

    (47) stmt -> WHILE relation DO stmt .
    ;               reduce using rule 47 (stmt -> WHILE relation DO stmt .)
    END             reduce using rule 47 (stmt -> WHILE relation DO stmt .)
    ELSE            reduce using rule 47 (stmt -> WHILE relation DO stmt .)


state 144

    (48) stmt -> READ ( location ) .
    ;               reduce using rule 48 (stmt -> READ ( location ) .)
    END             reduce using rule 48 (stmt -> READ ( location ) .)
    ELSE            reduce using rule 48 (stmt -> READ ( location ) .)


state 145

    (49) stmt -> WRITE ( expr ) .
    ;               reduce using rule 49 (stmt -> WRITE ( expr ) .)
    END             reduce using rule 49 (stmt -> WRITE ( expr ) .)
    ELSE            reduce using rule 49 (stmt -> WRITE ( expr ) .)


state 146

    (50) stmt -> PRINT ( literal ) .
    ;               reduce using rule 50 (stmt -> PRINT ( literal ) .)
    END             reduce using rule 50 (stmt -> PRINT ( literal ) .)
    ELSE            reduce using rule 50 (stmt -> PRINT ( literal ) .)


state 147

    (57) _11_222c22_expr_items -> _11_222c22_expr_items _11_222c22_expr_item .
    ,               reduce using rule 57 (_11_222c22_expr_items -> _11_222c22_expr_items _11_222c22_expr_item .)
    )               reduce using rule 57 (_11_222c22_expr_items -> _11_222c22_expr_items _11_222c22_expr_item .)
    ]               reduce using rule 57 (_11_222c22_expr_items -> _11_222c22_expr_items _11_222c22_expr_item .)


state 148

    (59) _11_222c22_expr_item -> , expr .
    ,               reduce using rule 59 (_11_222c22_expr_item -> , expr .)
    )               reduce using rule 59 (_11_222c22_expr_item -> , expr .)
    ]               reduce using rule 59 (_11_222c22_expr_item -> , expr .)


state 149

    (69) term -> FLOAT ( expr ) .
    /               reduce using rule 69 (term -> FLOAT ( expr ) .)
    *               reduce using rule 69 (term -> FLOAT ( expr ) .)
    -               reduce using rule 69 (term -> FLOAT ( expr ) .)
    +               reduce using rule 69 (term -> FLOAT ( expr ) .)
    ;               reduce using rule 69 (term -> FLOAT ( expr ) .)
    END             reduce using rule 69 (term -> FLOAT ( expr ) .)
    ELSE            reduce using rule 69 (term -> FLOAT ( expr ) .)
    DF              reduce using rule 69 (term -> FLOAT ( expr ) .)
    ET              reduce using rule 69 (term -> FLOAT ( expr ) .)
    GE              reduce using rule 69 (term -> FLOAT ( expr ) .)
    GT              reduce using rule 69 (term -> FLOAT ( expr ) .)
    LE              reduce using rule 69 (term -> FLOAT ( expr ) .)
    LT              reduce using rule 69 (term -> FLOAT ( expr ) .)
    ]               reduce using rule 69 (term -> FLOAT ( expr ) .)
    ,               reduce using rule 69 (term -> FLOAT ( expr ) .)
    )               reduce using rule 69 (term -> FLOAT ( expr ) .)
    THEN            reduce using rule 69 (term -> FLOAT ( expr ) .)
    OR              reduce using rule 69 (term -> FLOAT ( expr ) .)
    AND             reduce using rule 69 (term -> FLOAT ( expr ) .)
    DO              reduce using rule 69 (term -> FLOAT ( expr ) .)


state 150

    (70) term -> INT ( expr ) .
    /               reduce using rule 70 (term -> INT ( expr ) .)
    *               reduce using rule 70 (term -> INT ( expr ) .)
    -               reduce using rule 70 (term -> INT ( expr ) .)
    +               reduce using rule 70 (term -> INT ( expr ) .)
    ;               reduce using rule 70 (term -> INT ( expr ) .)
    END             reduce using rule 70 (term -> INT ( expr ) .)
    ELSE            reduce using rule 70 (term -> INT ( expr ) .)
    DF              reduce using rule 70 (term -> INT ( expr ) .)
    ET              reduce using rule 70 (term -> INT ( expr ) .)
    GE              reduce using rule 70 (term -> INT ( expr ) .)
    GT              reduce using rule 70 (term -> INT ( expr ) .)
    LE              reduce using rule 70 (term -> INT ( expr ) .)
    LT              reduce using rule 70 (term -> INT ( expr ) .)
    ]               reduce using rule 70 (term -> INT ( expr ) .)
    ,               reduce using rule 70 (term -> INT ( expr ) .)
    )               reduce using rule 70 (term -> INT ( expr ) .)
    THEN            reduce using rule 70 (term -> INT ( expr ) .)
    OR              reduce using rule 70 (term -> INT ( expr ) .)
    AND             reduce using rule 70 (term -> INT ( expr ) .)
    DO              reduce using rule 70 (term -> INT ( expr ) .)


state 151

    (75) term -> ID [ exprlist ] .
    /               reduce using rule 75 (term -> ID [ exprlist ] .)
    *               reduce using rule 75 (term -> ID [ exprlist ] .)
    -               reduce using rule 75 (term -> ID [ exprlist ] .)
    +               reduce using rule 75 (term -> ID [ exprlist ] .)
    ;               reduce using rule 75 (term -> ID [ exprlist ] .)
    END             reduce using rule 75 (term -> ID [ exprlist ] .)
    ELSE            reduce using rule 75 (term -> ID [ exprlist ] .)
    DF              reduce using rule 75 (term -> ID [ exprlist ] .)
    ET              reduce using rule 75 (term -> ID [ exprlist ] .)
    GE              reduce using rule 75 (term -> ID [ exprlist ] .)
    GT              reduce using rule 75 (term -> ID [ exprlist ] .)
    LE              reduce using rule 75 (term -> ID [ exprlist ] .)
    LT              reduce using rule 75 (term -> ID [ exprlist ] .)
    ]               reduce using rule 75 (term -> ID [ exprlist ] .)
    ,               reduce using rule 75 (term -> ID [ exprlist ] .)
    )               reduce using rule 75 (term -> ID [ exprlist ] .)
    THEN            reduce using rule 75 (term -> ID [ exprlist ] .)
    OR              reduce using rule 75 (term -> ID [ exprlist ] .)
    AND             reduce using rule 75 (term -> ID [ exprlist ] .)
    DO              reduce using rule 75 (term -> ID [ exprlist ] .)


state 152

    (76) term -> ID ( exprlist ) .
    /               reduce using rule 76 (term -> ID ( exprlist ) .)
    *               reduce using rule 76 (term -> ID ( exprlist ) .)
    -               reduce using rule 76 (term -> ID ( exprlist ) .)
    +               reduce using rule 76 (term -> ID ( exprlist ) .)
    ;               reduce using rule 76 (term -> ID ( exprlist ) .)
    END             reduce using rule 76 (term -> ID ( exprlist ) .)
    ELSE            reduce using rule 76 (term -> ID ( exprlist ) .)
    DF              reduce using rule 76 (term -> ID ( exprlist ) .)
    ET              reduce using rule 76 (term -> ID ( exprlist ) .)
    GE              reduce using rule 76 (term -> ID ( exprlist ) .)
    GT              reduce using rule 76 (term -> ID ( exprlist ) .)
    LE              reduce using rule 76 (term -> ID ( exprlist ) .)
    LT              reduce using rule 76 (term -> ID ( exprlist ) .)
    ]               reduce using rule 76 (term -> ID ( exprlist ) .)
    ,               reduce using rule 76 (term -> ID ( exprlist ) .)
    )               reduce using rule 76 (term -> ID ( exprlist ) .)
    THEN            reduce using rule 76 (term -> ID ( exprlist ) .)
    OR              reduce using rule 76 (term -> ID ( exprlist ) .)
    AND             reduce using rule 76 (term -> ID ( exprlist ) .)
    DO              reduce using rule 76 (term -> ID ( exprlist ) .)


state 153

    (43) stmt -> IF relation THEN stmt _9_ELSE_stmt_optional .
    ;               reduce using rule 43 (stmt -> IF relation THEN stmt _9_ELSE_stmt_optional .)
    END             reduce using rule 43 (stmt -> IF relation THEN stmt _9_ELSE_stmt_optional .)
    ELSE            reduce using rule 43 (stmt -> IF relation THEN stmt _9_ELSE_stmt_optional .)


state 154

    (44) _9_ELSE_stmt_optional -> ELSE . stmt
    (38) stmt -> . ID ( exprlist )
    (39) stmt -> . SKIP
    (40) stmt -> . RETURN expr
    (41) stmt -> . location ASSIGNOP expr
    (42) stmt -> . BEGIN stmtlist END
    (43) stmt -> . IF relation THEN stmt _9_ELSE_stmt_optional
    (46) stmt -> . BREAK
    (47) stmt -> . WHILE relation DO stmt
    (48) stmt -> . READ ( location )
    (49) stmt -> . WRITE ( expr )
    (50) stmt -> . PRINT ( literal )
    (51) location -> . ID _10_225b22_expr_225d22_optional
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 155
    location                       shift and go to state 32

state 155

    (44) _9_ELSE_stmt_optional -> ELSE stmt .
    ELSE            reduce using rule 44 (_9_ELSE_stmt_optional -> ELSE stmt .)
    ;               reduce using rule 44 (_9_ELSE_stmt_optional -> ELSE stmt .)
    END             reduce using rule 44 (_9_ELSE_stmt_optional -> ELSE stmt .)


Conflicts:

shift/reduce conflict for ELSE in state 134 resolved as shift