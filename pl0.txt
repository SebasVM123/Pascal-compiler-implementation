Grammar:

Rule 0     S' -> program
Rule 1     program -> funclist
Rule 2     funclist -> _1_funclist_optional func
Rule 3     _1_funclist_optional -> funclist
Rule 4     _1_funclist_optional -> <empty>
Rule 5     func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
Rule 6     _2_parmlist_optional -> parmlist
Rule 7     _2_parmlist_optional -> <empty>
Rule 8     _3_locallist_optional -> locallist
Rule 9     _3_locallist_optional -> <empty>
Rule 10    parmlist -> _4_parmlist_222c22_optional parm
Rule 11    _4_parmlist_222c22_optional -> parmlist ,
Rule 12    _4_parmlist_222c22_optional -> <empty>
Rule 13    parm -> ID : datatype
Rule 14    datatype -> FLOAT _5_225b22_expr_225d22_optional
Rule 15    _5_225b22_expr_225d22_optional -> [ expr ]
Rule 16    _5_225b22_expr_225d22_optional -> <empty>
Rule 17    datatype -> INT _6_225b22_expr_225d22_optional
Rule 18    _6_225b22_expr_225d22_optional -> [ expr ]
Rule 19    _6_225b22_expr_225d22_optional -> <empty>
Rule 20    locallist -> local ; locallist
Rule 21    locallist -> local ;
Rule 22    local -> func
Rule 23    local -> parm
Rule 24    stmtlist -> stmt ; stmtlist
Rule 25    stmtlist -> stmt
Rule 26    stmt -> ID ( exprlist )
Rule 27    stmt -> SKIP
Rule 28    stmt -> RETURN expr
Rule 29    stmt -> location ASSIGNOP expr
Rule 30    stmt -> BEGIN stmtlist END
Rule 31    stmt -> IF relation THEN stmt
Rule 32    stmt -> BREAK
Rule 33    stmt -> WHILE relation DO stmt
Rule 34    stmt -> READ ( location )
Rule 35    stmt -> WRITE ( expr )
Rule 36    stmt -> PRINT ( literal )
Rule 37    literal -> FCONST
Rule 38    literal -> ICONST
Rule 39    literal -> STRING
Rule 40    location -> ID [ expr ]
Rule 41    location -> ID
Rule 42    expr -> FLOAT ( expr )
Rule 43    expr -> INT ( expr )
Rule 44    expr -> ID ( _7_exprlist_optional )
Rule 45    _7_exprlist_optional -> exprlist
Rule 46    _7_exprlist_optional -> <empty>
Rule 47    expr -> ID [ expr ]
Rule 48    expr -> ID
Rule 49    expr -> FCONST
Rule 50    expr -> ICONST
Rule 51    expr -> ( expr )
Rule 52    expr -> + expr  [precedence=right, level=7]
Rule 53    expr -> - expr  [precedence=right, level=7]
Rule 54    expr -> expr / expr  [precedence=left, level=6]
Rule 55    expr -> expr * expr  [precedence=left, level=6]
Rule 56    expr -> expr - expr  [precedence=left, level=5]
Rule 57    expr -> expr + expr  [precedence=left, level=5]
Rule 58    relation -> ( relation )
Rule 59    relation -> NOT relation  [precedence=right, level=7]
Rule 60    relation -> relation OR relation  [precedence=left, level=1]
Rule 61    relation -> relation AND relation  [precedence=left, level=2]
Rule 62    relation -> expr DF expr  [precedence=left, level=3]
Rule 63    relation -> expr ET expr  [precedence=left, level=3]
Rule 64    relation -> expr GE expr  [precedence=left, level=4]
Rule 65    relation -> expr GT expr  [precedence=left, level=4]
Rule 66    relation -> expr LE expr  [precedence=left, level=4]
Rule 67    relation -> expr LT expr  [precedence=left, level=4]
Rule 68    exprlist -> expr
Rule 69    exprlist -> exprlist , expr

Unused terminals:

    ELSE

Terminals, with rules where they appear:

(                    : 5 26 34 35 36 42 43 44 51 58
)                    : 5 26 34 35 36 42 43 44 51 58
*                    : 55
+                    : 52 57
,                    : 11 69
-                    : 53 56
/                    : 54
:                    : 13
;                    : 20 21 24
AND                  : 61
ASSIGNOP             : 29
BEGIN                : 5 30
BREAK                : 32
DF                   : 62
DO                   : 33
ELSE                 : 
END                  : 5 30
ET                   : 63
FCONST               : 37 49
FLOAT                : 14 42
FUN                  : 5
GE                   : 64
GT                   : 65
ICONST               : 38 50
ID                   : 5 13 26 40 41 44 47 48
IF                   : 31
INT                  : 17 43
LE                   : 66
LT                   : 67
NOT                  : 59
OR                   : 60
PRINT                : 36
READ                 : 34
RETURN               : 28
SKIP                 : 27
STRING               : 39
THEN                 : 31
WHILE                : 33
WRITE                : 35
[                    : 15 18 40 47
]                    : 15 18 40 47
error                : 

Nonterminals, with rules where they appear:

_1_funclist_optional : 2
_2_parmlist_optional : 5
_3_locallist_optional : 5
_4_parmlist_222c22_optional : 10
_5_225b22_expr_225d22_optional : 14
_6_225b22_expr_225d22_optional : 17
_7_exprlist_optional : 44
datatype             : 13
expr                 : 15 18 28 29 35 40 42 43 47 51 52 53 54 54 55 55 56 56 57 57 62 62 63 63 64 64 65 65 66 66 67 67 68 69
exprlist             : 26 45 69
func                 : 2 22
funclist             : 1 3
literal              : 36
local                : 20 21
locallist            : 8 20
location             : 29 34
parm                 : 10 23
parmlist             : 6 11
program              : 0
relation             : 31 33 58 59 60 60 61 61
stmt                 : 24 25 31 33
stmtlist             : 5 24 30


state 0

    (0) S' -> . program
    (1) program -> . funclist
    (2) funclist -> . _1_funclist_optional func
    (3) _1_funclist_optional -> . funclist
    (4) _1_funclist_optional -> .
    FUN             reduce using rule 4 (_1_funclist_optional -> .)

    program                        shift and go to state 1
    funclist                       shift and go to state 2
    _1_funclist_optional           shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funclist .
    (3) _1_funclist_optional -> funclist .
    $end            reduce using rule 1 (program -> funclist .)
    FUN             reduce using rule 3 (_1_funclist_optional -> funclist .)


state 3

    (2) funclist -> _1_funclist_optional . func
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    FUN             shift and go to state 5

    func                           shift and go to state 4

state 4

    (2) funclist -> _1_funclist_optional func .
    $end            reduce using rule 2 (funclist -> _1_funclist_optional func .)
    FUN             reduce using rule 2 (funclist -> _1_funclist_optional func .)


state 5

    (5) func -> FUN . ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    ID              shift and go to state 6


state 6

    (5) func -> FUN ID . ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (               shift and go to state 7


state 7

    (5) func -> FUN ID ( . _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (6) _2_parmlist_optional -> . parmlist
    (7) _2_parmlist_optional -> .
    (10) parmlist -> . _4_parmlist_222c22_optional parm
    (11) _4_parmlist_222c22_optional -> . parmlist ,
    (12) _4_parmlist_222c22_optional -> .
    )               reduce using rule 7 (_2_parmlist_optional -> .)
    ID              reduce using rule 12 (_4_parmlist_222c22_optional -> .)

    _2_parmlist_optional           shift and go to state 8
    parmlist                       shift and go to state 9
    _4_parmlist_222c22_optional    shift and go to state 10

state 8

    (5) func -> FUN ID ( _2_parmlist_optional . ) _3_locallist_optional BEGIN stmtlist END
    )               shift and go to state 11


state 9

    (6) _2_parmlist_optional -> parmlist .
    (11) _4_parmlist_222c22_optional -> parmlist . ,
    )               reduce using rule 6 (_2_parmlist_optional -> parmlist .)
    ,               shift and go to state 12


state 10

    (10) parmlist -> _4_parmlist_222c22_optional . parm
    (13) parm -> . ID : datatype
    ID              shift and go to state 14

    parm                           shift and go to state 13

state 11

    (5) func -> FUN ID ( _2_parmlist_optional ) . _3_locallist_optional BEGIN stmtlist END
    (8) _3_locallist_optional -> . locallist
    (9) _3_locallist_optional -> .
    (20) locallist -> . local ; locallist
    (21) locallist -> . local ;
    (22) local -> . func
    (23) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    BEGIN           reduce using rule 9 (_3_locallist_optional -> .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    _3_locallist_optional          shift and go to state 15
    locallist                      shift and go to state 16
    local                          shift and go to state 17
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 12

    (11) _4_parmlist_222c22_optional -> parmlist , .
    ID              reduce using rule 11 (_4_parmlist_222c22_optional -> parmlist , .)


state 13

    (10) parmlist -> _4_parmlist_222c22_optional parm .
    ,               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)
    )               reduce using rule 10 (parmlist -> _4_parmlist_222c22_optional parm .)


state 14

    (13) parm -> ID . : datatype
    :               shift and go to state 20


state 15

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional . BEGIN stmtlist END
    BEGIN           shift and go to state 21


state 16

    (8) _3_locallist_optional -> locallist .
    BEGIN           reduce using rule 8 (_3_locallist_optional -> locallist .)


state 17

    (20) locallist -> local . ; locallist
    (21) locallist -> local . ;
    ;               shift and go to state 22


state 18

    (22) local -> func .
    ;               reduce using rule 22 (local -> func .)


state 19

    (23) local -> parm .
    ;               reduce using rule 23 (local -> parm .)


state 20

    (13) parm -> ID : . datatype
    (14) datatype -> . FLOAT _5_225b22_expr_225d22_optional
    (17) datatype -> . INT _6_225b22_expr_225d22_optional
    FLOAT           shift and go to state 24
    INT             shift and go to state 25

    datatype                       shift and go to state 23

state 21

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN . stmtlist END
    (24) stmtlist -> . stmt ; stmtlist
    (25) stmtlist -> . stmt
    (26) stmt -> . ID ( exprlist )
    (27) stmt -> . SKIP
    (28) stmt -> . RETURN expr
    (29) stmt -> . location ASSIGNOP expr
    (30) stmt -> . BEGIN stmtlist END
    (31) stmt -> . IF relation THEN stmt
    (32) stmt -> . BREAK
    (33) stmt -> . WHILE relation DO stmt
    (34) stmt -> . READ ( location )
    (35) stmt -> . WRITE ( expr )
    (36) stmt -> . PRINT ( literal )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmtlist                       shift and go to state 28
    stmt                           shift and go to state 29
    location                       shift and go to state 32

state 22

    (20) locallist -> local ; . locallist
    (21) locallist -> local ; .
    (20) locallist -> . local ; locallist
    (21) locallist -> . local ;
    (22) local -> . func
    (23) local -> . parm
    (5) func -> . FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END
    (13) parm -> . ID : datatype
    BEGIN           reduce using rule 21 (locallist -> local ; .)
    FUN             shift and go to state 5
    ID              shift and go to state 14

    local                          shift and go to state 17
    locallist                      shift and go to state 39
    func                           shift and go to state 18
    parm                           shift and go to state 19

state 23

    (13) parm -> ID : datatype .
    ,               reduce using rule 13 (parm -> ID : datatype .)
    )               reduce using rule 13 (parm -> ID : datatype .)
    ;               reduce using rule 13 (parm -> ID : datatype .)


state 24

    (14) datatype -> FLOAT . _5_225b22_expr_225d22_optional
    (15) _5_225b22_expr_225d22_optional -> . [ expr ]
    (16) _5_225b22_expr_225d22_optional -> .
    [               shift and go to state 41
    ,               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    )               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 16 (_5_225b22_expr_225d22_optional -> .)

    _5_225b22_expr_225d22_optional shift and go to state 40

state 25

    (17) datatype -> INT . _6_225b22_expr_225d22_optional
    (18) _6_225b22_expr_225d22_optional -> . [ expr ]
    (19) _6_225b22_expr_225d22_optional -> .
    [               shift and go to state 43
    ,               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    )               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)
    ;               reduce using rule 19 (_6_225b22_expr_225d22_optional -> .)

    _6_225b22_expr_225d22_optional shift and go to state 42

state 26

    (26) stmt -> ID . ( exprlist )
    (40) location -> ID . [ expr ]
    (41) location -> ID .
    (               shift and go to state 44
    [               shift and go to state 45
    ASSIGNOP        reduce using rule 41 (location -> ID .)


state 27

    (30) stmt -> BEGIN . stmtlist END
    (24) stmtlist -> . stmt ; stmtlist
    (25) stmtlist -> . stmt
    (26) stmt -> . ID ( exprlist )
    (27) stmt -> . SKIP
    (28) stmt -> . RETURN expr
    (29) stmt -> . location ASSIGNOP expr
    (30) stmt -> . BEGIN stmtlist END
    (31) stmt -> . IF relation THEN stmt
    (32) stmt -> . BREAK
    (33) stmt -> . WHILE relation DO stmt
    (34) stmt -> . READ ( location )
    (35) stmt -> . WRITE ( expr )
    (36) stmt -> . PRINT ( literal )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmtlist                       shift and go to state 46
    stmt                           shift and go to state 29
    location                       shift and go to state 32

state 28

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist . END
    END             shift and go to state 47


state 29

    (24) stmtlist -> stmt . ; stmtlist
    (25) stmtlist -> stmt .
    ;               shift and go to state 48
    END             reduce using rule 25 (stmtlist -> stmt .)


state 30

    (27) stmt -> SKIP .
    ;               reduce using rule 27 (stmt -> SKIP .)
    END             reduce using rule 27 (stmt -> SKIP .)


state 31

    (28) stmt -> RETURN . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 49

state 32

    (29) stmt -> location . ASSIGNOP expr
    ASSIGNOP        shift and go to state 58


state 33

    (31) stmt -> IF . relation THEN stmt
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 59
    expr                           shift and go to state 62

state 34

    (32) stmt -> BREAK .
    ;               reduce using rule 32 (stmt -> BREAK .)
    END             reduce using rule 32 (stmt -> BREAK .)


state 35

    (33) stmt -> WHILE . relation DO stmt
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 63
    expr                           shift and go to state 62

state 36

    (34) stmt -> READ . ( location )
    (               shift and go to state 64


state 37

    (35) stmt -> WRITE . ( expr )
    (               shift and go to state 65


state 38

    (36) stmt -> PRINT . ( literal )
    (               shift and go to state 66


state 39

    (20) locallist -> local ; locallist .
    BEGIN           reduce using rule 20 (locallist -> local ; locallist .)


state 40

    (14) datatype -> FLOAT _5_225b22_expr_225d22_optional .
    ,               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    )               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)
    ;               reduce using rule 14 (datatype -> FLOAT _5_225b22_expr_225d22_optional .)


state 41

    (15) _5_225b22_expr_225d22_optional -> [ . expr ]
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 67

state 42

    (17) datatype -> INT _6_225b22_expr_225d22_optional .
    ,               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    )               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)
    ;               reduce using rule 17 (datatype -> INT _6_225b22_expr_225d22_optional .)


state 43

    (18) _6_225b22_expr_225d22_optional -> [ . expr ]
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 68

state 44

    (26) stmt -> ID ( . exprlist )
    (68) exprlist -> . expr
    (69) exprlist -> . exprlist , expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    exprlist                       shift and go to state 69
    expr                           shift and go to state 70

state 45

    (40) location -> ID [ . expr ]
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 71

state 46

    (30) stmt -> BEGIN stmtlist . END
    END             shift and go to state 72


state 47

    (5) func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .
    $end            reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    FUN             reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)
    ;               reduce using rule 5 (func -> FUN ID ( _2_parmlist_optional ) _3_locallist_optional BEGIN stmtlist END .)


state 48

    (24) stmtlist -> stmt ; . stmtlist
    (24) stmtlist -> . stmt ; stmtlist
    (25) stmtlist -> . stmt
    (26) stmt -> . ID ( exprlist )
    (27) stmt -> . SKIP
    (28) stmt -> . RETURN expr
    (29) stmt -> . location ASSIGNOP expr
    (30) stmt -> . BEGIN stmtlist END
    (31) stmt -> . IF relation THEN stmt
    (32) stmt -> . BREAK
    (33) stmt -> . WHILE relation DO stmt
    (34) stmt -> . READ ( location )
    (35) stmt -> . WRITE ( expr )
    (36) stmt -> . PRINT ( literal )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 29
    stmtlist                       shift and go to state 73
    location                       shift and go to state 32

state 49

    (28) stmt -> RETURN expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ;               reduce using rule 28 (stmt -> RETURN expr .)
    END             reduce using rule 28 (stmt -> RETURN expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 50

    (42) expr -> FLOAT . ( expr )
    (               shift and go to state 78


state 51

    (51) expr -> ( . expr )
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 79

state 52

    (43) expr -> INT . ( expr )
    (               shift and go to state 80


state 53

    (44) expr -> ID . ( _7_exprlist_optional )
    (47) expr -> ID . [ expr ]
    (48) expr -> ID .
    (               shift and go to state 81
    [               shift and go to state 82
    /               reduce using rule 48 (expr -> ID .)
    *               reduce using rule 48 (expr -> ID .)
    -               reduce using rule 48 (expr -> ID .)
    +               reduce using rule 48 (expr -> ID .)
    ;               reduce using rule 48 (expr -> ID .)
    END             reduce using rule 48 (expr -> ID .)
    DF              reduce using rule 48 (expr -> ID .)
    ET              reduce using rule 48 (expr -> ID .)
    GE              reduce using rule 48 (expr -> ID .)
    GT              reduce using rule 48 (expr -> ID .)
    LE              reduce using rule 48 (expr -> ID .)
    LT              reduce using rule 48 (expr -> ID .)
    ]               reduce using rule 48 (expr -> ID .)
    )               reduce using rule 48 (expr -> ID .)
    ,               reduce using rule 48 (expr -> ID .)
    THEN            reduce using rule 48 (expr -> ID .)
    OR              reduce using rule 48 (expr -> ID .)
    AND             reduce using rule 48 (expr -> ID .)
    DO              reduce using rule 48 (expr -> ID .)


state 54

    (49) expr -> FCONST .
    /               reduce using rule 49 (expr -> FCONST .)
    *               reduce using rule 49 (expr -> FCONST .)
    -               reduce using rule 49 (expr -> FCONST .)
    +               reduce using rule 49 (expr -> FCONST .)
    ;               reduce using rule 49 (expr -> FCONST .)
    END             reduce using rule 49 (expr -> FCONST .)
    DF              reduce using rule 49 (expr -> FCONST .)
    ET              reduce using rule 49 (expr -> FCONST .)
    GE              reduce using rule 49 (expr -> FCONST .)
    GT              reduce using rule 49 (expr -> FCONST .)
    LE              reduce using rule 49 (expr -> FCONST .)
    LT              reduce using rule 49 (expr -> FCONST .)
    ]               reduce using rule 49 (expr -> FCONST .)
    )               reduce using rule 49 (expr -> FCONST .)
    ,               reduce using rule 49 (expr -> FCONST .)
    THEN            reduce using rule 49 (expr -> FCONST .)
    OR              reduce using rule 49 (expr -> FCONST .)
    AND             reduce using rule 49 (expr -> FCONST .)
    DO              reduce using rule 49 (expr -> FCONST .)


state 55

    (50) expr -> ICONST .
    /               reduce using rule 50 (expr -> ICONST .)
    *               reduce using rule 50 (expr -> ICONST .)
    -               reduce using rule 50 (expr -> ICONST .)
    +               reduce using rule 50 (expr -> ICONST .)
    ;               reduce using rule 50 (expr -> ICONST .)
    END             reduce using rule 50 (expr -> ICONST .)
    DF              reduce using rule 50 (expr -> ICONST .)
    ET              reduce using rule 50 (expr -> ICONST .)
    GE              reduce using rule 50 (expr -> ICONST .)
    GT              reduce using rule 50 (expr -> ICONST .)
    LE              reduce using rule 50 (expr -> ICONST .)
    LT              reduce using rule 50 (expr -> ICONST .)
    ]               reduce using rule 50 (expr -> ICONST .)
    )               reduce using rule 50 (expr -> ICONST .)
    ,               reduce using rule 50 (expr -> ICONST .)
    THEN            reduce using rule 50 (expr -> ICONST .)
    OR              reduce using rule 50 (expr -> ICONST .)
    AND             reduce using rule 50 (expr -> ICONST .)
    DO              reduce using rule 50 (expr -> ICONST .)


state 56

    (52) expr -> + . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 83

state 57

    (53) expr -> - . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 84

state 58

    (29) stmt -> location ASSIGNOP . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 85

state 59

    (31) stmt -> IF relation . THEN stmt
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    THEN            shift and go to state 86
    OR              shift and go to state 87
    AND             shift and go to state 88


state 60

    (58) relation -> ( . relation )
    (51) expr -> ( . expr )
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 89
    expr                           shift and go to state 90

state 61

    (59) relation -> NOT . relation
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 91
    expr                           shift and go to state 62

state 62

    (62) relation -> expr . DF expr
    (63) relation -> expr . ET expr
    (64) relation -> expr . GE expr
    (65) relation -> expr . GT expr
    (66) relation -> expr . LE expr
    (67) relation -> expr . LT expr
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    DF              shift and go to state 92
    ET              shift and go to state 93
    GE              shift and go to state 94
    GT              shift and go to state 95
    LE              shift and go to state 96
    LT              shift and go to state 97
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 63

    (33) stmt -> WHILE relation . DO stmt
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    DO              shift and go to state 98
    OR              shift and go to state 87
    AND             shift and go to state 88


state 64

    (34) stmt -> READ ( . location )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 100

    location                       shift and go to state 99

state 65

    (35) stmt -> WRITE ( . expr )
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 101

state 66

    (36) stmt -> PRINT ( . literal )
    (37) literal -> . FCONST
    (38) literal -> . ICONST
    (39) literal -> . STRING
    FCONST          shift and go to state 103
    ICONST          shift and go to state 104
    STRING          shift and go to state 105

    literal                        shift and go to state 102

state 67

    (15) _5_225b22_expr_225d22_optional -> [ expr . ]
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ]               shift and go to state 106
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 68

    (18) _6_225b22_expr_225d22_optional -> [ expr . ]
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ]               shift and go to state 107
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 69

    (26) stmt -> ID ( exprlist . )
    (69) exprlist -> exprlist . , expr
    )               shift and go to state 108
    ,               shift and go to state 109


state 70

    (68) exprlist -> expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               reduce using rule 68 (exprlist -> expr .)
    ,               reduce using rule 68 (exprlist -> expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 71

    (40) location -> ID [ expr . ]
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ]               shift and go to state 110
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 72

    (30) stmt -> BEGIN stmtlist END .
    ;               reduce using rule 30 (stmt -> BEGIN stmtlist END .)
    END             reduce using rule 30 (stmt -> BEGIN stmtlist END .)


state 73

    (24) stmtlist -> stmt ; stmtlist .
    END             reduce using rule 24 (stmtlist -> stmt ; stmtlist .)


state 74

    (54) expr -> expr / . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 111

state 75

    (55) expr -> expr * . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 112

state 76

    (56) expr -> expr - . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 113

state 77

    (57) expr -> expr + . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 114

state 78

    (42) expr -> FLOAT ( . expr )
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 115

state 79

    (51) expr -> ( expr . )
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               shift and go to state 116
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 80

    (43) expr -> INT ( . expr )
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 117

state 81

    (44) expr -> ID ( . _7_exprlist_optional )
    (45) _7_exprlist_optional -> . exprlist
    (46) _7_exprlist_optional -> .
    (68) exprlist -> . expr
    (69) exprlist -> . exprlist , expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    )               reduce using rule 46 (_7_exprlist_optional -> .)
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    _7_exprlist_optional           shift and go to state 118
    exprlist                       shift and go to state 119
    expr                           shift and go to state 70

state 82

    (47) expr -> ID [ . expr ]
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 120

state 83

    (52) expr -> + expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    /               reduce using rule 52 (expr -> + expr .)
    *               reduce using rule 52 (expr -> + expr .)
    -               reduce using rule 52 (expr -> + expr .)
    +               reduce using rule 52 (expr -> + expr .)
    ;               reduce using rule 52 (expr -> + expr .)
    END             reduce using rule 52 (expr -> + expr .)
    DF              reduce using rule 52 (expr -> + expr .)
    ET              reduce using rule 52 (expr -> + expr .)
    GE              reduce using rule 52 (expr -> + expr .)
    GT              reduce using rule 52 (expr -> + expr .)
    LE              reduce using rule 52 (expr -> + expr .)
    LT              reduce using rule 52 (expr -> + expr .)
    ]               reduce using rule 52 (expr -> + expr .)
    )               reduce using rule 52 (expr -> + expr .)
    ,               reduce using rule 52 (expr -> + expr .)
    THEN            reduce using rule 52 (expr -> + expr .)
    OR              reduce using rule 52 (expr -> + expr .)
    AND             reduce using rule 52 (expr -> + expr .)
    DO              reduce using rule 52 (expr -> + expr .)


state 84

    (53) expr -> - expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    /               reduce using rule 53 (expr -> - expr .)
    *               reduce using rule 53 (expr -> - expr .)
    -               reduce using rule 53 (expr -> - expr .)
    +               reduce using rule 53 (expr -> - expr .)
    ;               reduce using rule 53 (expr -> - expr .)
    END             reduce using rule 53 (expr -> - expr .)
    DF              reduce using rule 53 (expr -> - expr .)
    ET              reduce using rule 53 (expr -> - expr .)
    GE              reduce using rule 53 (expr -> - expr .)
    GT              reduce using rule 53 (expr -> - expr .)
    LE              reduce using rule 53 (expr -> - expr .)
    LT              reduce using rule 53 (expr -> - expr .)
    ]               reduce using rule 53 (expr -> - expr .)
    )               reduce using rule 53 (expr -> - expr .)
    ,               reduce using rule 53 (expr -> - expr .)
    THEN            reduce using rule 53 (expr -> - expr .)
    OR              reduce using rule 53 (expr -> - expr .)
    AND             reduce using rule 53 (expr -> - expr .)
    DO              reduce using rule 53 (expr -> - expr .)


state 85

    (29) stmt -> location ASSIGNOP expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ;               reduce using rule 29 (stmt -> location ASSIGNOP expr .)
    END             reduce using rule 29 (stmt -> location ASSIGNOP expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 86

    (31) stmt -> IF relation THEN . stmt
    (26) stmt -> . ID ( exprlist )
    (27) stmt -> . SKIP
    (28) stmt -> . RETURN expr
    (29) stmt -> . location ASSIGNOP expr
    (30) stmt -> . BEGIN stmtlist END
    (31) stmt -> . IF relation THEN stmt
    (32) stmt -> . BREAK
    (33) stmt -> . WHILE relation DO stmt
    (34) stmt -> . READ ( location )
    (35) stmt -> . WRITE ( expr )
    (36) stmt -> . PRINT ( literal )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 121
    location                       shift and go to state 32

state 87

    (60) relation -> relation OR . relation
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 122
    expr                           shift and go to state 62

state 88

    (61) relation -> relation AND . relation
    (58) relation -> . ( relation )
    (59) relation -> . NOT relation
    (60) relation -> . relation OR relation
    (61) relation -> . relation AND relation
    (62) relation -> . expr DF expr
    (63) relation -> . expr ET expr
    (64) relation -> . expr GE expr
    (65) relation -> . expr GT expr
    (66) relation -> . expr LE expr
    (67) relation -> . expr LT expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    (               shift and go to state 60
    NOT             shift and go to state 61
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    +               shift and go to state 56
    -               shift and go to state 57

    relation                       shift and go to state 123
    expr                           shift and go to state 62

state 89

    (58) relation -> ( relation . )
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    )               shift and go to state 124
    OR              shift and go to state 87
    AND             shift and go to state 88


state 90

    (51) expr -> ( expr . )
    (62) relation -> expr . DF expr
    (63) relation -> expr . ET expr
    (64) relation -> expr . GE expr
    (65) relation -> expr . GT expr
    (66) relation -> expr . LE expr
    (67) relation -> expr . LT expr
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               shift and go to state 116
    DF              shift and go to state 92
    ET              shift and go to state 93
    GE              shift and go to state 94
    GT              shift and go to state 95
    LE              shift and go to state 96
    LT              shift and go to state 97
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 91

    (59) relation -> NOT relation .
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    THEN            reduce using rule 59 (relation -> NOT relation .)
    OR              reduce using rule 59 (relation -> NOT relation .)
    AND             reduce using rule 59 (relation -> NOT relation .)
    DO              reduce using rule 59 (relation -> NOT relation .)
    )               reduce using rule 59 (relation -> NOT relation .)


state 92

    (62) relation -> expr DF . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 125

state 93

    (63) relation -> expr ET . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 126

state 94

    (64) relation -> expr GE . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 127

state 95

    (65) relation -> expr GT . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 128

state 96

    (66) relation -> expr LE . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 129

state 97

    (67) relation -> expr LT . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 130

state 98

    (33) stmt -> WHILE relation DO . stmt
    (26) stmt -> . ID ( exprlist )
    (27) stmt -> . SKIP
    (28) stmt -> . RETURN expr
    (29) stmt -> . location ASSIGNOP expr
    (30) stmt -> . BEGIN stmtlist END
    (31) stmt -> . IF relation THEN stmt
    (32) stmt -> . BREAK
    (33) stmt -> . WHILE relation DO stmt
    (34) stmt -> . READ ( location )
    (35) stmt -> . WRITE ( expr )
    (36) stmt -> . PRINT ( literal )
    (40) location -> . ID [ expr ]
    (41) location -> . ID
    ID              shift and go to state 26
    SKIP            shift and go to state 30
    RETURN          shift and go to state 31
    BEGIN           shift and go to state 27
    IF              shift and go to state 33
    BREAK           shift and go to state 34
    WHILE           shift and go to state 35
    READ            shift and go to state 36
    WRITE           shift and go to state 37
    PRINT           shift and go to state 38

    stmt                           shift and go to state 131
    location                       shift and go to state 32

state 99

    (34) stmt -> READ ( location . )
    )               shift and go to state 132


state 100

    (40) location -> ID . [ expr ]
    (41) location -> ID .
    [               shift and go to state 45
    )               reduce using rule 41 (location -> ID .)


state 101

    (35) stmt -> WRITE ( expr . )
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               shift and go to state 133
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 102

    (36) stmt -> PRINT ( literal . )
    )               shift and go to state 134


state 103

    (37) literal -> FCONST .
    )               reduce using rule 37 (literal -> FCONST .)


state 104

    (38) literal -> ICONST .
    )               reduce using rule 38 (literal -> ICONST .)


state 105

    (39) literal -> STRING .
    )               reduce using rule 39 (literal -> STRING .)


state 106

    (15) _5_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 15 (_5_225b22_expr_225d22_optional -> [ expr ] .)


state 107

    (18) _6_225b22_expr_225d22_optional -> [ expr ] .
    ,               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    )               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)
    ;               reduce using rule 18 (_6_225b22_expr_225d22_optional -> [ expr ] .)


state 108

    (26) stmt -> ID ( exprlist ) .
    ;               reduce using rule 26 (stmt -> ID ( exprlist ) .)
    END             reduce using rule 26 (stmt -> ID ( exprlist ) .)


state 109

    (69) exprlist -> exprlist , . expr
    (42) expr -> . FLOAT ( expr )
    (43) expr -> . INT ( expr )
    (44) expr -> . ID ( _7_exprlist_optional )
    (47) expr -> . ID [ expr ]
    (48) expr -> . ID
    (49) expr -> . FCONST
    (50) expr -> . ICONST
    (51) expr -> . ( expr )
    (52) expr -> . + expr
    (53) expr -> . - expr
    (54) expr -> . expr / expr
    (55) expr -> . expr * expr
    (56) expr -> . expr - expr
    (57) expr -> . expr + expr
    FLOAT           shift and go to state 50
    INT             shift and go to state 52
    ID              shift and go to state 53
    FCONST          shift and go to state 54
    ICONST          shift and go to state 55
    (               shift and go to state 51
    +               shift and go to state 56
    -               shift and go to state 57

    expr                           shift and go to state 135

state 110

    (40) location -> ID [ expr ] .
    ASSIGNOP        reduce using rule 40 (location -> ID [ expr ] .)
    )               reduce using rule 40 (location -> ID [ expr ] .)


state 111

    (54) expr -> expr / expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    /               reduce using rule 54 (expr -> expr / expr .)
    *               reduce using rule 54 (expr -> expr / expr .)
    -               reduce using rule 54 (expr -> expr / expr .)
    +               reduce using rule 54 (expr -> expr / expr .)
    ;               reduce using rule 54 (expr -> expr / expr .)
    END             reduce using rule 54 (expr -> expr / expr .)
    DF              reduce using rule 54 (expr -> expr / expr .)
    ET              reduce using rule 54 (expr -> expr / expr .)
    GE              reduce using rule 54 (expr -> expr / expr .)
    GT              reduce using rule 54 (expr -> expr / expr .)
    LE              reduce using rule 54 (expr -> expr / expr .)
    LT              reduce using rule 54 (expr -> expr / expr .)
    ]               reduce using rule 54 (expr -> expr / expr .)
    )               reduce using rule 54 (expr -> expr / expr .)
    ,               reduce using rule 54 (expr -> expr / expr .)
    THEN            reduce using rule 54 (expr -> expr / expr .)
    OR              reduce using rule 54 (expr -> expr / expr .)
    AND             reduce using rule 54 (expr -> expr / expr .)
    DO              reduce using rule 54 (expr -> expr / expr .)


state 112

    (55) expr -> expr * expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    /               reduce using rule 55 (expr -> expr * expr .)
    *               reduce using rule 55 (expr -> expr * expr .)
    -               reduce using rule 55 (expr -> expr * expr .)
    +               reduce using rule 55 (expr -> expr * expr .)
    ;               reduce using rule 55 (expr -> expr * expr .)
    END             reduce using rule 55 (expr -> expr * expr .)
    DF              reduce using rule 55 (expr -> expr * expr .)
    ET              reduce using rule 55 (expr -> expr * expr .)
    GE              reduce using rule 55 (expr -> expr * expr .)
    GT              reduce using rule 55 (expr -> expr * expr .)
    LE              reduce using rule 55 (expr -> expr * expr .)
    LT              reduce using rule 55 (expr -> expr * expr .)
    ]               reduce using rule 55 (expr -> expr * expr .)
    )               reduce using rule 55 (expr -> expr * expr .)
    ,               reduce using rule 55 (expr -> expr * expr .)
    THEN            reduce using rule 55 (expr -> expr * expr .)
    OR              reduce using rule 55 (expr -> expr * expr .)
    AND             reduce using rule 55 (expr -> expr * expr .)
    DO              reduce using rule 55 (expr -> expr * expr .)


state 113

    (56) expr -> expr - expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    -               reduce using rule 56 (expr -> expr - expr .)
    +               reduce using rule 56 (expr -> expr - expr .)
    ;               reduce using rule 56 (expr -> expr - expr .)
    END             reduce using rule 56 (expr -> expr - expr .)
    DF              reduce using rule 56 (expr -> expr - expr .)
    ET              reduce using rule 56 (expr -> expr - expr .)
    GE              reduce using rule 56 (expr -> expr - expr .)
    GT              reduce using rule 56 (expr -> expr - expr .)
    LE              reduce using rule 56 (expr -> expr - expr .)
    LT              reduce using rule 56 (expr -> expr - expr .)
    ]               reduce using rule 56 (expr -> expr - expr .)
    )               reduce using rule 56 (expr -> expr - expr .)
    ,               reduce using rule 56 (expr -> expr - expr .)
    THEN            reduce using rule 56 (expr -> expr - expr .)
    OR              reduce using rule 56 (expr -> expr - expr .)
    AND             reduce using rule 56 (expr -> expr - expr .)
    DO              reduce using rule 56 (expr -> expr - expr .)
    /               shift and go to state 74
    *               shift and go to state 75


state 114

    (57) expr -> expr + expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    -               reduce using rule 57 (expr -> expr + expr .)
    +               reduce using rule 57 (expr -> expr + expr .)
    ;               reduce using rule 57 (expr -> expr + expr .)
    END             reduce using rule 57 (expr -> expr + expr .)
    DF              reduce using rule 57 (expr -> expr + expr .)
    ET              reduce using rule 57 (expr -> expr + expr .)
    GE              reduce using rule 57 (expr -> expr + expr .)
    GT              reduce using rule 57 (expr -> expr + expr .)
    LE              reduce using rule 57 (expr -> expr + expr .)
    LT              reduce using rule 57 (expr -> expr + expr .)
    ]               reduce using rule 57 (expr -> expr + expr .)
    )               reduce using rule 57 (expr -> expr + expr .)
    ,               reduce using rule 57 (expr -> expr + expr .)
    THEN            reduce using rule 57 (expr -> expr + expr .)
    OR              reduce using rule 57 (expr -> expr + expr .)
    AND             reduce using rule 57 (expr -> expr + expr .)
    DO              reduce using rule 57 (expr -> expr + expr .)
    /               shift and go to state 74
    *               shift and go to state 75


state 115

    (42) expr -> FLOAT ( expr . )
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               shift and go to state 136
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 116

    (51) expr -> ( expr ) .
    /               reduce using rule 51 (expr -> ( expr ) .)
    *               reduce using rule 51 (expr -> ( expr ) .)
    -               reduce using rule 51 (expr -> ( expr ) .)
    +               reduce using rule 51 (expr -> ( expr ) .)
    ;               reduce using rule 51 (expr -> ( expr ) .)
    END             reduce using rule 51 (expr -> ( expr ) .)
    DF              reduce using rule 51 (expr -> ( expr ) .)
    ET              reduce using rule 51 (expr -> ( expr ) .)
    GE              reduce using rule 51 (expr -> ( expr ) .)
    GT              reduce using rule 51 (expr -> ( expr ) .)
    LE              reduce using rule 51 (expr -> ( expr ) .)
    LT              reduce using rule 51 (expr -> ( expr ) .)
    ]               reduce using rule 51 (expr -> ( expr ) .)
    )               reduce using rule 51 (expr -> ( expr ) .)
    ,               reduce using rule 51 (expr -> ( expr ) .)
    THEN            reduce using rule 51 (expr -> ( expr ) .)
    OR              reduce using rule 51 (expr -> ( expr ) .)
    AND             reduce using rule 51 (expr -> ( expr ) .)
    DO              reduce using rule 51 (expr -> ( expr ) .)


state 117

    (43) expr -> INT ( expr . )
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               shift and go to state 137
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 118

    (44) expr -> ID ( _7_exprlist_optional . )
    )               shift and go to state 138


state 119

    (45) _7_exprlist_optional -> exprlist .
    (69) exprlist -> exprlist . , expr
    )               reduce using rule 45 (_7_exprlist_optional -> exprlist .)
    ,               shift and go to state 109


state 120

    (47) expr -> ID [ expr . ]
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    ]               shift and go to state 139
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 121

    (31) stmt -> IF relation THEN stmt .
    ;               reduce using rule 31 (stmt -> IF relation THEN stmt .)
    END             reduce using rule 31 (stmt -> IF relation THEN stmt .)


state 122

    (60) relation -> relation OR relation .
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    THEN            reduce using rule 60 (relation -> relation OR relation .)
    OR              reduce using rule 60 (relation -> relation OR relation .)
    DO              reduce using rule 60 (relation -> relation OR relation .)
    )               reduce using rule 60 (relation -> relation OR relation .)
    AND             shift and go to state 88


state 123

    (61) relation -> relation AND relation .
    (60) relation -> relation . OR relation
    (61) relation -> relation . AND relation
    THEN            reduce using rule 61 (relation -> relation AND relation .)
    OR              reduce using rule 61 (relation -> relation AND relation .)
    AND             reduce using rule 61 (relation -> relation AND relation .)
    DO              reduce using rule 61 (relation -> relation AND relation .)
    )               reduce using rule 61 (relation -> relation AND relation .)


state 124

    (58) relation -> ( relation ) .
    THEN            reduce using rule 58 (relation -> ( relation ) .)
    OR              reduce using rule 58 (relation -> ( relation ) .)
    AND             reduce using rule 58 (relation -> ( relation ) .)
    DO              reduce using rule 58 (relation -> ( relation ) .)
    )               reduce using rule 58 (relation -> ( relation ) .)


state 125

    (62) relation -> expr DF expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 62 (relation -> expr DF expr .)
    OR              reduce using rule 62 (relation -> expr DF expr .)
    AND             reduce using rule 62 (relation -> expr DF expr .)
    DO              reduce using rule 62 (relation -> expr DF expr .)
    )               reduce using rule 62 (relation -> expr DF expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 126

    (63) relation -> expr ET expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 63 (relation -> expr ET expr .)
    OR              reduce using rule 63 (relation -> expr ET expr .)
    AND             reduce using rule 63 (relation -> expr ET expr .)
    DO              reduce using rule 63 (relation -> expr ET expr .)
    )               reduce using rule 63 (relation -> expr ET expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 127

    (64) relation -> expr GE expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 64 (relation -> expr GE expr .)
    OR              reduce using rule 64 (relation -> expr GE expr .)
    AND             reduce using rule 64 (relation -> expr GE expr .)
    DO              reduce using rule 64 (relation -> expr GE expr .)
    )               reduce using rule 64 (relation -> expr GE expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 128

    (65) relation -> expr GT expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 65 (relation -> expr GT expr .)
    OR              reduce using rule 65 (relation -> expr GT expr .)
    AND             reduce using rule 65 (relation -> expr GT expr .)
    DO              reduce using rule 65 (relation -> expr GT expr .)
    )               reduce using rule 65 (relation -> expr GT expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 129

    (66) relation -> expr LE expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 66 (relation -> expr LE expr .)
    OR              reduce using rule 66 (relation -> expr LE expr .)
    AND             reduce using rule 66 (relation -> expr LE expr .)
    DO              reduce using rule 66 (relation -> expr LE expr .)
    )               reduce using rule 66 (relation -> expr LE expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 130

    (67) relation -> expr LT expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    THEN            reduce using rule 67 (relation -> expr LT expr .)
    OR              reduce using rule 67 (relation -> expr LT expr .)
    AND             reduce using rule 67 (relation -> expr LT expr .)
    DO              reduce using rule 67 (relation -> expr LT expr .)
    )               reduce using rule 67 (relation -> expr LT expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 131

    (33) stmt -> WHILE relation DO stmt .
    ;               reduce using rule 33 (stmt -> WHILE relation DO stmt .)
    END             reduce using rule 33 (stmt -> WHILE relation DO stmt .)


state 132

    (34) stmt -> READ ( location ) .
    ;               reduce using rule 34 (stmt -> READ ( location ) .)
    END             reduce using rule 34 (stmt -> READ ( location ) .)


state 133

    (35) stmt -> WRITE ( expr ) .
    ;               reduce using rule 35 (stmt -> WRITE ( expr ) .)
    END             reduce using rule 35 (stmt -> WRITE ( expr ) .)


state 134

    (36) stmt -> PRINT ( literal ) .
    ;               reduce using rule 36 (stmt -> PRINT ( literal ) .)
    END             reduce using rule 36 (stmt -> PRINT ( literal ) .)


state 135

    (69) exprlist -> exprlist , expr .
    (54) expr -> expr . / expr
    (55) expr -> expr . * expr
    (56) expr -> expr . - expr
    (57) expr -> expr . + expr
    )               reduce using rule 69 (exprlist -> exprlist , expr .)
    ,               reduce using rule 69 (exprlist -> exprlist , expr .)
    /               shift and go to state 74
    *               shift and go to state 75
    -               shift and go to state 76
    +               shift and go to state 77


state 136

    (42) expr -> FLOAT ( expr ) .
    /               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    *               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    -               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    +               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    ;               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    END             reduce using rule 42 (expr -> FLOAT ( expr ) .)
    DF              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    ET              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    GE              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    GT              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    LE              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    LT              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    ]               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    )               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    ,               reduce using rule 42 (expr -> FLOAT ( expr ) .)
    THEN            reduce using rule 42 (expr -> FLOAT ( expr ) .)
    OR              reduce using rule 42 (expr -> FLOAT ( expr ) .)
    AND             reduce using rule 42 (expr -> FLOAT ( expr ) .)
    DO              reduce using rule 42 (expr -> FLOAT ( expr ) .)


state 137

    (43) expr -> INT ( expr ) .
    /               reduce using rule 43 (expr -> INT ( expr ) .)
    *               reduce using rule 43 (expr -> INT ( expr ) .)
    -               reduce using rule 43 (expr -> INT ( expr ) .)
    +               reduce using rule 43 (expr -> INT ( expr ) .)
    ;               reduce using rule 43 (expr -> INT ( expr ) .)
    END             reduce using rule 43 (expr -> INT ( expr ) .)
    DF              reduce using rule 43 (expr -> INT ( expr ) .)
    ET              reduce using rule 43 (expr -> INT ( expr ) .)
    GE              reduce using rule 43 (expr -> INT ( expr ) .)
    GT              reduce using rule 43 (expr -> INT ( expr ) .)
    LE              reduce using rule 43 (expr -> INT ( expr ) .)
    LT              reduce using rule 43 (expr -> INT ( expr ) .)
    ]               reduce using rule 43 (expr -> INT ( expr ) .)
    )               reduce using rule 43 (expr -> INT ( expr ) .)
    ,               reduce using rule 43 (expr -> INT ( expr ) .)
    THEN            reduce using rule 43 (expr -> INT ( expr ) .)
    OR              reduce using rule 43 (expr -> INT ( expr ) .)
    AND             reduce using rule 43 (expr -> INT ( expr ) .)
    DO              reduce using rule 43 (expr -> INT ( expr ) .)


state 138

    (44) expr -> ID ( _7_exprlist_optional ) .
    /               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    *               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    -               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    +               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    ;               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    END             reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    DF              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    ET              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    GE              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    GT              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    LE              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    LT              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    ]               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    )               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    ,               reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    THEN            reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    OR              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    AND             reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)
    DO              reduce using rule 44 (expr -> ID ( _7_exprlist_optional ) .)


state 139

    (47) expr -> ID [ expr ] .
    /               reduce using rule 47 (expr -> ID [ expr ] .)
    *               reduce using rule 47 (expr -> ID [ expr ] .)
    -               reduce using rule 47 (expr -> ID [ expr ] .)
    +               reduce using rule 47 (expr -> ID [ expr ] .)
    ;               reduce using rule 47 (expr -> ID [ expr ] .)
    END             reduce using rule 47 (expr -> ID [ expr ] .)
    DF              reduce using rule 47 (expr -> ID [ expr ] .)
    ET              reduce using rule 47 (expr -> ID [ expr ] .)
    GE              reduce using rule 47 (expr -> ID [ expr ] .)
    GT              reduce using rule 47 (expr -> ID [ expr ] .)
    LE              reduce using rule 47 (expr -> ID [ expr ] .)
    LT              reduce using rule 47 (expr -> ID [ expr ] .)
    ]               reduce using rule 47 (expr -> ID [ expr ] .)
    )               reduce using rule 47 (expr -> ID [ expr ] .)
    ,               reduce using rule 47 (expr -> ID [ expr ] .)
    THEN            reduce using rule 47 (expr -> ID [ expr ] .)
    OR              reduce using rule 47 (expr -> ID [ expr ] .)
    AND             reduce using rule 47 (expr -> ID [ expr ] .)
    DO              reduce using rule 47 (expr -> ID [ expr ] .)
